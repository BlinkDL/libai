[08/23 03:31:08] libai INFO: Rank of current process: 0. World size: 1
[08/23 03:31:08] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 03:31:08] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m12[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m2048[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 03:31:08] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 03:31:08] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 03:31:09] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.702 seconds
[08/23 03:31:09] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.703 seconds
[08/23 03:31:09] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 03:31:15] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 03:31:55] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=2048)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (6): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (7): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (8): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (9): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (10): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (11): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=2048, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=2048, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=2048, out_features=256, bias=False, parallel=col)
)
[08/23 03:41:34] libai INFO: Rank of current process: 0. World size: 1
[08/23 03:41:34] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 03:41:34] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m12[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m2048[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 03:41:34] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 03:41:34] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 03:41:34] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.046 seconds
[08/23 03:41:34] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/23 03:41:34] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 03:41:36] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 03:41:52] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=2048)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (6): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (7): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (8): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (9): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (10): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
    (11): Block(
      (ln1): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (output): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=2048, out_features=8192, bias=False, parallel=col)
        (receptance): Linear1D(in_features=2048, out_features=2048, bias=False, parallel=col)
        (value): Linear1D(in_features=8192, out_features=2048, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=2048, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=2048, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=2048, out_features=256, bias=False, parallel=col)
)
[08/23 03:41:53] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/23 03:43:36] libai INFO: Rank of current process: 0. World size: 1
[08/23 03:43:36] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 03:43:36] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 03:43:36] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 03:43:36] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 03:43:36] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.063 seconds
[08/23 03:43:36] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.064 seconds
[08/23 03:43:36] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 03:43:38] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 03:43:41] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/23 03:43:42] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/23 03:43:42] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 03:43:42] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 03:43:57] lb.engine.trainer ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/zhangxiaoyu/libai/libai/engine/trainer.py", line 146, in train
    self.run_step()
  File "/home/zhangxiaoyu/libai/libai/engine/default.py", line 476, in run_step
    self._trainer.run_step(self.get_batch, self.cfg.train.input_placement_device)
  File "/home/zhangxiaoyu/libai/libai/engine/trainer.py", line 354, in run_step
    self.write_metrics(loss_dict, data_time)
  File "/home/zhangxiaoyu/libai/libai/engine/trainer.py", line 218, in write_metrics
    txt = open("/home/zhangxiaoyu/libai/projects/RWKV_v4/results/libai_bf16_defaultSize_graph_nolossscale_test2.txt", "a")
FileNotFoundError: [Errno 2] No such file or directory: '/home/zhangxiaoyu/libai/projects/RWKV_v4/results/libai_bf16_defaultSize_graph_nolossscale_test2.txt'
[08/23 03:43:57] lb.engine.hooks INFO: Total training time: 0:00:14 (0:00:00 on hooks)
[08/23 03:44:45] libai INFO: Rank of current process: 0. World size: 1
[08/23 03:44:45] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 03:44:45] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 03:44:45] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 03:44:45] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 03:44:45] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.042 seconds
[08/23 03:44:45] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.043 seconds
[08/23 03:44:45] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 03:44:47] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 03:44:50] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/23 03:44:50] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/23 03:44:51] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 03:44:51] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 03:45:07] lb.utils.events INFO:  eta: 0:08:18  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1062  time: 0.0498 s/iter  data_time: 0.0009 s/iter total_throughput: 80.24 samples/s lr: 8.00e-04  
[08/23 03:45:08] lb.utils.events INFO:  eta: 0:08:16  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09185  time: 0.0496 s/iter  data_time: 0.0009 s/iter total_throughput: 80.60 samples/s lr: 8.00e-04  
[08/23 03:45:09] lb.utils.events INFO:  eta: 0:08:15  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08387  time: 0.0499 s/iter  data_time: 0.0012 s/iter total_throughput: 80.23 samples/s lr: 8.00e-04  
[08/23 03:45:10] lb.utils.events INFO:  eta: 0:08:14  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07931  time: 0.0498 s/iter  data_time: 0.0010 s/iter total_throughput: 80.37 samples/s lr: 8.00e-04  
[08/23 03:45:11] lb.utils.events INFO:  eta: 0:08:14  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06434  time: 0.0498 s/iter  data_time: 0.0009 s/iter total_throughput: 80.33 samples/s lr: 8.00e-04  
[08/23 03:45:12] lb.utils.events INFO:  eta: 0:08:13  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04802  time: 0.0498 s/iter  data_time: 0.0009 s/iter total_throughput: 80.29 samples/s lr: 8.00e-04  
[08/23 03:45:13] lb.utils.events INFO:  eta: 0:08:12  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03276  time: 0.0498 s/iter  data_time: 0.0010 s/iter total_throughput: 80.36 samples/s lr: 8.00e-04  
[08/23 03:45:14] lb.utils.events INFO:  eta: 0:08:11  iteration: 159/10000  consumed_samples: 640  total_loss: 0.0189  time: 0.0498 s/iter  data_time: 0.0009 s/iter total_throughput: 80.31 samples/s lr: 8.00e-04  
[08/23 03:45:15] lb.utils.events INFO:  eta: 0:08:11  iteration: 179/10000  consumed_samples: 720  total_loss: 0.009708  time: 0.0499 s/iter  data_time: 0.0013 s/iter total_throughput: 80.22 samples/s lr: 8.00e-04  
[08/23 03:45:16] lb.utils.events INFO:  eta: 0:08:10  iteration: 199/10000  consumed_samples: 800  total_loss: 0.004953  time: 0.0499 s/iter  data_time: 0.0009 s/iter total_throughput: 80.20 samples/s lr: 8.00e-04  
[08/23 03:45:17] lb.utils.events INFO:  eta: 0:08:09  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0008194  time: 0.0499 s/iter  data_time: 0.0009 s/iter total_throughput: 80.14 samples/s lr: 8.00e-04  
[08/23 03:45:18] lb.utils.events INFO:  eta: 0:08:08  iteration: 239/10000  consumed_samples: 960  total_loss: 2.57e-05  time: 0.0499 s/iter  data_time: 0.0008 s/iter total_throughput: 80.15 samples/s lr: 8.00e-04  
[08/23 03:45:19] lb.utils.events INFO:  eta: 0:08:07  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.088e-05  time: 0.0499 s/iter  data_time: 0.0010 s/iter total_throughput: 80.13 samples/s lr: 8.00e-04  
[08/23 03:45:20] lb.utils.events INFO:  eta: 0:08:06  iteration: 279/10000  consumed_samples: 1120  total_loss: 7.142e-06  time: 0.0499 s/iter  data_time: 0.0010 s/iter total_throughput: 80.11 samples/s lr: 8.00e-04  
[08/23 03:45:21] lb.utils.events INFO:  eta: 0:08:05  iteration: 299/10000  consumed_samples: 1200  total_loss: 5.053e-06  time: 0.0499 s/iter  data_time: 0.0010 s/iter total_throughput: 80.18 samples/s lr: 8.00e-04  
[08/23 10:18:44] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:18:44] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:18:44] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/23 10:18:44] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:18:44] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:18:44] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.050 seconds
[08/23 10:18:44] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/23 10:18:44] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:18:46] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:18:49] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:18:50] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/23 10:20:50] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:20:50] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:20:50] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/23 10:20:50] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:20:50] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:20:50] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/23 10:20:50] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/23 10:20:50] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:20:52] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:20:55] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:20:56] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:20:56] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:21:05] lb.utils.events INFO:  eta: 0:12:54  iteration: 19/10000  consumed_samples: 80  total_loss: 11.31  time: 0.0776 s/iter  data_time: 0.0008 s/iter total_throughput: 51.55 samples/s lr: 8.00e-04  
[08/23 10:21:06] lb.utils.events INFO:  eta: 0:12:54  iteration: 39/10000  consumed_samples: 160  total_loss: 5.536  time: 0.0778 s/iter  data_time: 0.0009 s/iter total_throughput: 51.42 samples/s lr: 8.00e-04  
[08/23 10:21:08] lb.utils.events INFO:  eta: 0:12:53  iteration: 59/10000  consumed_samples: 240  total_loss: 4.151  time: 0.0779 s/iter  data_time: 0.0006 s/iter total_throughput: 51.36 samples/s lr: 8.00e-04  
[08/23 10:21:10] lb.utils.events INFO:  eta: 0:12:52  iteration: 79/10000  consumed_samples: 320  total_loss: 3.236  time: 0.0779 s/iter  data_time: 0.0004 s/iter total_throughput: 51.35 samples/s lr: 8.00e-04  
[08/23 10:21:11] lb.utils.events INFO:  eta: 0:12:51  iteration: 99/10000  consumed_samples: 400  total_loss: 2.974  time: 0.0780 s/iter  data_time: 0.0005 s/iter total_throughput: 51.29 samples/s lr: 8.00e-04  
[08/23 10:21:13] lb.utils.events INFO:  eta: 0:12:49  iteration: 119/10000  consumed_samples: 480  total_loss: 2.81  time: 0.0781 s/iter  data_time: 0.0008 s/iter total_throughput: 51.23 samples/s lr: 8.00e-04  
[08/23 10:21:14] lb.utils.events INFO:  eta: 0:12:49  iteration: 139/10000  consumed_samples: 560  total_loss: 2.691  time: 0.0782 s/iter  data_time: 0.0009 s/iter total_throughput: 51.16 samples/s lr: 8.00e-04  
[08/23 10:21:16] lb.utils.events INFO:  eta: 0:12:49  iteration: 159/10000  consumed_samples: 640  total_loss: 2.561  time: 0.0783 s/iter  data_time: 0.0010 s/iter total_throughput: 51.09 samples/s lr: 8.00e-04  
[08/23 10:21:17] lb.utils.events INFO:  eta: 0:12:48  iteration: 179/10000  consumed_samples: 720  total_loss: 2.322  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 51.03 samples/s lr: 8.00e-04  
[08/23 10:21:19] lb.utils.events INFO:  eta: 0:12:47  iteration: 199/10000  consumed_samples: 800  total_loss: 2.135  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 51.00 samples/s lr: 8.00e-04  
[08/23 10:21:21] lb.utils.events INFO:  eta: 0:12:47  iteration: 219/10000  consumed_samples: 880  total_loss: 1.7  time: 0.0785 s/iter  data_time: 0.0009 s/iter total_throughput: 50.96 samples/s lr: 8.00e-04  
[08/23 10:21:22] lb.utils.events INFO:  eta: 0:12:46  iteration: 239/10000  consumed_samples: 960  total_loss: 1.241  time: 0.0785 s/iter  data_time: 0.0008 s/iter total_throughput: 50.93 samples/s lr: 8.00e-04  
[08/23 10:21:24] lb.utils.events INFO:  eta: 0:12:45  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.9875  time: 0.0786 s/iter  data_time: 0.0009 s/iter total_throughput: 50.92 samples/s lr: 8.00e-04  
[08/23 10:21:25] lb.utils.events INFO:  eta: 0:12:43  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.8206  time: 0.0786 s/iter  data_time: 0.0009 s/iter total_throughput: 50.91 samples/s lr: 8.00e-04  
[08/23 10:21:27] lb.utils.events INFO:  eta: 0:12:42  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.6038  time: 0.0786 s/iter  data_time: 0.0009 s/iter total_throughput: 50.91 samples/s lr: 8.00e-04  
[08/23 10:21:29] lb.utils.events INFO:  eta: 0:12:40  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.4328  time: 0.0786 s/iter  data_time: 0.0008 s/iter total_throughput: 50.89 samples/s lr: 8.00e-04  
[08/23 10:21:30] lb.utils.events INFO:  eta: 0:12:39  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.2625  time: 0.0786 s/iter  data_time: 0.0008 s/iter total_throughput: 50.88 samples/s lr: 8.00e-04  
[08/23 10:21:32] lb.utils.events INFO:  eta: 0:12:37  iteration: 359/10000  consumed_samples: 1440  total_loss: 0.1328  time: 0.0786 s/iter  data_time: 0.0009 s/iter total_throughput: 50.87 samples/s lr: 8.00e-04  
[08/23 10:21:33] lb.utils.events INFO:  eta: 0:12:36  iteration: 379/10000  consumed_samples: 1520  total_loss: 0.0627  time: 0.0787 s/iter  data_time: 0.0009 s/iter total_throughput: 50.85 samples/s lr: 8.00e-04  
[08/23 10:21:35] lb.utils.events INFO:  eta: 0:12:34  iteration: 399/10000  consumed_samples: 1600  total_loss: 0.0416  time: 0.0787 s/iter  data_time: 0.0009 s/iter total_throughput: 50.83 samples/s lr: 8.00e-04  
[08/23 10:21:36] lb.utils.events INFO:  eta: 0:12:33  iteration: 419/10000  consumed_samples: 1680  total_loss: 0.02864  time: 0.0787 s/iter  data_time: 0.0008 s/iter total_throughput: 50.82 samples/s lr: 8.00e-04  
[08/23 10:21:38] lb.utils.events INFO:  eta: 0:12:32  iteration: 439/10000  consumed_samples: 1760  total_loss: 0.02389  time: 0.0787 s/iter  data_time: 0.0009 s/iter total_throughput: 50.80 samples/s lr: 8.00e-04  
[08/23 10:21:40] lb.utils.events INFO:  eta: 0:12:30  iteration: 459/10000  consumed_samples: 1840  total_loss: 0.02794  time: 0.0788 s/iter  data_time: 0.0009 s/iter total_throughput: 50.79 samples/s lr: 8.00e-04  
[08/23 10:21:41] lb.utils.events INFO:  eta: 0:12:29  iteration: 479/10000  consumed_samples: 1920  total_loss: 0.02612  time: 0.0788 s/iter  data_time: 0.0009 s/iter total_throughput: 50.77 samples/s lr: 8.00e-04  
[08/23 10:21:43] lb.utils.events INFO:  eta: 0:12:28  iteration: 499/10000  consumed_samples: 2000  total_loss: 0.02047  time: 0.0788 s/iter  data_time: 0.0009 s/iter total_throughput: 50.76 samples/s lr: 8.00e-04  
[08/23 10:21:44] lb.utils.events INFO:  eta: 0:12:26  iteration: 519/10000  consumed_samples: 2080  total_loss: 0.01669  time: 0.0788 s/iter  data_time: 0.0009 s/iter total_throughput: 50.74 samples/s lr: 8.00e-04  
[08/23 10:21:46] lb.utils.events INFO:  eta: 0:12:25  iteration: 539/10000  consumed_samples: 2160  total_loss: 0.01306  time: 0.0789 s/iter  data_time: 0.0010 s/iter total_throughput: 50.72 samples/s lr: 8.00e-04  
[08/23 10:21:48] lb.utils.events INFO:  eta: 0:12:24  iteration: 559/10000  consumed_samples: 2240  total_loss: 0.009622  time: 0.0789 s/iter  data_time: 0.0008 s/iter total_throughput: 50.71 samples/s lr: 8.00e-04  
[08/23 10:21:49] lb.utils.events INFO:  eta: 0:12:23  iteration: 579/10000  consumed_samples: 2320  total_loss: 0.008009  time: 0.0789 s/iter  data_time: 0.0009 s/iter total_throughput: 50.68 samples/s lr: 8.00e-04  
[08/23 10:21:51] lb.utils.events INFO:  eta: 0:12:21  iteration: 599/10000  consumed_samples: 2400  total_loss: 0.008009  time: 0.0789 s/iter  data_time: 0.0009 s/iter total_throughput: 50.67 samples/s lr: 8.00e-04  
[08/23 10:21:52] lb.utils.events INFO:  eta: 0:12:20  iteration: 619/10000  consumed_samples: 2480  total_loss: 0.008009  time: 0.0790 s/iter  data_time: 0.0010 s/iter total_throughput: 50.65 samples/s lr: 8.00e-04  
[08/23 10:21:54] lb.utils.events INFO:  eta: 0:12:18  iteration: 639/10000  consumed_samples: 2560  total_loss: 0.006861  time: 0.0790 s/iter  data_time: 0.0009 s/iter total_throughput: 50.63 samples/s lr: 8.00e-04  
[08/23 10:21:56] lb.utils.events INFO:  eta: 0:12:17  iteration: 659/10000  consumed_samples: 2640  total_loss: 0.003974  time: 0.0790 s/iter  data_time: 0.0009 s/iter total_throughput: 50.62 samples/s lr: 8.00e-04  
[08/23 10:21:57] lb.utils.events INFO:  eta: 0:12:16  iteration: 679/10000  consumed_samples: 2720  total_loss: 0.001673  time: 0.0790 s/iter  data_time: 0.0009 s/iter total_throughput: 50.60 samples/s lr: 8.00e-04  
[08/23 10:21:59] lb.utils.events INFO:  eta: 0:12:14  iteration: 699/10000  consumed_samples: 2800  total_loss: 0.0006112  time: 0.0791 s/iter  data_time: 0.0009 s/iter total_throughput: 50.59 samples/s lr: 8.00e-04  
[08/23 10:22:00] lb.utils.events INFO:  eta: 0:12:13  iteration: 719/10000  consumed_samples: 2880  total_loss: 0.0002537  time: 0.0791 s/iter  data_time: 0.0009 s/iter total_throughput: 50.58 samples/s lr: 8.00e-04  
[08/23 10:22:02] lb.utils.events INFO:  eta: 0:12:12  iteration: 739/10000  consumed_samples: 2960  total_loss: 0.0001321  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.57 samples/s lr: 8.00e-04  
[08/23 10:22:04] lb.utils.events INFO:  eta: 0:12:11  iteration: 759/10000  consumed_samples: 3040  total_loss: 9.072e-05  time: 0.0791 s/iter  data_time: 0.0004 s/iter total_throughput: 50.56 samples/s lr: 8.00e-04  
[08/23 10:22:05] lb.utils.events INFO:  eta: 0:12:09  iteration: 779/10000  consumed_samples: 3120  total_loss: 6.138e-05  time: 0.0791 s/iter  data_time: 0.0004 s/iter total_throughput: 50.54 samples/s lr: 8.00e-04  
[08/23 10:22:07] lb.utils.events INFO:  eta: 0:12:08  iteration: 799/10000  consumed_samples: 3200  total_loss: 4.631e-05  time: 0.0792 s/iter  data_time: 0.0004 s/iter total_throughput: 50.53 samples/s lr: 8.00e-04  
[08/23 10:22:08] lb.utils.events INFO:  eta: 0:12:07  iteration: 819/10000  consumed_samples: 3280  total_loss: 3.627e-05  time: 0.0792 s/iter  data_time: 0.0004 s/iter total_throughput: 50.52 samples/s lr: 8.00e-04  
[08/23 10:22:10] lb.utils.events INFO:  eta: 0:12:05  iteration: 839/10000  consumed_samples: 3360  total_loss: 2.903e-05  time: 0.0792 s/iter  data_time: 0.0004 s/iter total_throughput: 50.51 samples/s lr: 8.00e-04  
[08/23 10:22:12] lb.utils.events INFO:  eta: 0:12:04  iteration: 859/10000  consumed_samples: 3440  total_loss: 2.468e-05  time: 0.0792 s/iter  data_time: 0.0003 s/iter total_throughput: 50.50 samples/s lr: 8.00e-04  
[08/23 10:22:13] lb.utils.events INFO:  eta: 0:12:02  iteration: 879/10000  consumed_samples: 3520  total_loss: 2.137e-05  time: 0.0792 s/iter  data_time: 0.0009 s/iter total_throughput: 50.48 samples/s lr: 8.00e-04  
[08/23 10:22:15] lb.utils.events INFO:  eta: 0:12:01  iteration: 899/10000  consumed_samples: 3600  total_loss: 1.833e-05  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.46 samples/s lr: 8.00e-04  
[08/23 10:22:16] lb.utils.events INFO:  eta: 0:12:00  iteration: 919/10000  consumed_samples: 3680  total_loss: 1.619e-05  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.45 samples/s lr: 8.00e-04  
[08/23 10:22:18] lb.utils.events INFO:  eta: 0:11:58  iteration: 939/10000  consumed_samples: 3760  total_loss: 1.438e-05  time: 0.0793 s/iter  data_time: 0.0008 s/iter total_throughput: 50.43 samples/s lr: 8.00e-04  
[08/23 10:22:20] lb.utils.events INFO:  eta: 0:11:57  iteration: 959/10000  consumed_samples: 3840  total_loss: 1.284e-05  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.42 samples/s lr: 8.00e-04  
[08/23 10:22:21] lb.utils.events INFO:  eta: 0:11:56  iteration: 979/10000  consumed_samples: 3920  total_loss: 1.116e-05  time: 0.0794 s/iter  data_time: 0.0008 s/iter total_throughput: 50.41 samples/s lr: 8.00e-04  
[08/23 10:22:23] lb.utils.events INFO:  eta: 0:11:55  iteration: 999/10000  consumed_samples: 4000  total_loss: 9.797e-06  time: 0.0794 s/iter  data_time: 0.0009 s/iter total_throughput: 50.40 samples/s lr: 8.00e-04  
[08/23 10:22:24] lb.utils.events INFO:  eta: 0:11:54  iteration: 1019/10000  consumed_samples: 4080  total_loss: 8.62e-06  time: 0.0794 s/iter  data_time: 0.0008 s/iter total_throughput: 50.38 samples/s lr: 8.00e-04  
[08/23 10:22:26] lb.utils.events INFO:  eta: 0:11:53  iteration: 1039/10000  consumed_samples: 4160  total_loss: 7.761e-06  time: 0.0794 s/iter  data_time: 0.0008 s/iter total_throughput: 50.37 samples/s lr: 8.00e-04  
[08/23 10:22:28] lb.utils.events INFO:  eta: 0:11:51  iteration: 1059/10000  consumed_samples: 4240  total_loss: 6.978e-06  time: 0.0794 s/iter  data_time: 0.0009 s/iter total_throughput: 50.36 samples/s lr: 8.00e-04  
[08/23 10:22:29] lb.utils.events INFO:  eta: 0:11:50  iteration: 1079/10000  consumed_samples: 4320  total_loss: 6.298e-06  time: 0.0794 s/iter  data_time: 0.0009 s/iter total_throughput: 50.35 samples/s lr: 8.00e-04  
[08/23 10:22:31] lb.utils.events INFO:  eta: 0:11:48  iteration: 1099/10000  consumed_samples: 4400  total_loss: 5.737e-06  time: 0.0795 s/iter  data_time: 0.0008 s/iter total_throughput: 50.34 samples/s lr: 8.00e-04  
[08/23 10:22:33] lb.utils.events INFO:  eta: 0:11:47  iteration: 1119/10000  consumed_samples: 4480  total_loss: 5.209e-06  time: 0.0795 s/iter  data_time: 0.0009 s/iter total_throughput: 50.33 samples/s lr: 8.00e-04  
[08/23 10:22:34] lb.utils.events INFO:  eta: 0:11:45  iteration: 1139/10000  consumed_samples: 4560  total_loss: 4.747e-06  time: 0.0795 s/iter  data_time: 0.0010 s/iter total_throughput: 50.32 samples/s lr: 8.00e-04  
[08/23 10:22:36] lb.utils.events INFO:  eta: 0:11:44  iteration: 1159/10000  consumed_samples: 4640  total_loss: 4.353e-06  time: 0.0795 s/iter  data_time: 0.0010 s/iter total_throughput: 50.31 samples/s lr: 8.00e-04  
[08/23 10:22:37] lb.utils.events INFO:  eta: 0:11:43  iteration: 1179/10000  consumed_samples: 4720  total_loss: 4.01e-06  time: 0.0795 s/iter  data_time: 0.0009 s/iter total_throughput: 50.30 samples/s lr: 8.00e-04  
[08/23 10:22:39] lb.utils.events INFO:  eta: 0:11:41  iteration: 1199/10000  consumed_samples: 4800  total_loss: 3.686e-06  time: 0.0795 s/iter  data_time: 0.0010 s/iter total_throughput: 50.29 samples/s lr: 8.00e-04  
[08/23 10:22:41] lb.utils.events INFO:  eta: 0:11:40  iteration: 1219/10000  consumed_samples: 4880  total_loss: 3.43e-06  time: 0.0796 s/iter  data_time: 0.0010 s/iter total_throughput: 50.28 samples/s lr: 8.00e-04  
[08/23 10:22:42] lb.utils.events INFO:  eta: 0:11:39  iteration: 1239/10000  consumed_samples: 4960  total_loss: 3.192e-06  time: 0.0796 s/iter  data_time: 0.0010 s/iter total_throughput: 50.26 samples/s lr: 8.00e-04  
[08/23 10:22:44] lb.utils.events INFO:  eta: 0:11:38  iteration: 1259/10000  consumed_samples: 5040  total_loss: 2.996e-06  time: 0.0796 s/iter  data_time: 0.0010 s/iter total_throughput: 50.23 samples/s lr: 8.00e-04  
[08/23 10:22:46] lb.utils.events INFO:  eta: 0:11:36  iteration: 1279/10000  consumed_samples: 5120  total_loss: 2.809e-06  time: 0.0797 s/iter  data_time: 0.0010 s/iter total_throughput: 50.19 samples/s lr: 8.00e-04  
[08/23 10:22:47] lb.utils.events INFO:  eta: 0:11:35  iteration: 1299/10000  consumed_samples: 5200  total_loss: 2.614e-06  time: 0.0798 s/iter  data_time: 0.0010 s/iter total_throughput: 50.11 samples/s lr: 8.00e-04  
[08/23 10:22:49] lb.utils.events INFO:  eta: 0:11:34  iteration: 1319/10000  consumed_samples: 5280  total_loss: 2.471e-06  time: 0.0799 s/iter  data_time: 0.0009 s/iter total_throughput: 50.05 samples/s lr: 8.00e-04  
[08/23 10:22:51] lb.utils.events INFO:  eta: 0:11:32  iteration: 1339/10000  consumed_samples: 5360  total_loss: 2.349e-06  time: 0.0799 s/iter  data_time: 0.0006 s/iter total_throughput: 50.04 samples/s lr: 8.00e-04  
[08/23 10:22:52] lb.utils.events INFO:  eta: 0:11:31  iteration: 1359/10000  consumed_samples: 5440  total_loss: 2.2e-06  time: 0.0800 s/iter  data_time: 0.0004 s/iter total_throughput: 50.03 samples/s lr: 8.00e-04  
[08/23 10:22:54] lb.utils.events INFO:  eta: 0:11:30  iteration: 1379/10000  consumed_samples: 5520  total_loss: 2.077e-06  time: 0.0800 s/iter  data_time: 0.0004 s/iter total_throughput: 50.01 samples/s lr: 8.00e-04  
[08/23 10:22:56] lb.utils.events INFO:  eta: 0:11:28  iteration: 1399/10000  consumed_samples: 5600  total_loss: 1.972e-06  time: 0.0800 s/iter  data_time: 0.0003 s/iter total_throughput: 50.01 samples/s lr: 8.00e-04  
[08/23 10:22:57] lb.utils.events INFO:  eta: 0:11:27  iteration: 1419/10000  consumed_samples: 5680  total_loss: 1.883e-06  time: 0.0800 s/iter  data_time: 0.0003 s/iter total_throughput: 50.01 samples/s lr: 8.00e-04  
[08/23 10:22:59] lb.utils.events INFO:  eta: 0:11:25  iteration: 1439/10000  consumed_samples: 5760  total_loss: 1.793e-06  time: 0.0800 s/iter  data_time: 0.0004 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/23 10:23:00] lb.utils.events INFO:  eta: 0:11:24  iteration: 1459/10000  consumed_samples: 5840  total_loss: 1.695e-06  time: 0.0800 s/iter  data_time: 0.0004 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/23 10:23:02] lb.utils.events INFO:  eta: 0:11:22  iteration: 1479/10000  consumed_samples: 5920  total_loss: 1.621e-06  time: 0.0800 s/iter  data_time: 0.0003 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/23 10:23:04] lb.utils.events INFO:  eta: 0:11:21  iteration: 1499/10000  consumed_samples: 6000  total_loss: 1.55e-06  time: 0.0800 s/iter  data_time: 0.0003 s/iter total_throughput: 49.99 samples/s lr: 8.00e-04  
[08/23 10:23:05] lb.utils.events INFO:  eta: 0:11:20  iteration: 1519/10000  consumed_samples: 6080  total_loss: 1.473e-06  time: 0.0800 s/iter  data_time: 0.0004 s/iter total_throughput: 49.99 samples/s lr: 8.00e-04  
[08/23 10:23:07] lb.utils.events INFO:  eta: 0:11:18  iteration: 1539/10000  consumed_samples: 6160  total_loss: 1.421e-06  time: 0.0800 s/iter  data_time: 0.0007 s/iter total_throughput: 49.98 samples/s lr: 8.00e-04  
[08/23 10:23:08] lb.utils.events INFO:  eta: 0:11:17  iteration: 1559/10000  consumed_samples: 6240  total_loss: 1.357e-06  time: 0.0800 s/iter  data_time: 0.0009 s/iter total_throughput: 49.97 samples/s lr: 8.00e-04  
[08/23 10:23:10] lb.utils.events INFO:  eta: 0:11:15  iteration: 1579/10000  consumed_samples: 6320  total_loss: 1.303e-06  time: 0.0801 s/iter  data_time: 0.0008 s/iter total_throughput: 49.97 samples/s lr: 8.00e-04  
[08/23 10:23:12] lb.utils.events INFO:  eta: 0:11:14  iteration: 1599/10000  consumed_samples: 6400  total_loss: 1.242e-06  time: 0.0801 s/iter  data_time: 0.0008 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/23 10:23:13] lb.utils.events INFO:  eta: 0:11:12  iteration: 1619/10000  consumed_samples: 6480  total_loss: 1.202e-06  time: 0.0801 s/iter  data_time: 0.0008 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/23 10:23:15] lb.utils.events INFO:  eta: 0:11:10  iteration: 1639/10000  consumed_samples: 6560  total_loss: 1.15e-06  time: 0.0801 s/iter  data_time: 0.0008 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/23 10:23:17] lb.utils.events INFO:  eta: 0:11:09  iteration: 1659/10000  consumed_samples: 6640  total_loss: 1.1e-06  time: 0.0801 s/iter  data_time: 0.0009 s/iter total_throughput: 49.95 samples/s lr: 8.00e-04  
[08/23 10:23:18] lb.utils.events INFO:  eta: 0:11:07  iteration: 1679/10000  consumed_samples: 6720  total_loss: 1.071e-06  time: 0.0801 s/iter  data_time: 0.0009 s/iter total_throughput: 49.94 samples/s lr: 8.00e-04  
[08/23 10:23:20] lb.utils.events INFO:  eta: 0:11:06  iteration: 1699/10000  consumed_samples: 6800  total_loss: 1.029e-06  time: 0.0801 s/iter  data_time: 0.0009 s/iter total_throughput: 49.93 samples/s lr: 8.00e-04  
[08/23 10:23:21] lb.utils.events INFO:  eta: 0:11:04  iteration: 1719/10000  consumed_samples: 6880  total_loss: 9.959e-07  time: 0.0801 s/iter  data_time: 0.0009 s/iter total_throughput: 49.92 samples/s lr: 8.00e-04  
[08/23 10:23:23] lb.utils.events INFO:  eta: 0:11:03  iteration: 1739/10000  consumed_samples: 6960  total_loss: 9.64e-07  time: 0.0802 s/iter  data_time: 0.0008 s/iter total_throughput: 49.87 samples/s lr: 8.00e-04  
[08/23 10:23:25] lb.utils.events INFO:  eta: 0:11:01  iteration: 1759/10000  consumed_samples: 7040  total_loss: 9.296e-07  time: 0.0803 s/iter  data_time: 0.0008 s/iter total_throughput: 49.84 samples/s lr: 8.00e-04  
[08/23 10:23:27] lb.utils.events INFO:  eta: 0:11:00  iteration: 1779/10000  consumed_samples: 7120  total_loss: 8.982e-07  time: 0.0803 s/iter  data_time: 0.0008 s/iter total_throughput: 49.84 samples/s lr: 8.00e-04  
[08/23 10:23:28] lb.utils.events INFO:  eta: 0:10:58  iteration: 1799/10000  consumed_samples: 7200  total_loss: 8.647e-07  time: 0.0803 s/iter  data_time: 0.0010 s/iter total_throughput: 49.83 samples/s lr: 8.00e-04  
[08/23 10:23:30] lb.utils.events INFO:  eta: 0:10:57  iteration: 1819/10000  consumed_samples: 7280  total_loss: 8.371e-07  time: 0.0803 s/iter  data_time: 0.0010 s/iter total_throughput: 49.83 samples/s lr: 8.00e-04  
[08/23 10:23:31] lb.utils.events INFO:  eta: 0:10:55  iteration: 1839/10000  consumed_samples: 7360  total_loss: 8.236e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/23 10:23:33] lb.utils.events INFO:  eta: 0:10:54  iteration: 1859/10000  consumed_samples: 7440  total_loss: 8.002e-07  time: 0.0803 s/iter  data_time: 0.0010 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/23 10:23:35] lb.utils.events INFO:  eta: 0:10:53  iteration: 1879/10000  consumed_samples: 7520  total_loss: 7.729e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/23 10:23:36] lb.utils.events INFO:  eta: 0:10:51  iteration: 1899/10000  consumed_samples: 7600  total_loss: 7.546e-07  time: 0.0803 s/iter  data_time: 0.0008 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/23 10:23:38] lb.utils.events INFO:  eta: 0:10:49  iteration: 1919/10000  consumed_samples: 7680  total_loss: 7.374e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/23 10:23:39] lb.utils.events INFO:  eta: 0:10:48  iteration: 1939/10000  consumed_samples: 7760  total_loss: 7.153e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.81 samples/s lr: 8.00e-04  
[08/23 10:23:41] lb.utils.events INFO:  eta: 0:10:47  iteration: 1959/10000  consumed_samples: 7840  total_loss: 6.951e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.81 samples/s lr: 8.00e-04  
[08/23 10:23:43] lb.utils.events INFO:  eta: 0:10:45  iteration: 1979/10000  consumed_samples: 7920  total_loss: 6.786e-07  time: 0.0803 s/iter  data_time: 0.0008 s/iter total_throughput: 49.81 samples/s lr: 8.00e-04  
[08/23 10:23:44] lb.utils.events INFO:  eta: 0:10:44  iteration: 1999/10000  consumed_samples: 8000  total_loss: 6.638e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.80 samples/s lr: 8.00e-04  
[08/23 10:23:46] lb.utils.events INFO:  eta: 0:10:42  iteration: 2019/10000  consumed_samples: 8080  total_loss: 6.457e-07  time: 0.0803 s/iter  data_time: 0.0010 s/iter total_throughput: 49.80 samples/s lr: 8.00e-04  
[08/23 10:23:48] lb.utils.events INFO:  eta: 0:10:41  iteration: 2039/10000  consumed_samples: 8160  total_loss: 6.305e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.79 samples/s lr: 8.00e-04  
[08/23 10:23:49] lb.utils.events INFO:  eta: 0:10:39  iteration: 2059/10000  consumed_samples: 8240  total_loss: 6.14e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.79 samples/s lr: 8.00e-04  
[08/23 10:23:51] lb.utils.events INFO:  eta: 0:10:38  iteration: 2079/10000  consumed_samples: 8320  total_loss: 5.991e-07  time: 0.0803 s/iter  data_time: 0.0009 s/iter total_throughput: 49.79 samples/s lr: 8.00e-04  
[08/23 10:23:52] lb.utils.events INFO:  eta: 0:10:36  iteration: 2099/10000  consumed_samples: 8400  total_loss: 5.811e-07  time: 0.0803 s/iter  data_time: 0.0010 s/iter total_throughput: 49.78 samples/s lr: 8.00e-04  
[08/23 10:23:54] lb.utils.events INFO:  eta: 0:10:35  iteration: 2119/10000  consumed_samples: 8480  total_loss: 5.695e-07  time: 0.0804 s/iter  data_time: 0.0009 s/iter total_throughput: 49.78 samples/s lr: 8.00e-04  
[08/23 10:23:56] lb.utils.events INFO:  eta: 0:10:33  iteration: 2139/10000  consumed_samples: 8560  total_loss: 5.548e-07  time: 0.0804 s/iter  data_time: 0.0005 s/iter total_throughput: 49.78 samples/s lr: 8.00e-04  
[08/23 10:23:57] lb.utils.events INFO:  eta: 0:10:31  iteration: 2159/10000  consumed_samples: 8640  total_loss: 5.447e-07  time: 0.0804 s/iter  data_time: 0.0004 s/iter total_throughput: 49.78 samples/s lr: 8.00e-04  
[08/23 10:23:59] lb.utils.events INFO:  eta: 0:10:30  iteration: 2179/10000  consumed_samples: 8720  total_loss: 5.328e-07  time: 0.0804 s/iter  data_time: 0.0009 s/iter total_throughput: 49.77 samples/s lr: 8.00e-04  
[08/23 10:24:16] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:24:16] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:24:16] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/23 10:24:16] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:24:16] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:24:16] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.057 seconds
[08/23 10:24:16] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.057 seconds
[08/23 10:24:16] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:24:18] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:24:22] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:24:23] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:24:23] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:24:31] lb.utils.events INFO:  eta: 0:13:03  iteration: 19/10000  consumed_samples: 80  total_loss: 10.49  time: 0.0786 s/iter  data_time: 0.0008 s/iter total_throughput: 50.87 samples/s lr: 8.00e-04  
[08/23 10:24:33] lb.utils.events INFO:  eta: 0:13:02  iteration: 39/10000  consumed_samples: 160  total_loss: 5.717  time: 0.0787 s/iter  data_time: 0.0009 s/iter total_throughput: 50.85 samples/s lr: 8.00e-04  
[08/23 10:24:34] lb.utils.events INFO:  eta: 0:13:02  iteration: 59/10000  consumed_samples: 240  total_loss: 4.033  time: 0.0787 s/iter  data_time: 0.0009 s/iter total_throughput: 50.81 samples/s lr: 8.00e-04  
[08/23 10:24:36] lb.utils.events INFO:  eta: 0:13:00  iteration: 79/10000  consumed_samples: 320  total_loss: 3.266  time: 0.0788 s/iter  data_time: 0.0009 s/iter total_throughput: 50.76 samples/s lr: 8.00e-04  
[08/23 10:24:38] lb.utils.events INFO:  eta: 0:12:59  iteration: 99/10000  consumed_samples: 400  total_loss: 2.864  time: 0.0788 s/iter  data_time: 0.0008 s/iter total_throughput: 50.73 samples/s lr: 8.00e-04  
[08/23 10:24:39] lb.utils.events INFO:  eta: 0:12:58  iteration: 119/10000  consumed_samples: 480  total_loss: 2.649  time: 0.0789 s/iter  data_time: 0.0009 s/iter total_throughput: 50.69 samples/s lr: 8.00e-04  
[08/23 10:24:41] lb.utils.events INFO:  eta: 0:12:57  iteration: 139/10000  consumed_samples: 560  total_loss: 2.492  time: 0.0790 s/iter  data_time: 0.0010 s/iter total_throughput: 50.63 samples/s lr: 8.00e-04  
[08/23 10:24:42] lb.utils.events INFO:  eta: 0:12:56  iteration: 159/10000  consumed_samples: 640  total_loss: 2.259  time: 0.0791 s/iter  data_time: 0.0009 s/iter total_throughput: 50.58 samples/s lr: 8.00e-04  
[08/23 10:24:44] lb.utils.events INFO:  eta: 0:12:55  iteration: 179/10000  consumed_samples: 720  total_loss: 1.948  time: 0.0792 s/iter  data_time: 0.0011 s/iter total_throughput: 50.52 samples/s lr: 8.00e-04  
[08/23 10:24:46] lb.utils.events INFO:  eta: 0:12:54  iteration: 199/10000  consumed_samples: 800  total_loss: 1.54  time: 0.0792 s/iter  data_time: 0.0009 s/iter total_throughput: 50.50 samples/s lr: 8.00e-04  
[08/23 10:24:47] lb.utils.events INFO:  eta: 0:12:53  iteration: 219/10000  consumed_samples: 880  total_loss: 0.7876  time: 0.0792 s/iter  data_time: 0.0009 s/iter total_throughput: 50.48 samples/s lr: 8.00e-04  
[08/23 10:24:49] lb.utils.events INFO:  eta: 0:12:52  iteration: 239/10000  consumed_samples: 960  total_loss: 0.4727  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.46 samples/s lr: 8.00e-04  
[08/23 10:24:50] lb.utils.events INFO:  eta: 0:12:51  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.4727  time: 0.0793 s/iter  data_time: 0.0008 s/iter total_throughput: 50.43 samples/s lr: 8.00e-04  
[08/23 10:24:52] lb.utils.events INFO:  eta: 0:12:49  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.4727  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.43 samples/s lr: 8.00e-04  
[08/23 10:24:54] lb.utils.events INFO:  eta: 0:12:48  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.3326  time: 0.0794 s/iter  data_time: 0.0010 s/iter total_throughput: 50.39 samples/s lr: 8.00e-04  
[08/23 10:24:55] lb.utils.events INFO:  eta: 0:12:47  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.1403  time: 0.0794 s/iter  data_time: 0.0010 s/iter total_throughput: 50.37 samples/s lr: 8.00e-04  
[08/23 10:24:57] lb.utils.events INFO:  eta: 0:12:46  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.06391  time: 0.0795 s/iter  data_time: 0.0010 s/iter total_throughput: 50.34 samples/s lr: 8.00e-04  
[08/23 10:24:58] lb.utils.events INFO:  eta: 0:12:45  iteration: 359/10000  consumed_samples: 1440  total_loss: 0.06391  time: 0.0795 s/iter  data_time: 0.0010 s/iter total_throughput: 50.30 samples/s lr: 8.00e-04  
[08/23 10:25:00] lb.utils.events INFO:  eta: 0:12:44  iteration: 379/10000  consumed_samples: 1520  total_loss: 0.05716  time: 0.0796 s/iter  data_time: 0.0010 s/iter total_throughput: 50.27 samples/s lr: 8.00e-04  
[08/23 10:25:02] lb.utils.events INFO:  eta: 0:12:43  iteration: 399/10000  consumed_samples: 1600  total_loss: 0.05716  time: 0.0796 s/iter  data_time: 0.0010 s/iter total_throughput: 50.22 samples/s lr: 8.00e-04  
[08/23 10:25:03] lb.utils.events INFO:  eta: 0:12:41  iteration: 419/10000  consumed_samples: 1680  total_loss: 0.05716  time: 0.0798 s/iter  data_time: 0.0011 s/iter total_throughput: 50.13 samples/s lr: 8.00e-04  
[08/23 10:25:05] lb.utils.events INFO:  eta: 0:12:40  iteration: 439/10000  consumed_samples: 1760  total_loss: 0.04814  time: 0.0799 s/iter  data_time: 0.0011 s/iter total_throughput: 50.09 samples/s lr: 8.00e-04  
[08/23 10:25:07] lb.utils.events INFO:  eta: 0:12:39  iteration: 459/10000  consumed_samples: 1840  total_loss: 0.02836  time: 0.0801 s/iter  data_time: 0.0010 s/iter total_throughput: 49.93 samples/s lr: 8.00e-04  
[08/23 10:25:08] lb.utils.events INFO:  eta: 0:12:38  iteration: 479/10000  consumed_samples: 1920  total_loss: 0.02471  time: 0.0803 s/iter  data_time: 0.0010 s/iter total_throughput: 49.79 samples/s lr: 8.00e-04  
[08/23 10:25:10] lb.utils.events INFO:  eta: 0:12:37  iteration: 499/10000  consumed_samples: 2000  total_loss: 0.02471  time: 0.0804 s/iter  data_time: 0.0010 s/iter total_throughput: 49.77 samples/s lr: 8.00e-04  
[08/23 10:25:12] lb.utils.events INFO:  eta: 0:12:36  iteration: 519/10000  consumed_samples: 2080  total_loss: 0.02471  time: 0.0804 s/iter  data_time: 0.0008 s/iter total_throughput: 49.76 samples/s lr: 8.00e-04  
[08/23 10:25:13] lb.utils.events INFO:  eta: 0:12:35  iteration: 539/10000  consumed_samples: 2160  total_loss: 0.04117  time: 0.0804 s/iter  data_time: 0.0009 s/iter total_throughput: 49.76 samples/s lr: 8.00e-04  
[08/23 10:25:15] lb.utils.events INFO:  eta: 0:12:34  iteration: 559/10000  consumed_samples: 2240  total_loss: 0.02912  time: 0.0804 s/iter  data_time: 0.0009 s/iter total_throughput: 49.77 samples/s lr: 8.00e-04  
[08/23 10:25:17] lb.utils.events INFO:  eta: 0:12:32  iteration: 579/10000  consumed_samples: 2320  total_loss: 0.0209  time: 0.0804 s/iter  data_time: 0.0009 s/iter total_throughput: 49.76 samples/s lr: 8.00e-04  
[08/23 10:25:18] lb.utils.events INFO:  eta: 0:12:31  iteration: 599/10000  consumed_samples: 2400  total_loss: 0.01551  time: 0.0804 s/iter  data_time: 0.0010 s/iter total_throughput: 49.76 samples/s lr: 8.00e-04  
[08/23 10:25:20] lb.utils.events INFO:  eta: 0:12:30  iteration: 619/10000  consumed_samples: 2480  total_loss: 0.01551  time: 0.0804 s/iter  data_time: 0.0010 s/iter total_throughput: 49.75 samples/s lr: 8.00e-04  
[08/23 10:25:21] lb.utils.events INFO:  eta: 0:12:29  iteration: 639/10000  consumed_samples: 2560  total_loss: 0.01551  time: 0.0804 s/iter  data_time: 0.0009 s/iter total_throughput: 49.75 samples/s lr: 8.00e-04  
[08/23 10:25:37] libai INFO: Rank of current process: 0. World size: 2
[08/23 10:25:37] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:25:37] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/23 10:25:37] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:25:37] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:25:37] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.057 seconds
[08/23 10:25:37] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.059 seconds
[08/23 10:25:37] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:25:39] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:25:43] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:25:44] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:25:44] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:25:57] lb.utils.events INFO:  eta: 0:31:37  iteration: 19/10000  consumed_samples: 160  total_loss: 9.527  time: 0.1917 s/iter  data_time: 0.0019 s/iter total_throughput: 41.74 samples/s lr: 8.00e-04  
[08/23 10:26:00] lb.utils.events INFO:  eta: 0:31:44  iteration: 39/10000  consumed_samples: 320  total_loss: 5.814  time: 0.1920 s/iter  data_time: 0.0017 s/iter total_throughput: 41.66 samples/s lr: 8.00e-04  
[08/23 10:26:04] lb.utils.events INFO:  eta: 0:31:38  iteration: 59/10000  consumed_samples: 480  total_loss: 4.18  time: 0.1919 s/iter  data_time: 0.0023 s/iter total_throughput: 41.70 samples/s lr: 8.00e-04  
[08/23 10:26:08] lb.utils.events INFO:  eta: 0:31:37  iteration: 79/10000  consumed_samples: 640  total_loss: 3.152  time: 0.1927 s/iter  data_time: 0.0019 s/iter total_throughput: 41.51 samples/s lr: 8.00e-04  
[08/23 10:26:13] lb.utils.events INFO:  eta: 0:31:47  iteration: 99/10000  consumed_samples: 800  total_loss: 2.676  time: 0.2012 s/iter  data_time: 0.0021 s/iter total_throughput: 39.76 samples/s lr: 8.00e-04  
[08/23 10:26:17] lb.utils.events INFO:  eta: 0:31:57  iteration: 119/10000  consumed_samples: 960  total_loss: 2.488  time: 0.2056 s/iter  data_time: 0.0022 s/iter total_throughput: 38.92 samples/s lr: 8.00e-04  
[08/23 10:26:22] lb.utils.events INFO:  eta: 0:31:55  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.231  time: 0.2064 s/iter  data_time: 0.0021 s/iter total_throughput: 38.75 samples/s lr: 8.00e-04  
[08/23 10:26:26] lb.utils.events INFO:  eta: 0:32:31  iteration: 159/10000  consumed_samples: 1280  total_loss: 1.909  time: 0.2103 s/iter  data_time: 0.0020 s/iter total_throughput: 38.04 samples/s lr: 8.00e-04  
[08/23 10:26:31] lb.utils.events INFO:  eta: 0:33:07  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.57  time: 0.2123 s/iter  data_time: 0.0021 s/iter total_throughput: 37.68 samples/s lr: 8.00e-04  
[08/23 10:26:36] lb.utils.events INFO:  eta: 0:36:40  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.274  time: 0.2142 s/iter  data_time: 0.0020 s/iter total_throughput: 37.35 samples/s lr: 8.00e-04  
[08/23 10:26:40] lb.utils.events INFO:  eta: 0:37:03  iteration: 219/10000  consumed_samples: 1760  total_loss: 0.8581  time: 0.2155 s/iter  data_time: 0.0021 s/iter total_throughput: 37.12 samples/s lr: 8.00e-04  
[08/23 10:26:45] lb.utils.events INFO:  eta: 0:37:06  iteration: 239/10000  consumed_samples: 1920  total_loss: 0.6693  time: 0.2168 s/iter  data_time: 0.0020 s/iter total_throughput: 36.91 samples/s lr: 8.00e-04  
[08/23 10:26:49] lb.utils.events INFO:  eta: 0:37:04  iteration: 259/10000  consumed_samples: 2080  total_loss: 0.5509  time: 0.2175 s/iter  data_time: 0.0021 s/iter total_throughput: 36.79 samples/s lr: 8.00e-04  
[08/23 10:26:54] lb.utils.events INFO:  eta: 0:37:07  iteration: 279/10000  consumed_samples: 2240  total_loss: 0.328  time: 0.2182 s/iter  data_time: 0.0020 s/iter total_throughput: 36.66 samples/s lr: 8.00e-04  
[08/23 10:26:58] lb.utils.events INFO:  eta: 0:37:05  iteration: 299/10000  consumed_samples: 2400  total_loss: 0.1742  time: 0.2192 s/iter  data_time: 0.0020 s/iter total_throughput: 36.49 samples/s lr: 8.00e-04  
[08/23 10:27:03] lb.utils.events INFO:  eta: 0:37:07  iteration: 319/10000  consumed_samples: 2560  total_loss: 0.07852  time: 0.2199 s/iter  data_time: 0.0020 s/iter total_throughput: 36.37 samples/s lr: 8.00e-04  
[08/23 10:27:08] lb.utils.events INFO:  eta: 0:37:07  iteration: 339/10000  consumed_samples: 2720  total_loss: 0.0508  time: 0.2205 s/iter  data_time: 0.0019 s/iter total_throughput: 36.27 samples/s lr: 8.00e-04  
[08/23 10:27:12] lb.utils.events INFO:  eta: 0:37:08  iteration: 359/10000  consumed_samples: 2880  total_loss: 0.03205  time: 0.2214 s/iter  data_time: 0.0020 s/iter total_throughput: 36.13 samples/s lr: 8.00e-04  
[08/23 10:27:17] lb.utils.events INFO:  eta: 0:37:00  iteration: 379/10000  consumed_samples: 3040  total_loss: 0.02459  time: 0.2208 s/iter  data_time: 0.0019 s/iter total_throughput: 36.23 samples/s lr: 8.00e-04  
[08/23 10:27:21] lb.utils.events INFO:  eta: 0:36:57  iteration: 399/10000  consumed_samples: 3200  total_loss: 0.01924  time: 0.2215 s/iter  data_time: 0.0021 s/iter total_throughput: 36.11 samples/s lr: 8.00e-04  
[08/23 10:27:26] lb.utils.events INFO:  eta: 0:36:54  iteration: 419/10000  consumed_samples: 3360  total_loss: 0.016  time: 0.2218 s/iter  data_time: 0.0020 s/iter total_throughput: 36.08 samples/s lr: 8.00e-04  
[08/23 10:27:31] lb.utils.events INFO:  eta: 0:36:50  iteration: 439/10000  consumed_samples: 3520  total_loss: 0.009591  time: 0.2223 s/iter  data_time: 0.0020 s/iter total_throughput: 35.98 samples/s lr: 8.00e-04  
[08/23 10:27:35] lb.utils.events INFO:  eta: 0:36:46  iteration: 459/10000  consumed_samples: 3680  total_loss: 0.004552  time: 0.2227 s/iter  data_time: 0.0020 s/iter total_throughput: 35.92 samples/s lr: 8.00e-04  
[08/23 10:27:40] lb.utils.events INFO:  eta: 0:36:41  iteration: 479/10000  consumed_samples: 3840  total_loss: 0.00244  time: 0.2227 s/iter  data_time: 0.0019 s/iter total_throughput: 35.93 samples/s lr: 8.00e-04  
[08/23 10:27:44] lb.utils.events INFO:  eta: 0:36:37  iteration: 499/10000  consumed_samples: 4000  total_loss: 0.001705  time: 0.2231 s/iter  data_time: 0.0019 s/iter total_throughput: 35.85 samples/s lr: 8.00e-04  
[08/23 10:27:49] lb.utils.events INFO:  eta: 0:36:34  iteration: 519/10000  consumed_samples: 4160  total_loss: 0.001193  time: 0.2236 s/iter  data_time: 0.0020 s/iter total_throughput: 35.78 samples/s lr: 8.00e-04  
[08/23 10:27:54] lb.utils.events INFO:  eta: 0:36:31  iteration: 539/10000  consumed_samples: 4320  total_loss: 0.0004783  time: 0.2239 s/iter  data_time: 0.0021 s/iter total_throughput: 35.72 samples/s lr: 8.00e-04  
[08/23 10:27:58] lb.utils.events INFO:  eta: 0:36:27  iteration: 559/10000  consumed_samples: 4480  total_loss: 0.0002191  time: 0.2241 s/iter  data_time: 0.0020 s/iter total_throughput: 35.70 samples/s lr: 8.00e-04  
[08/23 10:28:03] lb.utils.events INFO:  eta: 0:36:22  iteration: 579/10000  consumed_samples: 4640  total_loss: 0.0001339  time: 0.2240 s/iter  data_time: 0.0019 s/iter total_throughput: 35.72 samples/s lr: 8.00e-04  
[08/23 10:28:07] lb.utils.events INFO:  eta: 0:36:17  iteration: 599/10000  consumed_samples: 4800  total_loss: 9.617e-05  time: 0.2241 s/iter  data_time: 0.0019 s/iter total_throughput: 35.70 samples/s lr: 8.00e-04  
[08/23 10:28:11] lb.utils.events INFO:  eta: 0:36:11  iteration: 619/10000  consumed_samples: 4960  total_loss: 7.294e-05  time: 0.2235 s/iter  data_time: 0.0020 s/iter total_throughput: 35.80 samples/s lr: 8.00e-04  
[08/23 10:28:16] lb.utils.events INFO:  eta: 0:36:06  iteration: 639/10000  consumed_samples: 5120  total_loss: 5.675e-05  time: 0.2232 s/iter  data_time: 0.0020 s/iter total_throughput: 35.84 samples/s lr: 8.00e-04  
[08/23 10:28:20] lb.utils.events INFO:  eta: 0:36:00  iteration: 659/10000  consumed_samples: 5280  total_loss: 4.259e-05  time: 0.2231 s/iter  data_time: 0.0019 s/iter total_throughput: 35.86 samples/s lr: 8.00e-04  
[08/23 10:28:24] lb.utils.events INFO:  eta: 0:35:56  iteration: 679/10000  consumed_samples: 5440  total_loss: 3.25e-05  time: 0.2229 s/iter  data_time: 0.0020 s/iter total_throughput: 35.89 samples/s lr: 8.00e-04  
[08/23 10:28:29] lb.utils.events INFO:  eta: 0:35:53  iteration: 699/10000  consumed_samples: 5600  total_loss: 2.447e-05  time: 0.2233 s/iter  data_time: 0.0020 s/iter total_throughput: 35.83 samples/s lr: 8.00e-04  
[08/23 10:28:34] lb.utils.events INFO:  eta: 0:35:50  iteration: 719/10000  consumed_samples: 5760  total_loss: 1.826e-05  time: 0.2237 s/iter  data_time: 0.0020 s/iter total_throughput: 35.76 samples/s lr: 8.00e-04  
[08/23 10:28:39] lb.utils.events INFO:  eta: 0:35:47  iteration: 739/10000  consumed_samples: 5920  total_loss: 1.378e-05  time: 0.2241 s/iter  data_time: 0.0019 s/iter total_throughput: 35.71 samples/s lr: 8.00e-04  
[08/23 10:28:50] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:28:50] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:28:50] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/23 10:28:50] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:28:50] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:28:50] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.045 seconds
[08/23 10:28:50] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.045 seconds
[08/23 10:28:50] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:28:52] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:28:55] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:28:56] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:28:56] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:29:05] lb.utils.events INFO:  eta: 0:13:04  iteration: 19/10000  consumed_samples: 80  total_loss: 6.342  time: 0.0788 s/iter  data_time: 0.0005 s/iter total_throughput: 50.76 samples/s lr: 8.00e-04  
[08/23 10:29:06] lb.utils.events INFO:  eta: 0:13:03  iteration: 39/10000  consumed_samples: 160  total_loss: 4.266  time: 0.0787 s/iter  data_time: 0.0003 s/iter total_throughput: 50.80 samples/s lr: 8.00e-04  
[08/23 10:29:08] lb.utils.events INFO:  eta: 0:13:02  iteration: 59/10000  consumed_samples: 240  total_loss: 3.411  time: 0.0787 s/iter  data_time: 0.0003 s/iter total_throughput: 50.79 samples/s lr: 8.00e-04  
[08/23 10:29:10] lb.utils.events INFO:  eta: 0:13:01  iteration: 79/10000  consumed_samples: 320  total_loss: 2.867  time: 0.0788 s/iter  data_time: 0.0003 s/iter total_throughput: 50.78 samples/s lr: 8.00e-04  
[08/23 10:29:11] lb.utils.events INFO:  eta: 0:13:00  iteration: 99/10000  consumed_samples: 400  total_loss: 2.698  time: 0.0788 s/iter  data_time: 0.0003 s/iter total_throughput: 50.76 samples/s lr: 8.00e-04  
[08/23 10:29:13] lb.utils.events INFO:  eta: 0:12:59  iteration: 119/10000  consumed_samples: 480  total_loss: 2.494  time: 0.0789 s/iter  data_time: 0.0003 s/iter total_throughput: 50.72 samples/s lr: 8.00e-04  
[08/23 10:29:14] lb.utils.events INFO:  eta: 0:12:57  iteration: 139/10000  consumed_samples: 560  total_loss: 2.236  time: 0.0789 s/iter  data_time: 0.0003 s/iter total_throughput: 50.68 samples/s lr: 8.00e-04  
[08/23 10:29:16] lb.utils.events INFO:  eta: 0:12:56  iteration: 159/10000  consumed_samples: 640  total_loss: 1.893  time: 0.0790 s/iter  data_time: 0.0003 s/iter total_throughput: 50.65 samples/s lr: 8.00e-04  
[08/23 10:29:18] lb.utils.events INFO:  eta: 0:12:55  iteration: 179/10000  consumed_samples: 720  total_loss: 1.513  time: 0.0790 s/iter  data_time: 0.0003 s/iter total_throughput: 50.64 samples/s lr: 8.00e-04  
[08/23 10:29:19] lb.utils.events INFO:  eta: 0:12:54  iteration: 199/10000  consumed_samples: 800  total_loss: 1.132  time: 0.0790 s/iter  data_time: 0.0004 s/iter total_throughput: 50.60 samples/s lr: 8.00e-04  
[08/23 10:29:21] lb.utils.events INFO:  eta: 0:12:53  iteration: 219/10000  consumed_samples: 880  total_loss: 1.132  time: 0.0791 s/iter  data_time: 0.0003 s/iter total_throughput: 50.59 samples/s lr: 8.00e-04  
[08/23 10:29:22] lb.utils.events INFO:  eta: 0:12:52  iteration: 239/10000  consumed_samples: 960  total_loss: 1.132  time: 0.0791 s/iter  data_time: 0.0007 s/iter total_throughput: 50.57 samples/s lr: 8.00e-04  
[08/23 10:29:24] lb.utils.events INFO:  eta: 0:12:51  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.023  time: 0.0791 s/iter  data_time: 0.0009 s/iter total_throughput: 50.54 samples/s lr: 8.00e-04  
[08/23 10:29:26] lb.utils.events INFO:  eta: 0:12:49  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.6645  time: 0.0792 s/iter  data_time: 0.0006 s/iter total_throughput: 50.51 samples/s lr: 8.00e-04  
[08/23 10:29:27] lb.utils.events INFO:  eta: 0:12:48  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.3639  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.47 samples/s lr: 8.00e-04  
[08/23 10:29:29] lb.utils.events INFO:  eta: 0:12:47  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.1813  time: 0.0793 s/iter  data_time: 0.0009 s/iter total_throughput: 50.44 samples/s lr: 8.00e-04  
[08/23 10:29:30] lb.utils.events INFO:  eta: 0:12:45  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.09857  time: 0.0793 s/iter  data_time: 0.0006 s/iter total_throughput: 50.42 samples/s lr: 8.00e-04  
[08/23 10:29:32] lb.utils.events INFO:  eta: 0:12:44  iteration: 359/10000  consumed_samples: 1440  total_loss: 0.08979  time: 0.0794 s/iter  data_time: 0.0003 s/iter total_throughput: 50.40 samples/s lr: 8.00e-04  
[08/23 10:29:34] lb.utils.events INFO:  eta: 0:12:42  iteration: 379/10000  consumed_samples: 1520  total_loss: 0.08979  time: 0.0794 s/iter  data_time: 0.0003 s/iter total_throughput: 50.39 samples/s lr: 8.00e-04  
[08/23 10:29:35] lb.utils.events INFO:  eta: 0:12:41  iteration: 399/10000  consumed_samples: 1600  total_loss: 0.08342  time: 0.0794 s/iter  data_time: 0.0003 s/iter total_throughput: 50.37 samples/s lr: 8.00e-04  
[08/23 10:29:37] lb.utils.events INFO:  eta: 0:12:40  iteration: 419/10000  consumed_samples: 1680  total_loss: 0.04943  time: 0.0794 s/iter  data_time: 0.0003 s/iter total_throughput: 50.35 samples/s lr: 8.00e-04  
[08/23 10:29:38] lb.utils.events INFO:  eta: 0:12:39  iteration: 439/10000  consumed_samples: 1760  total_loss: 0.03132  time: 0.0795 s/iter  data_time: 0.0005 s/iter total_throughput: 50.34 samples/s lr: 8.00e-04  
[08/23 10:29:40] lb.utils.events INFO:  eta: 0:12:38  iteration: 459/10000  consumed_samples: 1840  total_loss: 0.02227  time: 0.0795 s/iter  data_time: 0.0008 s/iter total_throughput: 50.32 samples/s lr: 8.00e-04  
[08/23 10:29:42] lb.utils.events INFO:  eta: 0:12:37  iteration: 479/10000  consumed_samples: 1920  total_loss: 0.01672  time: 0.0795 s/iter  data_time: 0.0009 s/iter total_throughput: 50.30 samples/s lr: 8.00e-04  
[08/23 10:29:43] lb.utils.events INFO:  eta: 0:12:36  iteration: 499/10000  consumed_samples: 2000  total_loss: 0.01312  time: 0.0795 s/iter  data_time: 0.0008 s/iter total_throughput: 50.29 samples/s lr: 8.00e-04  
[08/23 10:29:45] lb.utils.events INFO:  eta: 0:12:34  iteration: 519/10000  consumed_samples: 2080  total_loss: 0.009304  time: 0.0796 s/iter  data_time: 0.0009 s/iter total_throughput: 50.28 samples/s lr: 8.00e-04  
[08/23 10:29:46] lb.utils.events INFO:  eta: 0:12:33  iteration: 539/10000  consumed_samples: 2160  total_loss: 0.006098  time: 0.0796 s/iter  data_time: 0.0009 s/iter total_throughput: 50.26 samples/s lr: 8.00e-04  
[08/23 10:29:48] lb.utils.events INFO:  eta: 0:12:32  iteration: 559/10000  consumed_samples: 2240  total_loss: 0.004113  time: 0.0796 s/iter  data_time: 0.0008 s/iter total_throughput: 50.25 samples/s lr: 8.00e-04  
[08/23 10:29:50] lb.utils.events INFO:  eta: 0:12:30  iteration: 579/10000  consumed_samples: 2320  total_loss: 0.002085  time: 0.0796 s/iter  data_time: 0.0008 s/iter total_throughput: 50.23 samples/s lr: 8.00e-04  
[08/23 10:29:51] lb.utils.events INFO:  eta: 0:12:29  iteration: 599/10000  consumed_samples: 2400  total_loss: 0.001466  time: 0.0797 s/iter  data_time: 0.0009 s/iter total_throughput: 50.22 samples/s lr: 8.00e-04  
[08/23 10:29:53] lb.utils.events INFO:  eta: 0:12:28  iteration: 619/10000  consumed_samples: 2480  total_loss: 0.0008657  time: 0.0797 s/iter  data_time: 0.0010 s/iter total_throughput: 50.20 samples/s lr: 8.00e-04  
[08/23 10:29:54] lb.utils.events INFO:  eta: 0:12:27  iteration: 639/10000  consumed_samples: 2560  total_loss: 0.0001845  time: 0.0797 s/iter  data_time: 0.0009 s/iter total_throughput: 50.18 samples/s lr: 8.00e-04  
[08/23 10:29:56] lb.utils.events INFO:  eta: 0:12:25  iteration: 659/10000  consumed_samples: 2640  total_loss: 0.0001129  time: 0.0797 s/iter  data_time: 0.0009 s/iter total_throughput: 50.17 samples/s lr: 8.00e-04  
[08/23 10:29:58] lb.utils.events INFO:  eta: 0:12:24  iteration: 679/10000  consumed_samples: 2720  total_loss: 8.198e-05  time: 0.0798 s/iter  data_time: 0.0009 s/iter total_throughput: 50.15 samples/s lr: 8.00e-04  
[08/23 10:29:59] lb.utils.events INFO:  eta: 0:12:23  iteration: 699/10000  consumed_samples: 2800  total_loss: 6.172e-05  time: 0.0798 s/iter  data_time: 0.0010 s/iter total_throughput: 50.13 samples/s lr: 8.00e-04  
[08/23 10:30:01] lb.utils.events INFO:  eta: 0:12:21  iteration: 719/10000  consumed_samples: 2880  total_loss: 4.762e-05  time: 0.0798 s/iter  data_time: 0.0010 s/iter total_throughput: 50.11 samples/s lr: 8.00e-04  
[08/23 10:30:03] lb.utils.events INFO:  eta: 0:12:20  iteration: 739/10000  consumed_samples: 2960  total_loss: 3.537e-05  time: 0.0798 s/iter  data_time: 0.0009 s/iter total_throughput: 50.10 samples/s lr: 8.00e-04  
[08/23 10:30:04] lb.utils.events INFO:  eta: 0:12:18  iteration: 759/10000  consumed_samples: 3040  total_loss: 2.669e-05  time: 0.0799 s/iter  data_time: 0.0009 s/iter total_throughput: 50.09 samples/s lr: 8.00e-04  
[08/23 10:30:06] lb.utils.events INFO:  eta: 0:12:17  iteration: 779/10000  consumed_samples: 3120  total_loss: 2.102e-05  time: 0.0799 s/iter  data_time: 0.0009 s/iter total_throughput: 50.08 samples/s lr: 8.00e-04  
[08/23 10:30:29] libai INFO: Rank of current process: 0. World size: 2
[08/23 10:30:29] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:30:29] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/23 10:30:29] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:30:29] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:30:29] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/23 10:30:29] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/23 10:30:29] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:30:31] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:30:35] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:30:36] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:30:36] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:30:48] lb.utils.events INFO:  eta: 0:32:06  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.1937 s/iter  data_time: 0.0019 s/iter total_throughput: 41.30 samples/s lr: 8.00e-04  
[08/23 10:30:53] lb.utils.events INFO:  eta: 0:32:51  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.2077 s/iter  data_time: 0.0021 s/iter total_throughput: 38.51 samples/s lr: 8.00e-04  
[08/23 10:30:57] lb.utils.events INFO:  eta: 0:32:20  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.2038 s/iter  data_time: 0.0020 s/iter total_throughput: 39.26 samples/s lr: 8.00e-04  
[08/23 10:31:01] lb.utils.events INFO:  eta: 0:32:11  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.2031 s/iter  data_time: 0.0021 s/iter total_throughput: 39.38 samples/s lr: 8.00e-04  
[08/23 10:31:05] lb.utils.events INFO:  eta: 0:32:56  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.2085 s/iter  data_time: 0.0021 s/iter total_throughput: 38.36 samples/s lr: 8.00e-04  
[08/23 10:31:10] lb.utils.events INFO:  eta: 0:34:00  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.2127 s/iter  data_time: 0.0019 s/iter total_throughput: 37.61 samples/s lr: 8.00e-04  
[08/23 10:31:15] lb.utils.events INFO:  eta: 0:37:19  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.2160 s/iter  data_time: 0.0019 s/iter total_throughput: 37.04 samples/s lr: 8.00e-04  
[08/23 10:31:19] lb.utils.events INFO:  eta: 0:34:31  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.2136 s/iter  data_time: 0.0020 s/iter total_throughput: 37.46 samples/s lr: 8.00e-04  
[08/23 10:31:23] lb.utils.events INFO:  eta: 0:36:48  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.2151 s/iter  data_time: 0.0022 s/iter total_throughput: 37.19 samples/s lr: 8.00e-04  
[08/23 10:31:28] lb.utils.events INFO:  eta: 0:37:14  iteration: 199/10000  consumed_samples: 1600  total_loss: nan  time: 0.2176 s/iter  data_time: 0.0020 s/iter total_throughput: 36.76 samples/s lr: 8.00e-04  
[08/23 10:31:33] lb.utils.events INFO:  eta: 0:37:25  iteration: 219/10000  consumed_samples: 1760  total_loss: nan  time: 0.2188 s/iter  data_time: 0.0020 s/iter total_throughput: 36.57 samples/s lr: 8.00e-04  
[08/23 10:31:37] lb.utils.events INFO:  eta: 0:37:08  iteration: 239/10000  consumed_samples: 1920  total_loss: nan  time: 0.2177 s/iter  data_time: 0.0019 s/iter total_throughput: 36.75 samples/s lr: 8.00e-04  
[08/23 10:31:41] lb.utils.events INFO:  eta: 0:36:45  iteration: 259/10000  consumed_samples: 2080  total_loss: nan  time: 0.2159 s/iter  data_time: 0.0019 s/iter total_throughput: 37.06 samples/s lr: 8.00e-04  
[08/23 10:31:45] lb.utils.events INFO:  eta: 0:34:48  iteration: 279/10000  consumed_samples: 2240  total_loss: nan  time: 0.2142 s/iter  data_time: 0.0019 s/iter total_throughput: 37.34 samples/s lr: 8.00e-04  
[08/23 10:32:12] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:32:12] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:32:12] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 10:32:12] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:32:12] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:32:12] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.051 seconds
[08/23 10:32:12] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.052 seconds
[08/23 10:32:12] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:32:14] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:32:17] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:32:18] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:32:18] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:32:29] lb.utils.events INFO:  eta: 0:16:53  iteration: 19/10000  consumed_samples: 80  total_loss: 10.11  time: 0.1019 s/iter  data_time: 0.0008 s/iter total_throughput: 39.26 samples/s lr: 8.00e-04  
[08/23 10:32:31] lb.utils.events INFO:  eta: 0:16:51  iteration: 39/10000  consumed_samples: 160  total_loss: 7.086  time: 0.1017 s/iter  data_time: 0.0009 s/iter total_throughput: 39.33 samples/s lr: 8.00e-04  
[08/23 10:32:33] lb.utils.events INFO:  eta: 0:16:49  iteration: 59/10000  consumed_samples: 240  total_loss: 4.918  time: 0.1015 s/iter  data_time: 0.0011 s/iter total_throughput: 39.39 samples/s lr: 8.00e-04  
[08/23 10:32:35] lb.utils.events INFO:  eta: 0:16:46  iteration: 79/10000  consumed_samples: 320  total_loss: 3.619  time: 0.1015 s/iter  data_time: 0.0010 s/iter total_throughput: 39.42 samples/s lr: 8.00e-04  
[08/23 10:32:37] lb.utils.events INFO:  eta: 0:16:44  iteration: 99/10000  consumed_samples: 400  total_loss: 2.925  time: 0.1015 s/iter  data_time: 0.0010 s/iter total_throughput: 39.42 samples/s lr: 8.00e-04  
[08/23 10:32:39] lb.utils.events INFO:  eta: 0:16:43  iteration: 119/10000  consumed_samples: 480  total_loss: 2.67  time: 0.1015 s/iter  data_time: 0.0007 s/iter total_throughput: 39.40 samples/s lr: 8.00e-04  
[08/23 10:32:41] lb.utils.events INFO:  eta: 0:16:41  iteration: 139/10000  consumed_samples: 560  total_loss: 2.524  time: 0.1016 s/iter  data_time: 0.0005 s/iter total_throughput: 39.37 samples/s lr: 8.00e-04  
[08/23 10:32:43] lb.utils.events INFO:  eta: 0:16:40  iteration: 159/10000  consumed_samples: 640  total_loss: 2.347  time: 0.1017 s/iter  data_time: 0.0008 s/iter total_throughput: 39.35 samples/s lr: 8.00e-04  
[08/23 10:32:45] lb.utils.events INFO:  eta: 0:16:38  iteration: 179/10000  consumed_samples: 720  total_loss: 2.049  time: 0.1017 s/iter  data_time: 0.0010 s/iter total_throughput: 39.33 samples/s lr: 8.00e-04  
[08/23 10:32:47] lb.utils.events INFO:  eta: 0:16:37  iteration: 199/10000  consumed_samples: 800  total_loss: 1.774  time: 0.1018 s/iter  data_time: 0.0010 s/iter total_throughput: 39.31 samples/s lr: 8.00e-04  
[08/23 10:32:49] lb.utils.events INFO:  eta: 0:16:36  iteration: 219/10000  consumed_samples: 880  total_loss: 1.043  time: 0.1018 s/iter  data_time: 0.0009 s/iter total_throughput: 39.29 samples/s lr: 8.00e-04  
[08/23 10:32:52] lb.utils.events INFO:  eta: 0:16:35  iteration: 239/10000  consumed_samples: 960  total_loss: 0.6442  time: 0.1019 s/iter  data_time: 0.0009 s/iter total_throughput: 39.25 samples/s lr: 8.00e-04  
[08/23 10:32:54] lb.utils.events INFO:  eta: 0:16:33  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.3613  time: 0.1019 s/iter  data_time: 0.0010 s/iter total_throughput: 39.24 samples/s lr: 8.00e-04  
[08/23 10:32:56] lb.utils.events INFO:  eta: 0:16:32  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.1362  time: 0.1020 s/iter  data_time: 0.0009 s/iter total_throughput: 39.21 samples/s lr: 8.00e-04  
[08/23 10:32:58] lb.utils.events INFO:  eta: 0:16:31  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.1129  time: 0.1020 s/iter  data_time: 0.0009 s/iter total_throughput: 39.20 samples/s lr: 8.00e-04  
[08/23 10:33:00] lb.utils.events INFO:  eta: 0:16:29  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.1129  time: 0.1021 s/iter  data_time: 0.0009 s/iter total_throughput: 39.18 samples/s lr: 8.00e-04  
[08/23 10:33:02] lb.utils.events INFO:  eta: 0:16:28  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.1129  time: 0.1021 s/iter  data_time: 0.0009 s/iter total_throughput: 39.16 samples/s lr: 8.00e-04  
[08/23 10:33:04] lb.utils.events INFO:  eta: 0:16:26  iteration: 359/10000  consumed_samples: 1440  total_loss: 0.06367  time: 0.1022 s/iter  data_time: 0.0009 s/iter total_throughput: 39.15 samples/s lr: 8.00e-04  
[08/23 10:33:06] lb.utils.events INFO:  eta: 0:16:25  iteration: 379/10000  consumed_samples: 1520  total_loss: 0.03593  time: 0.1022 s/iter  data_time: 0.0010 s/iter total_throughput: 39.13 samples/s lr: 8.00e-04  
[08/23 10:33:08] lb.utils.events INFO:  eta: 0:16:23  iteration: 399/10000  consumed_samples: 1600  total_loss: 0.02277  time: 0.1023 s/iter  data_time: 0.0009 s/iter total_throughput: 39.11 samples/s lr: 8.00e-04  
[08/23 10:33:10] lb.utils.events INFO:  eta: 0:16:21  iteration: 419/10000  consumed_samples: 1680  total_loss: 0.01492  time: 0.1023 s/iter  data_time: 0.0010 s/iter total_throughput: 39.09 samples/s lr: 8.00e-04  
[08/23 10:34:03] libai INFO: Rank of current process: 0. World size: 2
[08/23 10:34:03] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:34:03] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 10:34:04] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:34:04] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:34:04] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.056 seconds
[08/23 10:34:04] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.057 seconds
[08/23 10:34:04] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:34:05] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:34:09] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:34:10] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:34:10] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:34:27] lb.utils.events INFO:  eta: 0:51:25  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.3171 s/iter  data_time: 0.0022 s/iter total_throughput: 25.23 samples/s lr: 8.00e-04  
[08/23 10:34:34] lb.utils.events INFO:  eta: 0:57:46  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.3373 s/iter  data_time: 0.0034 s/iter total_throughput: 23.72 samples/s lr: 8.00e-04  
[08/23 10:34:41] lb.utils.events INFO:  eta: 0:58:13  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.3432 s/iter  data_time: 0.0029 s/iter total_throughput: 23.31 samples/s lr: 8.00e-04  
[08/23 10:34:48] lb.utils.events INFO:  eta: 0:58:20  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.3468 s/iter  data_time: 0.0024 s/iter total_throughput: 23.07 samples/s lr: 8.00e-04  
[08/23 10:34:55] lb.utils.events INFO:  eta: 0:58:25  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.3492 s/iter  data_time: 0.0029 s/iter total_throughput: 22.91 samples/s lr: 8.00e-04  
[08/23 10:35:03] lb.utils.events INFO:  eta: 0:58:17  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.3497 s/iter  data_time: 0.0028 s/iter total_throughput: 22.88 samples/s lr: 8.00e-04  
[08/23 10:35:10] lb.utils.events INFO:  eta: 0:58:15  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.3507 s/iter  data_time: 0.0029 s/iter total_throughput: 22.81 samples/s lr: 8.00e-04  
[08/23 10:35:17] lb.utils.events INFO:  eta: 0:58:15  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.3515 s/iter  data_time: 0.0033 s/iter total_throughput: 22.76 samples/s lr: 8.00e-04  
[08/23 10:35:24] lb.utils.events INFO:  eta: 0:58:03  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.3516 s/iter  data_time: 0.0021 s/iter total_throughput: 22.75 samples/s lr: 8.00e-04  
[08/23 10:35:31] lb.utils.events INFO:  eta: 0:57:54  iteration: 199/10000  consumed_samples: 1600  total_loss: nan  time: 0.3520 s/iter  data_time: 0.0032 s/iter total_throughput: 22.72 samples/s lr: 8.00e-04  
[08/23 10:35:38] lb.utils.events INFO:  eta: 0:57:44  iteration: 219/10000  consumed_samples: 1760  total_loss: nan  time: 0.3522 s/iter  data_time: 0.0033 s/iter total_throughput: 22.71 samples/s lr: 8.00e-04  
[08/23 10:35:45] lb.utils.events INFO:  eta: 0:57:40  iteration: 239/10000  consumed_samples: 1920  total_loss: nan  time: 0.3527 s/iter  data_time: 0.0027 s/iter total_throughput: 22.68 samples/s lr: 8.00e-04  
[08/23 10:35:52] lb.utils.events INFO:  eta: 0:57:31  iteration: 259/10000  consumed_samples: 2080  total_loss: nan  time: 0.3526 s/iter  data_time: 0.0028 s/iter total_throughput: 22.69 samples/s lr: 8.00e-04  
[08/23 10:37:32] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:37:32] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:37:32] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 10:37:33] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:37:33] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:37:33] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.042 seconds
[08/23 10:37:33] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.042 seconds
[08/23 10:37:33] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:37:34] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:37:38] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:37:39] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:37:39] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:37:49] lb.utils.events INFO:  eta: 0:16:48  iteration: 19/10000  consumed_samples: 80  total_loss: 7.009  time: 0.1013 s/iter  data_time: 0.0005 s/iter total_throughput: 39.51 samples/s lr: 8.00e-04  
[08/23 10:37:52] lb.utils.events INFO:  eta: 0:16:46  iteration: 39/10000  consumed_samples: 160  total_loss: 4.685  time: 0.1011 s/iter  data_time: 0.0004 s/iter total_throughput: 39.57 samples/s lr: 8.00e-04  
[08/23 10:37:54] lb.utils.events INFO:  eta: 0:16:46  iteration: 59/10000  consumed_samples: 240  total_loss: 3.413  time: 0.1012 s/iter  data_time: 0.0004 s/iter total_throughput: 39.54 samples/s lr: 8.00e-04  
[08/23 10:37:56] lb.utils.events INFO:  eta: 0:16:44  iteration: 79/10000  consumed_samples: 320  total_loss: 2.942  time: 0.1013 s/iter  data_time: 0.0004 s/iter total_throughput: 39.49 samples/s lr: 8.00e-04  
[08/23 10:37:58] lb.utils.events INFO:  eta: 0:16:43  iteration: 99/10000  consumed_samples: 400  total_loss: 2.721  time: 0.1014 s/iter  data_time: 0.0008 s/iter total_throughput: 39.46 samples/s lr: 8.00e-04  
[08/23 10:38:00] lb.utils.events INFO:  eta: 0:16:41  iteration: 119/10000  consumed_samples: 480  total_loss: 2.552  time: 0.1013 s/iter  data_time: 0.0009 s/iter total_throughput: 39.47 samples/s lr: 8.00e-04  
[08/23 10:38:02] lb.utils.events INFO:  eta: 0:16:39  iteration: 139/10000  consumed_samples: 560  total_loss: 2.356  time: 0.1013 s/iter  data_time: 0.0009 s/iter total_throughput: 39.48 samples/s lr: 8.00e-04  
[08/23 10:38:04] lb.utils.events INFO:  eta: 0:16:37  iteration: 159/10000  consumed_samples: 640  total_loss: 2.059  time: 0.1013 s/iter  data_time: 0.0009 s/iter total_throughput: 39.48 samples/s lr: 8.00e-04  
[08/23 10:38:06] lb.utils.events INFO:  eta: 0:16:35  iteration: 179/10000  consumed_samples: 720  total_loss: 1.643  time: 0.1014 s/iter  data_time: 0.0009 s/iter total_throughput: 39.47 samples/s lr: 8.00e-04  
[08/23 10:38:08] lb.utils.events INFO:  eta: 0:16:33  iteration: 199/10000  consumed_samples: 800  total_loss: 1.927  time: 0.1014 s/iter  data_time: 0.0009 s/iter total_throughput: 39.45 samples/s lr: 8.00e-04  
[08/23 10:38:10] lb.utils.events INFO:  eta: 0:16:32  iteration: 219/10000  consumed_samples: 880  total_loss: 1.651  time: 0.1014 s/iter  data_time: 0.0010 s/iter total_throughput: 39.44 samples/s lr: 8.00e-04  
[08/23 10:38:12] lb.utils.events INFO:  eta: 0:16:30  iteration: 239/10000  consumed_samples: 960  total_loss: 1.207  time: 0.1015 s/iter  data_time: 0.0010 s/iter total_throughput: 39.42 samples/s lr: 8.00e-04  
[08/23 10:38:14] lb.utils.events INFO:  eta: 0:16:29  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.8981  time: 0.1015 s/iter  data_time: 0.0009 s/iter total_throughput: 39.41 samples/s lr: 8.00e-04  
[08/23 10:38:43] libai INFO: Rank of current process: 0. World size: 1
[08/23 10:38:43] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:38:43] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 10:38:43] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:38:43] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:38:43] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.049 seconds
[08/23 10:38:43] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/23 10:38:43] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:38:44] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:38:48] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:38:49] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:38:49] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:39:00] lb.utils.events INFO:  eta: 0:16:53  iteration: 19/10000  consumed_samples: 80  total_loss: 9.943  time: 0.1022 s/iter  data_time: 0.0005 s/iter total_throughput: 39.15 samples/s lr: 8.00e-04  
[08/23 10:39:02] lb.utils.events INFO:  eta: 0:16:52  iteration: 39/10000  consumed_samples: 160  total_loss: 6.307  time: 0.1019 s/iter  data_time: 0.0008 s/iter total_throughput: 39.25 samples/s lr: 8.00e-04  
[08/23 10:39:04] lb.utils.events INFO:  eta: 0:16:51  iteration: 59/10000  consumed_samples: 240  total_loss: 4.35  time: 0.1019 s/iter  data_time: 0.0009 s/iter total_throughput: 39.27 samples/s lr: 8.00e-04  
[08/23 10:39:06] lb.utils.events INFO:  eta: 0:16:51  iteration: 79/10000  consumed_samples: 320  total_loss: 3.486  time: 0.1019 s/iter  data_time: 0.0009 s/iter total_throughput: 39.27 samples/s lr: 8.00e-04  
[08/23 10:39:08] lb.utils.events INFO:  eta: 0:16:47  iteration: 99/10000  consumed_samples: 400  total_loss: 2.988  time: 0.1018 s/iter  data_time: 0.0009 s/iter total_throughput: 39.30 samples/s lr: 8.00e-04  
[08/23 10:39:10] lb.utils.events INFO:  eta: 0:16:44  iteration: 119/10000  consumed_samples: 480  total_loss: 2.825  time: 0.1017 s/iter  data_time: 0.0010 s/iter total_throughput: 39.32 samples/s lr: 8.00e-04  
[08/23 10:39:12] lb.utils.events INFO:  eta: 0:16:43  iteration: 139/10000  consumed_samples: 560  total_loss: 2.672  time: 0.1017 s/iter  data_time: 0.0010 s/iter total_throughput: 39.32 samples/s lr: 8.00e-04  
[08/23 10:39:14] lb.utils.events INFO:  eta: 0:16:41  iteration: 159/10000  consumed_samples: 640  total_loss: 2.503  time: 0.1017 s/iter  data_time: 0.0009 s/iter total_throughput: 39.32 samples/s lr: 8.00e-04  
[08/23 10:39:30] libai INFO: Rank of current process: 0. World size: 2
[08/23 10:39:30] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/23 10:39:30] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/23 10:39:30] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/23 10:39:30] lb.engine.default INFO: > compiling dataset index builder ...
[08/23 10:39:30] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/23 10:39:30] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/23 10:39:30] lb.engine.default INFO: Prepare training, validating, testing set
[08/23 10:39:32] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/23 10:39:36] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/23 10:39:37] lb.engine.trainer INFO: Starting training from iteration 0
[08/23 10:39:37] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/23 10:39:54] lb.utils.events INFO:  eta: 0:48:34  iteration: 19/10000  consumed_samples: 160  total_loss: 9.571  time: 0.2928 s/iter  data_time: 0.0020 s/iter total_throughput: 27.33 samples/s lr: 8.00e-04  
[08/23 10:40:00] lb.utils.events INFO:  eta: 0:49:26  iteration: 39/10000  consumed_samples: 320  total_loss: 6.423  time: 0.3038 s/iter  data_time: 0.0026 s/iter total_throughput: 26.34 samples/s lr: 8.00e-04  
[08/23 10:40:07] lb.utils.events INFO:  eta: 0:50:24  iteration: 59/10000  consumed_samples: 480  total_loss: 4.59  time: 0.3144 s/iter  data_time: 0.0027 s/iter total_throughput: 25.44 samples/s lr: 8.00e-04  
[08/23 10:40:13] lb.utils.events INFO:  eta: 0:49:29  iteration: 79/10000  consumed_samples: 640  total_loss: 3.309  time: 0.3101 s/iter  data_time: 0.0027 s/iter total_throughput: 25.80 samples/s lr: 8.00e-04  
[08/23 10:40:19] lb.utils.events INFO:  eta: 0:49:20  iteration: 99/10000  consumed_samples: 800  total_loss: 2.901  time: 0.3082 s/iter  data_time: 0.0023 s/iter total_throughput: 25.95 samples/s lr: 8.00e-04  
[08/23 10:40:25] lb.utils.events INFO:  eta: 0:49:08  iteration: 119/10000  consumed_samples: 960  total_loss: 2.766  time: 0.3060 s/iter  data_time: 0.0025 s/iter total_throughput: 26.15 samples/s lr: 8.00e-04  
[08/23 10:40:31] lb.utils.events INFO:  eta: 0:48:54  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.654  time: 0.3048 s/iter  data_time: 0.0023 s/iter total_throughput: 26.25 samples/s lr: 8.00e-04  
[08/23 10:40:37] lb.utils.events INFO:  eta: 0:48:40  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.555  time: 0.3036 s/iter  data_time: 0.0019 s/iter total_throughput: 26.35 samples/s lr: 8.00e-04  
[08/23 10:40:42] lb.utils.events INFO:  eta: 0:48:29  iteration: 179/10000  consumed_samples: 1440  total_loss: 2.42  time: 0.3026 s/iter  data_time: 0.0020 s/iter total_throughput: 26.44 samples/s lr: 8.00e-04  
[08/23 10:40:48] lb.utils.events INFO:  eta: 0:48:22  iteration: 199/10000  consumed_samples: 1600  total_loss: 2.23  time: 0.3020 s/iter  data_time: 0.0020 s/iter total_throughput: 26.49 samples/s lr: 8.00e-04  
[08/24 00:59:18] libai INFO: Rank of current process: 0. World size: 1
[08/24 00:59:18] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 00:59:18] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 00:59:18] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 00:59:18] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 00:59:18] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.045 seconds
[08/24 00:59:18] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.046 seconds
[08/24 00:59:18] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 00:59:20] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 00:59:24] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 00:59:24] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 00:59:24] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 00:59:32] lb.utils.events INFO:  eta: 0:13:01  iteration: 19/10000  consumed_samples: 80  total_loss: 8.661  time: 0.0792 s/iter  data_time: 0.0004 s/iter total_throughput: 50.48 samples/s lr: 8.00e-04  
[08/24 00:59:34] lb.utils.events INFO:  eta: 0:13:02  iteration: 39/10000  consumed_samples: 160  total_loss: 4.334  time: 0.0789 s/iter  data_time: 0.0004 s/iter total_throughput: 50.72 samples/s lr: 8.00e-04  
[08/24 00:59:35] lb.utils.events INFO:  eta: 0:13:01  iteration: 59/10000  consumed_samples: 240  total_loss: 3.387  time: 0.0788 s/iter  data_time: 0.0008 s/iter total_throughput: 50.77 samples/s lr: 8.00e-04  
[08/24 00:59:37] lb.utils.events INFO:  eta: 0:13:00  iteration: 79/10000  consumed_samples: 320  total_loss: 2.741  time: 0.0788 s/iter  data_time: 0.0009 s/iter total_throughput: 50.79 samples/s lr: 8.00e-04  
[08/24 00:59:38] lb.utils.events INFO:  eta: 0:13:00  iteration: 99/10000  consumed_samples: 400  total_loss: 2.485  time: 0.0788 s/iter  data_time: 0.0008 s/iter total_throughput: 50.75 samples/s lr: 8.00e-04  
[08/24 00:59:40] lb.utils.events INFO:  eta: 0:12:59  iteration: 119/10000  consumed_samples: 480  total_loss: 2.19  time: 0.0789 s/iter  data_time: 0.0008 s/iter total_throughput: 50.73 samples/s lr: 8.00e-04  
[08/24 00:59:41] lb.utils.events INFO:  eta: 0:12:58  iteration: 139/10000  consumed_samples: 560  total_loss: 1.876  time: 0.0789 s/iter  data_time: 0.0008 s/iter total_throughput: 50.69 samples/s lr: 8.00e-04  
[08/24 00:59:43] lb.utils.events INFO:  eta: 0:12:56  iteration: 159/10000  consumed_samples: 640  total_loss: 1.538  time: 0.0790 s/iter  data_time: 0.0008 s/iter total_throughput: 50.66 samples/s lr: 8.00e-04  
[08/24 00:59:45] lb.utils.events INFO:  eta: 0:12:56  iteration: 179/10000  consumed_samples: 720  total_loss: 1.205  time: 0.0790 s/iter  data_time: 0.0009 s/iter total_throughput: 50.63 samples/s lr: 8.00e-04  
[08/24 00:59:46] lb.utils.events INFO:  eta: 0:12:55  iteration: 199/10000  consumed_samples: 800  total_loss: 0.9778  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.60 samples/s lr: 8.00e-04  
[08/24 00:59:48] lb.utils.events INFO:  eta: 0:12:54  iteration: 219/10000  consumed_samples: 880  total_loss: 0.5834  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.58 samples/s lr: 8.00e-04  
[08/24 00:59:49] lb.utils.events INFO:  eta: 0:12:53  iteration: 239/10000  consumed_samples: 960  total_loss: 0.3365  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.58 samples/s lr: 8.00e-04  
[08/24 00:59:51] lb.utils.events INFO:  eta: 0:12:51  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.2854  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.57 samples/s lr: 8.00e-04  
[08/24 00:59:53] lb.utils.events INFO:  eta: 0:12:50  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.228  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.56 samples/s lr: 8.00e-04  
[08/24 00:59:54] lb.utils.events INFO:  eta: 0:12:48  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.2164  time: 0.0791 s/iter  data_time: 0.0008 s/iter total_throughput: 50.55 samples/s lr: 8.00e-04  
[08/24 00:59:56] lb.utils.events INFO:  eta: 0:12:47  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.2089  time: 0.0792 s/iter  data_time: 0.0008 s/iter total_throughput: 50.54 samples/s lr: 8.00e-04  
[08/24 00:59:57] lb.utils.events INFO:  eta: 0:12:46  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.1995  time: 0.0792 s/iter  data_time: 0.0007 s/iter total_throughput: 50.51 samples/s lr: 8.00e-04  
[08/24 00:59:59] lb.utils.events INFO:  eta: 0:12:44  iteration: 359/10000  consumed_samples: 1440  total_loss: 0.1957  time: 0.0792 s/iter  data_time: 0.0008 s/iter total_throughput: 50.49 samples/s lr: 8.00e-04  
[08/24 01:00:01] lb.utils.events INFO:  eta: 0:12:43  iteration: 379/10000  consumed_samples: 1520  total_loss: 0.1928  time: 0.0793 s/iter  data_time: 0.0008 s/iter total_throughput: 50.47 samples/s lr: 8.00e-04  
[08/24 01:00:02] lb.utils.events INFO:  eta: 0:12:42  iteration: 399/10000  consumed_samples: 1600  total_loss: 0.1881  time: 0.0793 s/iter  data_time: 0.0008 s/iter total_throughput: 50.45 samples/s lr: 8.00e-04  
[08/24 01:00:04] lb.utils.events INFO:  eta: 0:12:40  iteration: 419/10000  consumed_samples: 1680  total_loss: 0.1815  time: 0.0793 s/iter  data_time: 0.0008 s/iter total_throughput: 50.43 samples/s lr: 8.00e-04  
[08/24 01:00:05] lb.utils.events INFO:  eta: 0:12:39  iteration: 439/10000  consumed_samples: 1760  total_loss: 0.1761  time: 0.0794 s/iter  data_time: 0.0008 s/iter total_throughput: 50.40 samples/s lr: 8.00e-04  
[08/24 01:00:07] lb.utils.events INFO:  eta: 0:12:38  iteration: 459/10000  consumed_samples: 1840  total_loss: 0.1663  time: 0.0794 s/iter  data_time: 0.0008 s/iter total_throughput: 50.39 samples/s lr: 8.00e-04  
[08/24 01:00:09] lb.utils.events INFO:  eta: 0:12:37  iteration: 479/10000  consumed_samples: 1920  total_loss: 0.1594  time: 0.0794 s/iter  data_time: 0.0009 s/iter total_throughput: 50.37 samples/s lr: 8.00e-04  
[08/24 01:00:10] lb.utils.events INFO:  eta: 0:12:35  iteration: 499/10000  consumed_samples: 2000  total_loss: 0.155  time: 0.0794 s/iter  data_time: 0.0009 s/iter total_throughput: 50.35 samples/s lr: 8.00e-04  
[08/24 01:00:12] lb.utils.events INFO:  eta: 0:12:34  iteration: 519/10000  consumed_samples: 2080  total_loss: 0.1505  time: 0.0795 s/iter  data_time: 0.0009 s/iter total_throughput: 50.33 samples/s lr: 8.00e-04  
[08/24 01:00:13] lb.utils.events INFO:  eta: 0:12:33  iteration: 539/10000  consumed_samples: 2160  total_loss: 0.1469  time: 0.0795 s/iter  data_time: 0.0008 s/iter total_throughput: 50.31 samples/s lr: 8.00e-04  
[08/24 01:00:15] lb.utils.events INFO:  eta: 0:12:31  iteration: 559/10000  consumed_samples: 2240  total_loss: 0.1451  time: 0.0795 s/iter  data_time: 0.0008 s/iter total_throughput: 50.29 samples/s lr: 8.00e-04  
[08/24 01:00:17] lb.utils.events INFO:  eta: 0:12:30  iteration: 579/10000  consumed_samples: 2320  total_loss: 0.1434  time: 0.0796 s/iter  data_time: 0.0009 s/iter total_throughput: 50.27 samples/s lr: 8.00e-04  
[08/24 01:00:18] lb.utils.events INFO:  eta: 0:12:28  iteration: 599/10000  consumed_samples: 2400  total_loss: 0.1416  time: 0.0796 s/iter  data_time: 0.0008 s/iter total_throughput: 50.26 samples/s lr: 8.00e-04  
[08/24 01:00:20] lb.utils.events INFO:  eta: 0:12:27  iteration: 619/10000  consumed_samples: 2480  total_loss: 0.1414  time: 0.0796 s/iter  data_time: 0.0008 s/iter total_throughput: 50.24 samples/s lr: 8.00e-04  
[08/24 01:00:22] lb.utils.events INFO:  eta: 0:12:26  iteration: 639/10000  consumed_samples: 2560  total_loss: 0.1403  time: 0.0796 s/iter  data_time: 0.0008 s/iter total_throughput: 50.23 samples/s lr: 8.00e-04  
[08/24 01:00:23] lb.utils.events INFO:  eta: 0:12:25  iteration: 659/10000  consumed_samples: 2640  total_loss: 0.1385  time: 0.0797 s/iter  data_time: 0.0008 s/iter total_throughput: 50.21 samples/s lr: 8.00e-04  
[08/24 01:00:25] lb.utils.events INFO:  eta: 0:12:24  iteration: 679/10000  consumed_samples: 2720  total_loss: 0.1365  time: 0.0797 s/iter  data_time: 0.0008 s/iter total_throughput: 50.19 samples/s lr: 8.00e-04  
[08/24 01:00:26] lb.utils.events INFO:  eta: 0:12:23  iteration: 699/10000  consumed_samples: 2800  total_loss: 0.1345  time: 0.0797 s/iter  data_time: 0.0008 s/iter total_throughput: 50.17 samples/s lr: 8.00e-04  
[08/24 01:00:28] lb.utils.events INFO:  eta: 0:12:22  iteration: 719/10000  consumed_samples: 2880  total_loss: 0.1345  time: 0.0797 s/iter  data_time: 0.0008 s/iter total_throughput: 50.16 samples/s lr: 8.00e-04  
[08/24 01:00:30] lb.utils.events INFO:  eta: 0:12:20  iteration: 739/10000  consumed_samples: 2960  total_loss: 0.1335  time: 0.0798 s/iter  data_time: 0.0008 s/iter total_throughput: 50.14 samples/s lr: 8.00e-04  
[08/24 01:00:31] lb.utils.events INFO:  eta: 0:12:19  iteration: 759/10000  consumed_samples: 3040  total_loss: 0.1318  time: 0.0798 s/iter  data_time: 0.0008 s/iter total_throughput: 50.12 samples/s lr: 8.00e-04  
[08/24 01:00:33] lb.utils.events INFO:  eta: 0:12:17  iteration: 779/10000  consumed_samples: 3120  total_loss: 0.1302  time: 0.0798 s/iter  data_time: 0.0008 s/iter total_throughput: 50.11 samples/s lr: 8.00e-04  
[08/24 01:00:34] lb.utils.events INFO:  eta: 0:12:16  iteration: 799/10000  consumed_samples: 3200  total_loss: 0.1293  time: 0.0799 s/iter  data_time: 0.0008 s/iter total_throughput: 50.09 samples/s lr: 8.00e-04  
[08/24 01:00:36] lb.utils.events INFO:  eta: 0:12:14  iteration: 819/10000  consumed_samples: 3280  total_loss: 0.127  time: 0.0799 s/iter  data_time: 0.0008 s/iter total_throughput: 50.08 samples/s lr: 8.00e-04  
[08/24 01:00:38] lb.utils.events INFO:  eta: 0:12:13  iteration: 839/10000  consumed_samples: 3360  total_loss: 0.1179  time: 0.0799 s/iter  data_time: 0.0008 s/iter total_throughput: 50.06 samples/s lr: 8.00e-04  
[08/24 01:00:39] lb.utils.events INFO:  eta: 0:12:12  iteration: 859/10000  consumed_samples: 3440  total_loss: 0.1105  time: 0.0799 s/iter  data_time: 0.0008 s/iter total_throughput: 50.05 samples/s lr: 8.00e-04  
[08/24 01:00:41] lb.utils.events INFO:  eta: 0:12:10  iteration: 879/10000  consumed_samples: 3520  total_loss: 0.106  time: 0.0800 s/iter  data_time: 0.0009 s/iter total_throughput: 50.03 samples/s lr: 8.00e-04  
[08/24 01:00:43] lb.utils.events INFO:  eta: 0:12:09  iteration: 899/10000  consumed_samples: 3600  total_loss: 0.1048  time: 0.0800 s/iter  data_time: 0.0008 s/iter total_throughput: 50.02 samples/s lr: 8.00e-04  
[08/24 01:00:44] lb.utils.events INFO:  eta: 0:12:08  iteration: 919/10000  consumed_samples: 3680  total_loss: 0.1043  time: 0.0800 s/iter  data_time: 0.0009 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/24 01:00:51] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:00:51] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:00:51] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 01:00:51] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:00:51] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:00:51] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 01:00:51] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/24 01:00:51] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:00:53] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:00:57] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:00:57] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:00:57] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:01:06] lb.utils.events INFO:  eta: 0:15:07  iteration: 19/10000  consumed_samples: 160  total_loss: 7.253  time: 0.0913 s/iter  data_time: 0.0019 s/iter total_throughput: 87.58 samples/s lr: 8.00e-04  
[08/24 01:01:08] lb.utils.events INFO:  eta: 0:15:04  iteration: 39/10000  consumed_samples: 320  total_loss: 4.335  time: 0.0910 s/iter  data_time: 0.0018 s/iter total_throughput: 87.95 samples/s lr: 8.00e-04  
[08/24 01:01:10] lb.utils.events INFO:  eta: 0:15:02  iteration: 59/10000  consumed_samples: 480  total_loss: 3.375  time: 0.0909 s/iter  data_time: 0.0019 s/iter total_throughput: 88.04 samples/s lr: 8.00e-04  
[08/24 01:01:12] lb.utils.events INFO:  eta: 0:15:01  iteration: 79/10000  consumed_samples: 640  total_loss: 2.761  time: 0.0909 s/iter  data_time: 0.0020 s/iter total_throughput: 88.04 samples/s lr: 8.00e-04  
[08/24 01:01:14] lb.utils.events INFO:  eta: 0:14:59  iteration: 99/10000  consumed_samples: 800  total_loss: 2.43  time: 0.0909 s/iter  data_time: 0.0019 s/iter total_throughput: 88.01 samples/s lr: 8.00e-04  
[08/24 01:01:16] lb.utils.events INFO:  eta: 0:14:58  iteration: 119/10000  consumed_samples: 960  total_loss: 2.149  time: 0.0909 s/iter  data_time: 0.0017 s/iter total_throughput: 87.99 samples/s lr: 8.00e-04  
[08/24 01:01:17] lb.utils.events INFO:  eta: 0:14:57  iteration: 139/10000  consumed_samples: 1120  total_loss: 1.802  time: 0.0909 s/iter  data_time: 0.0016 s/iter total_throughput: 87.97 samples/s lr: 8.00e-04  
[08/24 01:01:19] lb.utils.events INFO:  eta: 0:14:55  iteration: 159/10000  consumed_samples: 1280  total_loss: 1.44  time: 0.0910 s/iter  data_time: 0.0016 s/iter total_throughput: 87.93 samples/s lr: 8.00e-04  
[08/24 01:01:21] lb.utils.events INFO:  eta: 0:14:54  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.199  time: 0.0910 s/iter  data_time: 0.0019 s/iter total_throughput: 87.92 samples/s lr: 8.00e-04  
[08/24 01:01:23] lb.utils.events INFO:  eta: 0:14:52  iteration: 199/10000  consumed_samples: 1600  total_loss: 0.9362  time: 0.0910 s/iter  data_time: 0.0017 s/iter total_throughput: 87.90 samples/s lr: 8.00e-04  
[08/24 01:01:25] lb.utils.events INFO:  eta: 0:14:51  iteration: 219/10000  consumed_samples: 1760  total_loss: 0.5774  time: 0.0910 s/iter  data_time: 0.0018 s/iter total_throughput: 87.87 samples/s lr: 8.00e-04  
[08/24 01:01:26] lb.utils.events INFO:  eta: 0:14:49  iteration: 239/10000  consumed_samples: 1920  total_loss: 0.3389  time: 0.0911 s/iter  data_time: 0.0017 s/iter total_throughput: 87.85 samples/s lr: 8.00e-04  
[08/24 01:04:41] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:04:41] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:04:41] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 01:04:41] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:04:41] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:04:41] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.052 seconds
[08/24 01:04:41] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 01:04:41] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:04:43] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:04:47] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:04:47] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:04:47] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:05:04] lb.utils.events INFO:  eta: 0:44:53  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.2710 s/iter  data_time: 0.0018 s/iter total_throughput: 29.52 samples/s lr: 8.00e-04  
[08/24 01:05:09] lb.utils.events INFO:  eta: 0:44:42  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.2707 s/iter  data_time: 0.0018 s/iter total_throughput: 29.56 samples/s lr: 8.00e-04  
[08/24 01:05:15] lb.utils.events INFO:  eta: 0:44:46  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.2727 s/iter  data_time: 0.0022 s/iter total_throughput: 29.34 samples/s lr: 8.00e-04  
[08/24 01:07:07] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:07:07] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:07:07] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 01:07:07] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:07:07] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:07:07] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 01:07:07] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 01:07:07] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:07:09] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:07:13] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:07:14] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:07:14] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:07:28] lb.utils.events INFO:  eta: 0:34:13  iteration: 19/10000  consumed_samples: 160  total_loss: 10.61  time: 0.2060 s/iter  data_time: 0.0018 s/iter total_throughput: 38.83 samples/s lr: 8.00e-04  
[08/24 01:07:32] lb.utils.events INFO:  eta: 0:34:06  iteration: 39/10000  consumed_samples: 320  total_loss: 5.616  time: 0.2057 s/iter  data_time: 0.0019 s/iter total_throughput: 38.89 samples/s lr: 8.00e-04  
[08/24 01:07:37] lb.utils.events INFO:  eta: 0:34:07  iteration: 59/10000  consumed_samples: 480  total_loss: 4.258  time: 0.2060 s/iter  data_time: 0.0020 s/iter total_throughput: 38.83 samples/s lr: 8.00e-04  
[08/24 01:07:41] lb.utils.events INFO:  eta: 0:34:03  iteration: 79/10000  consumed_samples: 640  total_loss: 3.17  time: 0.2061 s/iter  data_time: 0.0017 s/iter total_throughput: 38.81 samples/s lr: 8.00e-04  
[08/24 01:07:45] lb.utils.events INFO:  eta: 0:33:58  iteration: 99/10000  consumed_samples: 800  total_loss: 2.802  time: 0.2060 s/iter  data_time: 0.0018 s/iter total_throughput: 38.83 samples/s lr: 8.00e-04  
[08/24 01:07:49] lb.utils.events INFO:  eta: 0:33:55  iteration: 119/10000  consumed_samples: 960  total_loss: 2.665  time: 0.2062 s/iter  data_time: 0.0019 s/iter total_throughput: 38.80 samples/s lr: 8.00e-04  
[08/24 01:07:53] lb.utils.events INFO:  eta: 0:33:52  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.496  time: 0.2062 s/iter  data_time: 0.0018 s/iter total_throughput: 38.80 samples/s lr: 8.00e-04  
[08/24 01:07:57] lb.utils.events INFO:  eta: 0:33:48  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.256  time: 0.2063 s/iter  data_time: 0.0018 s/iter total_throughput: 38.78 samples/s lr: 8.00e-04  
[08/24 01:08:01] lb.utils.events INFO:  eta: 0:33:45  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.869  time: 0.2064 s/iter  data_time: 0.0017 s/iter total_throughput: 38.76 samples/s lr: 8.00e-04  
[08/24 01:08:06] lb.utils.events INFO:  eta: 0:33:43  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.601  time: 0.2065 s/iter  data_time: 0.0018 s/iter total_throughput: 38.74 samples/s lr: 8.00e-04  
[08/24 01:08:10] lb.utils.events INFO:  eta: 0:33:39  iteration: 219/10000  consumed_samples: 1760  total_loss: 1.526  time: 0.2066 s/iter  data_time: 0.0021 s/iter total_throughput: 38.73 samples/s lr: 8.00e-04  
[08/24 01:08:35] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:08:35] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:08:35] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 01:08:35] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:08:35] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:08:35] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 01:08:35] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 01:08:35] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:08:37] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:08:41] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:08:42] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:08:42] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:08:53] lb.utils.events INFO:  eta: 0:26:49  iteration: 19/10000  consumed_samples: 160  total_loss: 13.98  time: 0.1612 s/iter  data_time: 0.0021 s/iter total_throughput: 49.63 samples/s lr: 8.00e-04  
[08/24 01:08:56] lb.utils.events INFO:  eta: 0:26:34  iteration: 39/10000  consumed_samples: 320  total_loss: 8.995  time: 0.1603 s/iter  data_time: 0.0020 s/iter total_throughput: 49.89 samples/s lr: 8.00e-04  
[08/24 01:08:59] lb.utils.events INFO:  eta: 0:26:29  iteration: 59/10000  consumed_samples: 480  total_loss: 5.576  time: 0.1601 s/iter  data_time: 0.0018 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/24 01:09:03] lb.utils.events INFO:  eta: 0:26:29  iteration: 79/10000  consumed_samples: 640  total_loss: 4.218  time: 0.1603 s/iter  data_time: 0.0024 s/iter total_throughput: 49.92 samples/s lr: 8.00e-04  
[08/24 01:09:06] lb.utils.events INFO:  eta: 0:26:26  iteration: 99/10000  consumed_samples: 800  total_loss: 3.204  time: 0.1603 s/iter  data_time: 0.0022 s/iter total_throughput: 49.90 samples/s lr: 8.00e-04  
[08/24 01:09:09] lb.utils.events INFO:  eta: 0:26:24  iteration: 119/10000  consumed_samples: 960  total_loss: 2.886  time: 0.1603 s/iter  data_time: 0.0018 s/iter total_throughput: 49.89 samples/s lr: 8.00e-04  
[08/24 01:09:12] lb.utils.events INFO:  eta: 0:26:21  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.742  time: 0.1605 s/iter  data_time: 0.0018 s/iter total_throughput: 49.84 samples/s lr: 8.00e-04  
[08/24 01:09:16] lb.utils.events INFO:  eta: 0:26:19  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.602  time: 0.1606 s/iter  data_time: 0.0019 s/iter total_throughput: 49.80 samples/s lr: 8.00e-04  
[08/24 01:09:19] lb.utils.events INFO:  eta: 0:26:17  iteration: 179/10000  consumed_samples: 1440  total_loss: 2.434  time: 0.1608 s/iter  data_time: 0.0022 s/iter total_throughput: 49.76 samples/s lr: 8.00e-04  
[08/24 01:09:22] lb.utils.events INFO:  eta: 0:26:15  iteration: 199/10000  consumed_samples: 1600  total_loss: 2.197  time: 0.1609 s/iter  data_time: 0.0020 s/iter total_throughput: 49.72 samples/s lr: 8.00e-04  
[08/24 01:09:25] lb.utils.events INFO:  eta: 0:26:14  iteration: 219/10000  consumed_samples: 1760  total_loss: 1.875  time: 0.1610 s/iter  data_time: 0.0021 s/iter total_throughput: 49.69 samples/s lr: 8.00e-04  
[08/24 01:09:28] lb.utils.events INFO:  eta: 0:26:12  iteration: 239/10000  consumed_samples: 1920  total_loss: 1.421  time: 0.1610 s/iter  data_time: 0.0021 s/iter total_throughput: 49.68 samples/s lr: 8.00e-04  
[08/24 01:11:08] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:11:08] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:11:08] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 01:11:08] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:11:08] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:11:08] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 01:11:08] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 01:11:08] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:11:10] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:11:13] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:11:14] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:11:14] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:11:21] lb.utils.events INFO:  eta: 0:11:28  iteration: 19/10000  consumed_samples: 160  total_loss: 6.275  time: 0.0693 s/iter  data_time: 0.0020 s/iter total_throughput: 115.48 samples/s lr: 8.00e-04  
[08/24 01:11:23] lb.utils.events INFO:  eta: 0:11:27  iteration: 39/10000  consumed_samples: 320  total_loss: 4.485  time: 0.0689 s/iter  data_time: 0.0018 s/iter total_throughput: 116.07 samples/s lr: 8.00e-04  
[08/24 01:11:24] lb.utils.events INFO:  eta: 0:11:26  iteration: 59/10000  consumed_samples: 480  total_loss: 3.997  time: 0.0689 s/iter  data_time: 0.0020 s/iter total_throughput: 116.05 samples/s lr: 8.00e-04  
[08/24 01:11:26] lb.utils.events INFO:  eta: 0:11:24  iteration: 79/10000  consumed_samples: 640  total_loss: 3.255  time: 0.0690 s/iter  data_time: 0.0018 s/iter total_throughput: 116.02 samples/s lr: 8.00e-04  
[08/24 01:11:27] lb.utils.events INFO:  eta: 0:11:23  iteration: 99/10000  consumed_samples: 800  total_loss: 2.995  time: 0.0690 s/iter  data_time: 0.0020 s/iter total_throughput: 115.98 samples/s lr: 8.00e-04  
[08/24 01:11:28] lb.utils.events INFO:  eta: 0:11:22  iteration: 119/10000  consumed_samples: 960  total_loss: 2.694  time: 0.0690 s/iter  data_time: 0.0021 s/iter total_throughput: 115.95 samples/s lr: 8.00e-04  
[08/24 01:11:30] lb.utils.events INFO:  eta: 0:11:21  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.373  time: 0.0690 s/iter  data_time: 0.0018 s/iter total_throughput: 115.86 samples/s lr: 8.00e-04  
[08/24 01:11:31] lb.utils.events INFO:  eta: 0:11:19  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.105  time: 0.0691 s/iter  data_time: 0.0019 s/iter total_throughput: 115.81 samples/s lr: 8.00e-04  
[08/24 01:11:33] lb.utils.events INFO:  eta: 0:11:18  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.797  time: 0.0691 s/iter  data_time: 0.0018 s/iter total_throughput: 115.82 samples/s lr: 8.00e-04  
[08/24 01:11:34] lb.utils.events INFO:  eta: 0:11:17  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.515  time: 0.0690 s/iter  data_time: 0.0020 s/iter total_throughput: 115.86 samples/s lr: 8.00e-04  
[08/24 01:11:35] lb.utils.events INFO:  eta: 0:11:16  iteration: 219/10000  consumed_samples: 1760  total_loss: 1.004  time: 0.0691 s/iter  data_time: 0.0020 s/iter total_throughput: 115.84 samples/s lr: 8.00e-04  
[08/24 01:11:37] lb.utils.events INFO:  eta: 0:11:15  iteration: 239/10000  consumed_samples: 1920  total_loss: 0.6074  time: 0.0691 s/iter  data_time: 0.0020 s/iter total_throughput: 115.81 samples/s lr: 8.00e-04  
[08/24 01:37:19] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:37:19] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:37:19] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 01:37:19] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:37:19] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:37:19] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.044 seconds
[08/24 01:37:19] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.046 seconds
[08/24 01:37:19] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:37:21] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:37:26] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:37:26] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:37:26] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:37:59] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:37:59] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:37:59] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 01:37:59] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:37:59] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:38:00] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 01:38:00] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 01:38:00] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:38:01] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:38:05] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:38:06] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:38:06] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:43:42] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:43:42] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:43:42] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 01:43:42] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:43:42] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:43:42] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.055 seconds
[08/24 01:43:42] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 01:43:42] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:43:44] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:43:48] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:43:49] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:43:49] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:44:02] lb.utils.events INFO:  eta: 0:26:35  iteration: 19/10000  consumed_samples: 160  total_loss: 8.326  time: 0.1599 s/iter  data_time: 0.0024 s/iter total_throughput: 50.05 samples/s lr: 8.00e-04  
[08/24 01:44:05] lb.utils.events INFO:  eta: 0:26:33  iteration: 39/10000  consumed_samples: 320  total_loss: 5.074  time: 0.1600 s/iter  data_time: 0.0026 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/24 01:44:08] lb.utils.events INFO:  eta: 0:26:31  iteration: 59/10000  consumed_samples: 480  total_loss: 3.88  time: 0.1601 s/iter  data_time: 0.0029 s/iter total_throughput: 49.97 samples/s lr: 8.00e-04  
[08/24 01:44:11] lb.utils.events INFO:  eta: 0:26:29  iteration: 79/10000  consumed_samples: 640  total_loss: 3.127  time: 0.1601 s/iter  data_time: 0.0020 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/24 01:44:14] lb.utils.events INFO:  eta: 0:26:27  iteration: 99/10000  consumed_samples: 800  total_loss: 2.776  time: 0.1603 s/iter  data_time: 0.0019 s/iter total_throughput: 49.90 samples/s lr: 8.00e-04  
[08/24 01:44:18] lb.utils.events INFO:  eta: 0:26:25  iteration: 119/10000  consumed_samples: 960  total_loss: 2.608  time: 0.1605 s/iter  data_time: 0.0023 s/iter total_throughput: 49.84 samples/s lr: 8.00e-04  
[08/24 01:44:30] libai INFO: Rank of current process: 0. World size: 2
[08/24 01:44:30] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 01:44:30] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 01:44:30] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 01:44:30] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 01:44:30] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.055 seconds
[08/24 01:44:30] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.057 seconds
[08/24 01:44:30] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 01:44:32] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 01:44:35] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 01:44:36] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 01:44:36] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 01:44:49] lb.utils.events INFO:  eta: 0:26:41  iteration: 19/10000  consumed_samples: 160  total_loss: 8.883  time: 0.1606 s/iter  data_time: 0.0028 s/iter total_throughput: 49.81 samples/s lr: 8.00e-04  
[08/24 01:44:52] lb.utils.events INFO:  eta: 0:26:36  iteration: 39/10000  consumed_samples: 320  total_loss: 5.438  time: 0.1602 s/iter  data_time: 0.0032 s/iter total_throughput: 49.93 samples/s lr: 8.00e-04  
[08/24 01:44:55] lb.utils.events INFO:  eta: 0:26:30  iteration: 59/10000  consumed_samples: 480  total_loss: 3.486  time: 0.1599 s/iter  data_time: 0.0026 s/iter total_throughput: 50.03 samples/s lr: 8.00e-04  
[08/24 01:44:58] lb.utils.events INFO:  eta: 0:26:26  iteration: 79/10000  consumed_samples: 640  total_loss: 2.997  time: 0.1598 s/iter  data_time: 0.0023 s/iter total_throughput: 50.05 samples/s lr: 8.00e-04  
[08/24 01:45:01] lb.utils.events INFO:  eta: 0:26:24  iteration: 99/10000  consumed_samples: 800  total_loss: 2.766  time: 0.1600 s/iter  data_time: 0.0029 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/24 01:45:05] lb.utils.events INFO:  eta: 0:26:23  iteration: 119/10000  consumed_samples: 960  total_loss: 2.563  time: 0.1601 s/iter  data_time: 0.0031 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/24 01:45:08] lb.utils.events INFO:  eta: 0:26:20  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.374  time: 0.1602 s/iter  data_time: 0.0026 s/iter total_throughput: 49.94 samples/s lr: 8.00e-04  
[08/24 01:45:11] lb.utils.events INFO:  eta: 0:26:18  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.151  time: 0.1603 s/iter  data_time: 0.0028 s/iter total_throughput: 49.90 samples/s lr: 8.00e-04  
[08/24 01:45:14] lb.utils.events INFO:  eta: 0:26:16  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.829  time: 0.1604 s/iter  data_time: 0.0027 s/iter total_throughput: 49.87 samples/s lr: 8.00e-04  
[08/24 01:45:17] lb.utils.events INFO:  eta: 0:26:13  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.5  time: 0.1605 s/iter  data_time: 0.0025 s/iter total_throughput: 49.84 samples/s lr: 8.00e-04  
[08/24 01:45:21] lb.utils.events INFO:  eta: 0:26:11  iteration: 219/10000  consumed_samples: 1760  total_loss: 1.029  time: 0.1606 s/iter  data_time: 0.0025 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/24 01:45:24] lb.utils.events INFO:  eta: 0:26:08  iteration: 239/10000  consumed_samples: 1920  total_loss: 0.7456  time: 0.1606 s/iter  data_time: 0.0025 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/24 01:45:27] lb.utils.events INFO:  eta: 0:26:06  iteration: 259/10000  consumed_samples: 2080  total_loss: 0.5175  time: 0.1606 s/iter  data_time: 0.0027 s/iter total_throughput: 49.80 samples/s lr: 8.00e-04  
[08/24 01:45:30] lb.utils.events INFO:  eta: 0:26:02  iteration: 279/10000  consumed_samples: 2240  total_loss: 0.264  time: 0.1607 s/iter  data_time: 0.0025 s/iter total_throughput: 49.79 samples/s lr: 8.00e-04  
[08/24 01:45:34] lb.utils.events INFO:  eta: 0:25:59  iteration: 299/10000  consumed_samples: 2400  total_loss: 0.1298  time: 0.1607 s/iter  data_time: 0.0022 s/iter total_throughput: 49.79 samples/s lr: 8.00e-04  
[08/24 01:45:37] lb.utils.events INFO:  eta: 0:25:57  iteration: 319/10000  consumed_samples: 2560  total_loss: 0.0593  time: 0.1608 s/iter  data_time: 0.0027 s/iter total_throughput: 49.76 samples/s lr: 8.00e-04  
[08/24 01:45:40] lb.utils.events INFO:  eta: 0:25:55  iteration: 339/10000  consumed_samples: 2720  total_loss: 0.03537  time: 0.1609 s/iter  data_time: 0.0028 s/iter total_throughput: 49.72 samples/s lr: 8.00e-04  
[08/24 01:45:43] lb.utils.events INFO:  eta: 0:25:52  iteration: 359/10000  consumed_samples: 2880  total_loss: 0.02365  time: 0.1610 s/iter  data_time: 0.0026 s/iter total_throughput: 49.70 samples/s lr: 8.00e-04  
[08/24 01:45:47] lb.utils.events INFO:  eta: 0:25:49  iteration: 379/10000  consumed_samples: 3040  total_loss: 0.01491  time: 0.1610 s/iter  data_time: 0.0027 s/iter total_throughput: 49.69 samples/s lr: 8.00e-04  
[08/24 01:45:50] lb.utils.events INFO:  eta: 0:25:47  iteration: 399/10000  consumed_samples: 3200  total_loss: 0.01009  time: 0.1611 s/iter  data_time: 0.0025 s/iter total_throughput: 49.67 samples/s lr: 8.00e-04  
[08/24 01:45:53] lb.utils.events INFO:  eta: 0:25:44  iteration: 419/10000  consumed_samples: 3360  total_loss: 0.006104  time: 0.1611 s/iter  data_time: 0.0022 s/iter total_throughput: 49.65 samples/s lr: 8.00e-04  
[08/24 01:45:56] lb.utils.events INFO:  eta: 0:25:41  iteration: 439/10000  consumed_samples: 3520  total_loss: 0.003549  time: 0.1612 s/iter  data_time: 0.0027 s/iter total_throughput: 49.64 samples/s lr: 8.00e-04  
[08/24 01:46:00] lb.utils.events INFO:  eta: 0:25:39  iteration: 459/10000  consumed_samples: 3680  total_loss: 0.001614  time: 0.1612 s/iter  data_time: 0.0026 s/iter total_throughput: 49.62 samples/s lr: 8.00e-04  
[08/24 01:46:03] lb.utils.events INFO:  eta: 0:25:36  iteration: 479/10000  consumed_samples: 3840  total_loss: 0.0005741  time: 0.1613 s/iter  data_time: 0.0025 s/iter total_throughput: 49.61 samples/s lr: 8.00e-04  
[08/24 01:46:06] lb.utils.events INFO:  eta: 0:25:33  iteration: 499/10000  consumed_samples: 4000  total_loss: 0.00021  time: 0.1613 s/iter  data_time: 0.0025 s/iter total_throughput: 49.60 samples/s lr: 8.00e-04  
[08/24 01:46:09] lb.utils.events INFO:  eta: 0:25:30  iteration: 519/10000  consumed_samples: 4160  total_loss: 0.0001108  time: 0.1613 s/iter  data_time: 0.0025 s/iter total_throughput: 49.59 samples/s lr: 8.00e-04  
[08/24 01:46:13] lb.utils.events INFO:  eta: 0:25:27  iteration: 539/10000  consumed_samples: 4320  total_loss: 6.197e-05  time: 0.1614 s/iter  data_time: 0.0025 s/iter total_throughput: 49.58 samples/s lr: 8.00e-04  
[08/24 02:29:32] libai INFO: Rank of current process: 0. World size: 2
[08/24 02:29:32] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 02:29:32] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 02:29:32] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 02:29:32] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 02:29:32] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.049 seconds
[08/24 02:29:32] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/24 02:29:32] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 02:29:34] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 02:29:39] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 02:29:39] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:29:39] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:29:40] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 02:29:40] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 02:33:32] libai INFO: Rank of current process: 0. World size: 2
[08/24 02:33:32] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 02:33:32] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 02:33:32] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 02:33:32] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 02:33:32] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 02:33:32] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 02:33:32] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 02:33:34] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 02:33:38] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 02:33:38] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:33:38] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:33:39] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 02:33:39] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 02:34:00] lb.utils.events INFO:  eta: 0:26:37  iteration: 19/10000  consumed_samples: 160  total_loss: 7.254  time: 0.1599 s/iter  data_time: 0.0024 s/iter total_throughput: 50.03 samples/s lr: 8.00e-04  
[08/24 02:34:04] lb.utils.events INFO:  eta: 0:26:34  iteration: 39/10000  consumed_samples: 320  total_loss: 4.674  time: 0.1599 s/iter  data_time: 0.0022 s/iter total_throughput: 50.04 samples/s lr: 8.00e-04  
[08/24 02:34:07] lb.utils.events INFO:  eta: 0:26:33  iteration: 59/10000  consumed_samples: 480  total_loss: 3.981  time: 0.1602 s/iter  data_time: 0.0023 s/iter total_throughput: 49.93 samples/s lr: 8.00e-04  
[08/24 02:34:10] lb.utils.events INFO:  eta: 0:26:30  iteration: 79/10000  consumed_samples: 640  total_loss: 3.286  time: 0.1603 s/iter  data_time: 0.0024 s/iter total_throughput: 49.91 samples/s lr: 8.00e-04  
[08/24 02:34:13] lb.utils.events INFO:  eta: 0:26:26  iteration: 99/10000  consumed_samples: 800  total_loss: 3.123  time: 0.1602 s/iter  data_time: 0.0022 s/iter total_throughput: 49.92 samples/s lr: 8.00e-04  
[08/24 02:34:16] lb.utils.events INFO:  eta: 0:26:22  iteration: 119/10000  consumed_samples: 960  total_loss: 2.837  time: 0.1602 s/iter  data_time: 0.0022 s/iter total_throughput: 49.93 samples/s lr: 8.00e-04  
[08/24 02:34:20] lb.utils.events INFO:  eta: 0:26:20  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.613  time: 0.1602 s/iter  data_time: 0.0024 s/iter total_throughput: 49.92 samples/s lr: 8.00e-04  
[08/24 02:34:23] lb.utils.events INFO:  eta: 0:26:17  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.318  time: 0.1603 s/iter  data_time: 0.0022 s/iter total_throughput: 49.90 samples/s lr: 8.00e-04  
[08/24 02:43:17] libai INFO: Rank of current process: 0. World size: 2
[08/24 02:43:17] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 02:43:17] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 02:43:17] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 02:43:17] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 02:43:17] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.057 seconds
[08/24 02:43:17] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.059 seconds
[08/24 02:43:17] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 02:43:19] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 02:43:22] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 02:43:22] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:43:22] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:43:23] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 02:43:23] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 02:43:44] lb.utils.events INFO:  eta: 0:26:36  iteration: 19/10000  consumed_samples: 160  total_loss: 9.68  time: 0.1600 s/iter  data_time: 0.0022 s/iter total_throughput: 50.00 samples/s lr: 8.00e-04  
[08/24 02:43:48] lb.utils.events INFO:  eta: 0:26:33  iteration: 39/10000  consumed_samples: 320  total_loss: 5.177  time: 0.1598 s/iter  data_time: 0.0023 s/iter total_throughput: 50.05 samples/s lr: 8.00e-04  
[08/24 02:43:51] lb.utils.events INFO:  eta: 0:26:32  iteration: 59/10000  consumed_samples: 480  total_loss: 3.965  time: 0.1600 s/iter  data_time: 0.0020 s/iter total_throughput: 50.01 samples/s lr: 8.00e-04  
[08/24 02:43:54] lb.utils.events INFO:  eta: 0:26:30  iteration: 79/10000  consumed_samples: 640  total_loss: 3.216  time: 0.1601 s/iter  data_time: 0.0021 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/24 02:43:57] lb.utils.events INFO:  eta: 0:26:26  iteration: 99/10000  consumed_samples: 800  total_loss: 2.893  time: 0.1601 s/iter  data_time: 0.0022 s/iter total_throughput: 49.97 samples/s lr: 8.00e-04  
[08/24 02:44:00] lb.utils.events INFO:  eta: 0:26:23  iteration: 119/10000  consumed_samples: 960  total_loss: 2.754  time: 0.1602 s/iter  data_time: 0.0022 s/iter total_throughput: 49.95 samples/s lr: 8.00e-04  
[08/24 02:44:04] lb.utils.events INFO:  eta: 0:26:20  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.608  time: 0.1601 s/iter  data_time: 0.0023 s/iter total_throughput: 49.96 samples/s lr: 8.00e-04  
[08/24 02:44:07] lb.utils.events INFO:  eta: 0:26:17  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.426  time: 0.1602 s/iter  data_time: 0.0022 s/iter total_throughput: 49.95 samples/s lr: 8.00e-04  
[08/24 02:44:10] lb.utils.events INFO:  eta: 0:26:14  iteration: 179/10000  consumed_samples: 1440  total_loss: 2.22  time: 0.1602 s/iter  data_time: 0.0023 s/iter total_throughput: 49.95 samples/s lr: 8.00e-04  
[08/24 02:44:13] lb.utils.events INFO:  eta: 0:26:11  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.967  time: 0.1602 s/iter  data_time: 0.0022 s/iter total_throughput: 49.93 samples/s lr: 8.00e-04  
[08/24 02:44:16] lb.utils.events INFO:  eta: 0:26:09  iteration: 219/10000  consumed_samples: 1760  total_loss: 1.461  time: 0.1603 s/iter  data_time: 0.0024 s/iter total_throughput: 49.91 samples/s lr: 8.00e-04  
[08/24 02:44:20] lb.utils.events INFO:  eta: 0:26:06  iteration: 239/10000  consumed_samples: 1920  total_loss: 1.008  time: 0.1603 s/iter  data_time: 0.0023 s/iter total_throughput: 49.89 samples/s lr: 8.00e-04  
[08/24 02:44:23] lb.utils.events INFO:  eta: 0:26:03  iteration: 259/10000  consumed_samples: 2080  total_loss: 0.8413  time: 0.1604 s/iter  data_time: 0.0021 s/iter total_throughput: 49.88 samples/s lr: 8.00e-04  
[08/24 02:44:26] lb.utils.events INFO:  eta: 0:26:00  iteration: 279/10000  consumed_samples: 2240  total_loss: 0.5917  time: 0.1604 s/iter  data_time: 0.0021 s/iter total_throughput: 49.87 samples/s lr: 8.00e-04  
[08/24 02:44:29] lb.utils.events INFO:  eta: 0:25:57  iteration: 299/10000  consumed_samples: 2400  total_loss: 0.4054  time: 0.1605 s/iter  data_time: 0.0020 s/iter total_throughput: 49.84 samples/s lr: 8.00e-04  
[08/24 02:44:33] lb.utils.events INFO:  eta: 0:25:55  iteration: 319/10000  consumed_samples: 2560  total_loss: 0.2196  time: 0.1606 s/iter  data_time: 0.0023 s/iter total_throughput: 49.82 samples/s lr: 8.00e-04  
[08/24 02:44:36] lb.utils.events INFO:  eta: 0:25:52  iteration: 339/10000  consumed_samples: 2720  total_loss: 0.1112  time: 0.1606 s/iter  data_time: 0.0023 s/iter total_throughput: 49.80 samples/s lr: 8.00e-04  
[08/24 02:44:39] lb.utils.events INFO:  eta: 0:25:49  iteration: 359/10000  consumed_samples: 2880  total_loss: 0.05964  time: 0.1607 s/iter  data_time: 0.0021 s/iter total_throughput: 49.78 samples/s lr: 8.00e-04  
[08/24 02:57:29] libai INFO: Rank of current process: 0. World size: 2
[08/24 02:57:29] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 02:57:29] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 02:57:29] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 02:57:29] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 02:57:29] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.049 seconds
[08/24 02:57:29] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/24 02:57:29] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 02:57:31] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 02:57:34] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 02:57:34] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:57:34] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 02:57:35] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 02:57:35] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 02:57:50] lb.utils.events INFO:  eta: 0:11:24  iteration: 19/10000  consumed_samples: 160  total_loss: 13  time: 0.0691 s/iter  data_time: 0.0024 s/iter total_throughput: 115.81 samples/s lr: 8.00e-04  
[08/24 02:57:52] lb.utils.events INFO:  eta: 0:11:24  iteration: 39/10000  consumed_samples: 320  total_loss: 7.22  time: 0.0689 s/iter  data_time: 0.0022 s/iter total_throughput: 116.16 samples/s lr: 8.00e-04  
[08/24 02:57:53] lb.utils.events INFO:  eta: 0:11:22  iteration: 59/10000  consumed_samples: 480  total_loss: 4.89  time: 0.0688 s/iter  data_time: 0.0022 s/iter total_throughput: 116.27 samples/s lr: 8.00e-04  
[08/24 02:57:54] lb.utils.events INFO:  eta: 0:11:22  iteration: 79/10000  consumed_samples: 640  total_loss: 3.673  time: 0.0688 s/iter  data_time: 0.0023 s/iter total_throughput: 116.32 samples/s lr: 8.00e-04  
[08/24 02:57:56] lb.utils.events INFO:  eta: 0:11:21  iteration: 99/10000  consumed_samples: 800  total_loss: 2.94  time: 0.0688 s/iter  data_time: 0.0023 s/iter total_throughput: 116.22 samples/s lr: 8.00e-04  
[08/24 02:57:57] lb.utils.events INFO:  eta: 0:11:20  iteration: 119/10000  consumed_samples: 960  total_loss: 2.64  time: 0.0689 s/iter  data_time: 0.0023 s/iter total_throughput: 116.17 samples/s lr: 8.00e-04  
[08/24 02:57:58] lb.utils.events INFO:  eta: 0:11:18  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.418  time: 0.0689 s/iter  data_time: 0.0024 s/iter total_throughput: 116.12 samples/s lr: 8.00e-04  
[08/24 02:58:00] lb.utils.events INFO:  eta: 0:11:17  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.189  time: 0.0689 s/iter  data_time: 0.0024 s/iter total_throughput: 116.10 samples/s lr: 8.00e-04  
[08/24 02:58:01] lb.utils.events INFO:  eta: 0:11:17  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.838  time: 0.0690 s/iter  data_time: 0.0024 s/iter total_throughput: 116.02 samples/s lr: 8.00e-04  
[08/24 02:58:03] lb.utils.events INFO:  eta: 0:11:16  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.485  time: 0.0690 s/iter  data_time: 0.0024 s/iter total_throughput: 115.97 samples/s lr: 8.00e-04  
[08/24 03:15:58] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:15:58] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:15:58] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:15:58] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:15:58] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:15:58] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.052 seconds
[08/24 03:15:58] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 03:15:58] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:16:00] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:16:04] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:16:04] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:16:04] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:16:05] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:16:05] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:16:20] lb.utils.events INFO:  eta: 0:11:25  iteration: 19/10000  consumed_samples: 160  total_loss: 10.07  time: 0.0688 s/iter  data_time: 0.0023 s/iter total_throughput: 116.27 samples/s lr: 8.00e-04  
[08/24 03:16:22] lb.utils.events INFO:  eta: 0:11:25  iteration: 39/10000  consumed_samples: 320  total_loss: 5.932  time: 0.0689 s/iter  data_time: 0.0022 s/iter total_throughput: 116.19 samples/s lr: 8.00e-04  
[08/24 03:16:23] lb.utils.events INFO:  eta: 0:11:25  iteration: 59/10000  consumed_samples: 480  total_loss: 4.112  time: 0.0689 s/iter  data_time: 0.0027 s/iter total_throughput: 116.17 samples/s lr: 8.00e-04  
[08/24 03:16:24] lb.utils.events INFO:  eta: 0:11:24  iteration: 79/10000  consumed_samples: 640  total_loss: 3.408  time: 0.0689 s/iter  data_time: 0.0029 s/iter total_throughput: 116.08 samples/s lr: 8.00e-04  
[08/24 03:16:26] lb.utils.events INFO:  eta: 0:11:23  iteration: 99/10000  consumed_samples: 800  total_loss: 2.892  time: 0.0689 s/iter  data_time: 0.0025 s/iter total_throughput: 116.04 samples/s lr: 8.00e-04  
[08/24 03:16:27] lb.utils.events INFO:  eta: 0:11:22  iteration: 119/10000  consumed_samples: 960  total_loss: 2.69  time: 0.0690 s/iter  data_time: 0.0027 s/iter total_throughput: 116.02 samples/s lr: 8.00e-04  
[08/24 03:16:29] lb.utils.events INFO:  eta: 0:11:20  iteration: 139/10000  consumed_samples: 1120  total_loss: 2.497  time: 0.0690 s/iter  data_time: 0.0024 s/iter total_throughput: 116.01 samples/s lr: 8.00e-04  
[08/24 03:16:30] lb.utils.events INFO:  eta: 0:11:19  iteration: 159/10000  consumed_samples: 1280  total_loss: 2.252  time: 0.0690 s/iter  data_time: 0.0026 s/iter total_throughput: 115.94 samples/s lr: 8.00e-04  
[08/24 03:16:31] lb.utils.events INFO:  eta: 0:11:18  iteration: 179/10000  consumed_samples: 1440  total_loss: 1.947  time: 0.0690 s/iter  data_time: 0.0027 s/iter total_throughput: 115.87 samples/s lr: 8.00e-04  
[08/24 03:16:33] lb.utils.events INFO:  eta: 0:11:17  iteration: 199/10000  consumed_samples: 1600  total_loss: 1.678  time: 0.0691 s/iter  data_time: 0.0026 s/iter total_throughput: 115.81 samples/s lr: 8.00e-04  
[08/24 03:16:34] lb.utils.events INFO:  eta: 0:11:16  iteration: 219/10000  consumed_samples: 1760  total_loss: 1.106  time: 0.0691 s/iter  data_time: 0.0025 s/iter total_throughput: 115.75 samples/s lr: 8.00e-04  
[08/24 03:16:36] lb.utils.events INFO:  eta: 0:11:15  iteration: 239/10000  consumed_samples: 1920  total_loss: 0.6764  time: 0.0691 s/iter  data_time: 0.0025 s/iter total_throughput: 115.75 samples/s lr: 8.00e-04  
[08/24 03:16:37] lb.utils.events INFO:  eta: 0:11:14  iteration: 259/10000  consumed_samples: 2080  total_loss: 0.4143  time: 0.0691 s/iter  data_time: 0.0022 s/iter total_throughput: 115.76 samples/s lr: 8.00e-04  
[08/24 03:31:43] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:31:43] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:31:43] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:31:43] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:31:43] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:31:43] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.052 seconds
[08/24 03:31:43] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 03:31:43] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:31:45] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:31:49] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:31:49] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:31:49] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:31:50] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:31:50] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:31:50] lb.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[08/24 03:32:06] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:32:06] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:32:06] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:32:06] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:32:06] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:32:06] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.052 seconds
[08/24 03:32:06] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.053 seconds
[08/24 03:32:06] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:32:08] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:32:12] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:32:12] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:32:12] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:32:12] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:32:12] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:32:13] lb.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[08/24 03:34:05] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:34:05] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:34:05] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:34:05] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:34:05] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:34:05] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.049 seconds
[08/24 03:34:05] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/24 03:34:05] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:34:06] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:34:10] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:34:10] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:34:10] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:34:11] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:34:11] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:36:26] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:36:26] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:36:26] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15mdebug[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:36:26] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:36:26] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:36:26] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/24 03:36:26] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 03:36:26] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:36:28] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:36:32] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:36:32] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:36:32] lb.engine.default INFO: Graph debug mode on, automatically output debug info.
[08/24 03:36:33] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:36:33] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:36:56] lb.utils.events INFO:  eta: 0:31:02  iteration: 19/10000  consumed_samples: 160  total_loss: 8.108  time: 0.1865 s/iter  data_time: 0.0020 s/iter total_throughput: 42.90 samples/s lr: 8.00e-04  
[08/24 03:36:59] lb.utils.events INFO:  eta: 0:30:58  iteration: 39/10000  consumed_samples: 320  total_loss: 5.197  time: 0.1867 s/iter  data_time: 0.0021 s/iter total_throughput: 42.86 samples/s lr: 8.00e-04  
[08/24 03:37:03] lb.utils.events INFO:  eta: 0:30:54  iteration: 59/10000  consumed_samples: 480  total_loss: 3.571  time: 0.1865 s/iter  data_time: 0.0021 s/iter total_throughput: 42.89 samples/s lr: 8.00e-04  
[08/24 03:37:07] lb.utils.events INFO:  eta: 0:30:51  iteration: 79/10000  consumed_samples: 640  total_loss: 2.886  time: 0.1866 s/iter  data_time: 0.0023 s/iter total_throughput: 42.86 samples/s lr: 8.00e-04  
[08/24 03:37:11] lb.utils.events INFO:  eta: 0:30:47  iteration: 99/10000  consumed_samples: 800  total_loss: 2.651  time: 0.1867 s/iter  data_time: 0.0024 s/iter total_throughput: 42.86 samples/s lr: 8.00e-04  
[08/24 03:37:51] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:37:51] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:37:51] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:37:52] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:37:52] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:37:52] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/24 03:37:52] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/24 03:37:52] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:37:53] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:37:57] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:37:58] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:37:58] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:38:12] lb.utils.events INFO:  eta: 0:30:51  iteration: 19/10000  consumed_samples: 160  total_loss: 8.789  time: 0.1857 s/iter  data_time: 0.0023 s/iter total_throughput: 43.08 samples/s lr: 8.00e-04  
[08/24 03:38:16] lb.utils.events INFO:  eta: 0:30:45  iteration: 39/10000  consumed_samples: 320  total_loss: 4.718  time: 0.1856 s/iter  data_time: 0.0024 s/iter total_throughput: 43.11 samples/s lr: 8.00e-04  
[08/24 03:38:19] lb.utils.events INFO:  eta: 0:30:42  iteration: 59/10000  consumed_samples: 480  total_loss: 3.694  time: 0.1856 s/iter  data_time: 0.0023 s/iter total_throughput: 43.10 samples/s lr: 8.00e-04  
[08/24 03:38:23] lb.utils.events INFO:  eta: 0:30:41  iteration: 79/10000  consumed_samples: 640  total_loss: 2.941  time: 0.1856 s/iter  data_time: 0.0022 s/iter total_throughput: 43.10 samples/s lr: 8.00e-04  
[08/24 03:38:27] lb.utils.events INFO:  eta: 0:30:39  iteration: 99/10000  consumed_samples: 800  total_loss: 2.738  time: 0.1858 s/iter  data_time: 0.0022 s/iter total_throughput: 43.06 samples/s lr: 8.00e-04  
[08/24 03:42:22] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:42:22] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:42:23] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:42:23] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:42:23] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:42:23] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 03:42:23] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 03:42:23] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:42:24] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:42:28] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:42:29] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:42:29] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:42:29] lb.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[08/24 03:47:39] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:47:39] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:47:39] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:47:39] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:47:39] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:47:39] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 03:47:39] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 03:47:39] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:47:41] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:47:45] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:47:45] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:47:45] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:47:45] lb.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[08/24 03:57:47] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:57:47] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:57:47] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:57:47] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:57:47] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:57:47] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.055 seconds
[08/24 03:57:47] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 03:57:47] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:57:49] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:57:53] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:57:54] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:57:54] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:57:54] lb.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[08/24 03:58:13] libai INFO: Rank of current process: 0. World size: 2
[08/24 03:58:13] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 03:58:13] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 03:58:13] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 03:58:13] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 03:58:13] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/24 03:58:13] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/24 03:58:13] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 03:58:15] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 03:58:19] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 03:58:19] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 03:58:19] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 03:58:31] lb.utils.events INFO:  eta: 0:15:32  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0024 s/iter total_throughput: 85.30 samples/s lr: 8.00e-04  
[08/24 03:58:33] lb.utils.events INFO:  eta: 0:15:30  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.0933 s/iter  data_time: 0.0025 s/iter total_throughput: 85.71 samples/s lr: 8.00e-04  
[08/24 03:58:35] lb.utils.events INFO:  eta: 0:15:29  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.0934 s/iter  data_time: 0.0024 s/iter total_throughput: 85.68 samples/s lr: 8.00e-04  
[08/24 03:58:37] lb.utils.events INFO:  eta: 0:15:27  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.0934 s/iter  data_time: 0.0024 s/iter total_throughput: 85.66 samples/s lr: 8.00e-04  
[08/24 03:58:39] lb.utils.events INFO:  eta: 0:15:25  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.0934 s/iter  data_time: 0.0028 s/iter total_throughput: 85.65 samples/s lr: 8.00e-04  
[08/24 03:58:40] lb.utils.events INFO:  eta: 0:15:24  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.0935 s/iter  data_time: 0.0022 s/iter total_throughput: 85.57 samples/s lr: 8.00e-04  
[08/24 03:58:42] lb.utils.events INFO:  eta: 0:15:23  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.0935 s/iter  data_time: 0.0026 s/iter total_throughput: 85.54 samples/s lr: 8.00e-04  
[08/24 03:58:44] lb.utils.events INFO:  eta: 0:15:21  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.0935 s/iter  data_time: 0.0023 s/iter total_throughput: 85.52 samples/s lr: 8.00e-04  
[08/24 03:58:46] lb.utils.events INFO:  eta: 0:15:19  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.0936 s/iter  data_time: 0.0025 s/iter total_throughput: 85.48 samples/s lr: 8.00e-04  
[08/24 03:58:48] lb.utils.events INFO:  eta: 0:15:18  iteration: 199/10000  consumed_samples: 1600  total_loss: nan  time: 0.0936 s/iter  data_time: 0.0026 s/iter total_throughput: 85.46 samples/s lr: 8.00e-04  
[08/24 03:58:50] lb.utils.events INFO:  eta: 0:15:16  iteration: 219/10000  consumed_samples: 1760  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.42 samples/s lr: 8.00e-04  
[08/24 03:58:52] lb.utils.events INFO:  eta: 0:15:15  iteration: 239/10000  consumed_samples: 1920  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0028 s/iter total_throughput: 85.40 samples/s lr: 8.00e-04  
[08/24 03:58:54] lb.utils.events INFO:  eta: 0:15:13  iteration: 259/10000  consumed_samples: 2080  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.39 samples/s lr: 8.00e-04  
[08/24 03:58:56] lb.utils.events INFO:  eta: 0:15:11  iteration: 279/10000  consumed_samples: 2240  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0023 s/iter total_throughput: 85.39 samples/s lr: 8.00e-04  
[08/24 03:58:57] lb.utils.events INFO:  eta: 0:15:09  iteration: 299/10000  consumed_samples: 2400  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0024 s/iter total_throughput: 85.40 samples/s lr: 8.00e-04  
[08/24 03:58:59] lb.utils.events INFO:  eta: 0:15:07  iteration: 319/10000  consumed_samples: 2560  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.40 samples/s lr: 8.00e-04  
[08/24 03:59:01] lb.utils.events INFO:  eta: 0:15:05  iteration: 339/10000  consumed_samples: 2720  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0024 s/iter total_throughput: 85.40 samples/s lr: 8.00e-04  
[08/24 03:59:03] lb.utils.events INFO:  eta: 0:15:03  iteration: 359/10000  consumed_samples: 2880  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0028 s/iter total_throughput: 85.41 samples/s lr: 8.00e-04  
[08/24 03:59:05] lb.utils.events INFO:  eta: 0:15:01  iteration: 379/10000  consumed_samples: 3040  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0023 s/iter total_throughput: 85.42 samples/s lr: 8.00e-04  
[08/24 03:59:07] lb.utils.events INFO:  eta: 0:15:00  iteration: 399/10000  consumed_samples: 3200  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0022 s/iter total_throughput: 85.42 samples/s lr: 8.00e-04  
[08/24 03:59:09] lb.utils.events INFO:  eta: 0:14:58  iteration: 419/10000  consumed_samples: 3360  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.41 samples/s lr: 8.00e-04  
[08/24 03:59:11] lb.utils.events INFO:  eta: 0:14:56  iteration: 439/10000  consumed_samples: 3520  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.40 samples/s lr: 8.00e-04  
[08/24 03:59:12] lb.utils.events INFO:  eta: 0:14:54  iteration: 459/10000  consumed_samples: 3680  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.38 samples/s lr: 8.00e-04  
[08/24 03:59:14] lb.utils.events INFO:  eta: 0:14:52  iteration: 479/10000  consumed_samples: 3840  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0023 s/iter total_throughput: 85.37 samples/s lr: 8.00e-04  
[08/24 03:59:16] lb.utils.events INFO:  eta: 0:14:51  iteration: 499/10000  consumed_samples: 4000  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.37 samples/s lr: 8.00e-04  
[08/24 03:59:18] lb.utils.events INFO:  eta: 0:14:49  iteration: 519/10000  consumed_samples: 4160  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.36 samples/s lr: 8.00e-04  
[08/24 03:59:20] lb.utils.events INFO:  eta: 0:14:47  iteration: 539/10000  consumed_samples: 4320  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0024 s/iter total_throughput: 85.36 samples/s lr: 8.00e-04  
[08/24 03:59:22] lb.utils.events INFO:  eta: 0:14:45  iteration: 559/10000  consumed_samples: 4480  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0027 s/iter total_throughput: 85.35 samples/s lr: 8.00e-04  
[08/24 03:59:24] lb.utils.events INFO:  eta: 0:14:43  iteration: 579/10000  consumed_samples: 4640  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0025 s/iter total_throughput: 85.35 samples/s lr: 8.00e-04  
[08/24 03:59:26] lb.utils.events INFO:  eta: 0:14:42  iteration: 599/10000  consumed_samples: 4800  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0024 s/iter total_throughput: 85.35 samples/s lr: 8.00e-04  
[08/24 03:59:28] lb.utils.events INFO:  eta: 0:14:40  iteration: 619/10000  consumed_samples: 4960  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0024 s/iter total_throughput: 85.34 samples/s lr: 8.00e-04  
[08/24 03:59:29] lb.utils.events INFO:  eta: 0:14:38  iteration: 639/10000  consumed_samples: 5120  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0022 s/iter total_throughput: 85.33 samples/s lr: 8.00e-04  
[08/24 03:59:31] lb.utils.events INFO:  eta: 0:14:36  iteration: 659/10000  consumed_samples: 5280  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0024 s/iter total_throughput: 85.32 samples/s lr: 8.00e-04  
[08/24 03:59:33] lb.utils.events INFO:  eta: 0:14:34  iteration: 679/10000  consumed_samples: 5440  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0026 s/iter total_throughput: 85.31 samples/s lr: 8.00e-04  
[08/24 03:59:35] lb.utils.events INFO:  eta: 0:14:33  iteration: 699/10000  consumed_samples: 5600  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0024 s/iter total_throughput: 85.30 samples/s lr: 8.00e-04  
[08/24 03:59:37] lb.utils.events INFO:  eta: 0:14:31  iteration: 719/10000  consumed_samples: 5760  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0023 s/iter total_throughput: 85.29 samples/s lr: 8.00e-04  
[08/24 03:59:39] lb.utils.events INFO:  eta: 0:14:29  iteration: 739/10000  consumed_samples: 5920  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0025 s/iter total_throughput: 85.28 samples/s lr: 8.00e-04  
[08/24 03:59:41] lb.utils.events INFO:  eta: 0:14:27  iteration: 759/10000  consumed_samples: 6080  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0026 s/iter total_throughput: 85.28 samples/s lr: 8.00e-04  
[08/24 03:59:43] lb.utils.events INFO:  eta: 0:14:25  iteration: 779/10000  consumed_samples: 6240  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0025 s/iter total_throughput: 85.27 samples/s lr: 8.00e-04  
[08/24 03:59:44] lb.utils.events INFO:  eta: 0:14:24  iteration: 799/10000  consumed_samples: 6400  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0024 s/iter total_throughput: 85.27 samples/s lr: 8.00e-04  
[08/24 03:59:46] lb.utils.events INFO:  eta: 0:14:22  iteration: 819/10000  consumed_samples: 6560  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0023 s/iter total_throughput: 85.26 samples/s lr: 8.00e-04  
[08/24 03:59:48] lb.utils.events INFO:  eta: 0:14:20  iteration: 839/10000  consumed_samples: 6720  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0023 s/iter total_throughput: 85.25 samples/s lr: 8.00e-04  
[08/24 03:59:50] lb.utils.events INFO:  eta: 0:14:18  iteration: 859/10000  consumed_samples: 6880  total_loss: nan  time: 0.0938 s/iter  data_time: 0.0026 s/iter total_throughput: 85.25 samples/s lr: 8.00e-04  
[08/24 03:59:52] lb.utils.events INFO:  eta: 0:14:16  iteration: 879/10000  consumed_samples: 7040  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0026 s/iter total_throughput: 85.24 samples/s lr: 8.00e-04  
[08/24 03:59:54] lb.utils.events INFO:  eta: 0:14:15  iteration: 899/10000  consumed_samples: 7200  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0024 s/iter total_throughput: 85.23 samples/s lr: 8.00e-04  
[08/24 03:59:56] lb.utils.events INFO:  eta: 0:14:13  iteration: 919/10000  consumed_samples: 7360  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0022 s/iter total_throughput: 85.23 samples/s lr: 8.00e-04  
[08/24 03:59:58] lb.utils.events INFO:  eta: 0:14:11  iteration: 939/10000  consumed_samples: 7520  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0025 s/iter total_throughput: 85.22 samples/s lr: 8.00e-04  
[08/24 04:00:00] lb.utils.events INFO:  eta: 0:14:09  iteration: 959/10000  consumed_samples: 7680  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0025 s/iter total_throughput: 85.22 samples/s lr: 8.00e-04  
[08/24 04:00:01] lb.utils.events INFO:  eta: 0:14:07  iteration: 979/10000  consumed_samples: 7840  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0025 s/iter total_throughput: 85.21 samples/s lr: 8.00e-04  
[08/24 04:00:03] lb.utils.events INFO:  eta: 0:14:06  iteration: 999/10000  consumed_samples: 8000  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0026 s/iter total_throughput: 85.21 samples/s lr: 8.00e-04  
[08/24 04:00:05] lb.utils.events INFO:  eta: 0:14:04  iteration: 1019/10000  consumed_samples: 8160  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0023 s/iter total_throughput: 85.19 samples/s lr: 8.00e-04  
[08/24 04:00:07] lb.utils.events INFO:  eta: 0:14:02  iteration: 1039/10000  consumed_samples: 8320  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0023 s/iter total_throughput: 85.19 samples/s lr: 8.00e-04  
[08/24 04:00:09] lb.utils.events INFO:  eta: 0:14:00  iteration: 1059/10000  consumed_samples: 8480  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0024 s/iter total_throughput: 85.18 samples/s lr: 8.00e-04  
[08/24 04:00:11] lb.utils.events INFO:  eta: 0:13:59  iteration: 1079/10000  consumed_samples: 8640  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0027 s/iter total_throughput: 85.18 samples/s lr: 8.00e-04  
[08/24 04:00:13] lb.utils.events INFO:  eta: 0:13:57  iteration: 1099/10000  consumed_samples: 8800  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0026 s/iter total_throughput: 85.18 samples/s lr: 8.00e-04  
[08/24 04:00:15] lb.utils.events INFO:  eta: 0:13:55  iteration: 1119/10000  consumed_samples: 8960  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0026 s/iter total_throughput: 85.17 samples/s lr: 8.00e-04  
[08/24 04:00:17] lb.utils.events INFO:  eta: 0:13:53  iteration: 1139/10000  consumed_samples: 9120  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0025 s/iter total_throughput: 85.17 samples/s lr: 8.00e-04  
[08/24 04:00:18] lb.utils.events INFO:  eta: 0:13:51  iteration: 1159/10000  consumed_samples: 9280  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0022 s/iter total_throughput: 85.16 samples/s lr: 8.00e-04  
[08/24 04:00:20] lb.utils.events INFO:  eta: 0:13:50  iteration: 1179/10000  consumed_samples: 9440  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0026 s/iter total_throughput: 85.16 samples/s lr: 8.00e-04  
[08/24 04:00:22] lb.utils.events INFO:  eta: 0:13:48  iteration: 1199/10000  consumed_samples: 9600  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0025 s/iter total_throughput: 85.16 samples/s lr: 8.00e-04  
[08/24 04:00:24] lb.utils.events INFO:  eta: 0:13:46  iteration: 1219/10000  consumed_samples: 9760  total_loss: nan  time: 0.0939 s/iter  data_time: 0.0024 s/iter total_throughput: 85.16 samples/s lr: 8.00e-04  
[08/24 04:00:26] lb.utils.events INFO:  eta: 0:13:44  iteration: 1239/10000  consumed_samples: 9920  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0024 s/iter total_throughput: 85.15 samples/s lr: 8.00e-04  
[08/24 04:00:28] lb.utils.events INFO:  eta: 0:13:42  iteration: 1259/10000  consumed_samples: 10080  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0026 s/iter total_throughput: 85.15 samples/s lr: 8.00e-04  
[08/24 04:00:30] lb.utils.events INFO:  eta: 0:13:40  iteration: 1279/10000  consumed_samples: 10240  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0024 s/iter total_throughput: 85.14 samples/s lr: 8.00e-04  
[08/24 04:00:32] lb.utils.events INFO:  eta: 0:13:39  iteration: 1299/10000  consumed_samples: 10400  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0024 s/iter total_throughput: 85.14 samples/s lr: 8.00e-04  
[08/24 04:00:34] lb.utils.events INFO:  eta: 0:13:37  iteration: 1319/10000  consumed_samples: 10560  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0023 s/iter total_throughput: 85.14 samples/s lr: 8.00e-04  
[08/24 04:00:35] lb.utils.events INFO:  eta: 0:13:35  iteration: 1339/10000  consumed_samples: 10720  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0026 s/iter total_throughput: 85.14 samples/s lr: 8.00e-04  
[08/24 04:00:37] lb.utils.events INFO:  eta: 0:13:33  iteration: 1359/10000  consumed_samples: 10880  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0023 s/iter total_throughput: 85.13 samples/s lr: 8.00e-04  
[08/24 04:00:39] lb.utils.events INFO:  eta: 0:13:31  iteration: 1379/10000  consumed_samples: 11040  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0024 s/iter total_throughput: 85.13 samples/s lr: 8.00e-04  
[08/24 04:00:41] lb.utils.events INFO:  eta: 0:13:30  iteration: 1399/10000  consumed_samples: 11200  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0025 s/iter total_throughput: 85.13 samples/s lr: 8.00e-04  
[08/24 04:00:43] lb.utils.events INFO:  eta: 0:13:28  iteration: 1419/10000  consumed_samples: 11360  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0026 s/iter total_throughput: 85.13 samples/s lr: 8.00e-04  
[08/24 04:00:45] lb.utils.events INFO:  eta: 0:13:26  iteration: 1439/10000  consumed_samples: 11520  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0024 s/iter total_throughput: 85.12 samples/s lr: 8.00e-04  
[08/24 04:00:47] lb.utils.events INFO:  eta: 0:13:24  iteration: 1459/10000  consumed_samples: 11680  total_loss: nan  time: 0.0940 s/iter  data_time: 0.0025 s/iter total_throughput: 85.12 samples/s lr: 8.00e-04  
[08/24 04:07:55] libai INFO: Rank of current process: 0. World size: 2
[08/24 04:07:55] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 04:07:55] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 04:07:55] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 04:07:55] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 04:07:55] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.056 seconds
[08/24 04:07:55] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.058 seconds
[08/24 04:07:55] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 04:07:57] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 04:08:01] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 04:08:02] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 04:08:02] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 04:08:13] lb.utils.events INFO:  eta: 0:15:33  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.0941 s/iter  data_time: 0.0023 s/iter total_throughput: 85.06 samples/s lr: 8.00e-04  
[08/24 04:08:15] lb.utils.events INFO:  eta: 0:15:31  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.0936 s/iter  data_time: 0.0026 s/iter total_throughput: 85.42 samples/s lr: 8.00e-04  
[08/24 04:08:17] lb.utils.events INFO:  eta: 0:15:29  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.0936 s/iter  data_time: 0.0022 s/iter total_throughput: 85.46 samples/s lr: 8.00e-04  
[08/24 04:08:19] lb.utils.events INFO:  eta: 0:15:27  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.0936 s/iter  data_time: 0.0026 s/iter total_throughput: 85.46 samples/s lr: 8.00e-04  
[08/24 04:08:21] lb.utils.events INFO:  eta: 0:15:26  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.0936 s/iter  data_time: 0.0024 s/iter total_throughput: 85.43 samples/s lr: 8.00e-04  
[08/24 04:08:23] lb.utils.events INFO:  eta: 0:15:25  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.0937 s/iter  data_time: 0.0023 s/iter total_throughput: 85.42 samples/s lr: 8.00e-04  
[08/24 06:10:53] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:10:53] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:10:53] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:10:53] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:10:53] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:10:53] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.045 seconds
[08/24 06:10:53] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.046 seconds
[08/24 06:10:53] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:10:55] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:10:57] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:10:58] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:10:58] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:10:58] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:12:30] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:12:30] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:12:30] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:12:30] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:12:30] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:12:30] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.049 seconds
[08/24 06:12:30] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/24 06:12:30] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:12:32] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:12:34] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:12:35] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:12:36] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:12:36] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:14:28] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:14:28] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:14:28] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:14:28] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:14:28] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:14:28] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 06:14:28] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/24 06:14:28] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:14:30] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:14:32] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:14:32] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:14:33] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:14:33] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:14:41] lb.utils.events INFO:  eta: 0:06:51  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1063  time: 0.0421 s/iter  data_time: 0.0011 s/iter total_throughput: 95.01 samples/s lr: 8.00e-04  
[08/24 06:14:42] lb.utils.events INFO:  eta: 0:06:49  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09177  time: 0.0416 s/iter  data_time: 0.0009 s/iter total_throughput: 96.07 samples/s lr: 8.00e-04  
[08/24 06:14:43] lb.utils.events INFO:  eta: 0:06:48  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08392  time: 0.0415 s/iter  data_time: 0.0009 s/iter total_throughput: 96.37 samples/s lr: 8.00e-04  
[08/24 06:14:44] lb.utils.events INFO:  eta: 0:06:47  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07929  time: 0.0414 s/iter  data_time: 0.0009 s/iter total_throughput: 96.51 samples/s lr: 8.00e-04  
[08/24 06:14:45] lb.utils.events INFO:  eta: 0:06:47  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06897  time: 0.0415 s/iter  data_time: 0.0010 s/iter total_throughput: 96.44 samples/s lr: 8.00e-04  
[08/24 06:14:45] lb.utils.events INFO:  eta: 0:06:46  iteration: 119/10000  consumed_samples: 480  total_loss: 0.0507  time: 0.0414 s/iter  data_time: 0.0009 s/iter total_throughput: 96.60 samples/s lr: 8.00e-04  
[08/24 06:14:46] lb.utils.events INFO:  eta: 0:06:45  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03656  time: 0.0414 s/iter  data_time: 0.0009 s/iter total_throughput: 96.65 samples/s lr: 8.00e-04  
[08/24 06:14:47] lb.utils.events INFO:  eta: 0:06:44  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02525  time: 0.0414 s/iter  data_time: 0.0009 s/iter total_throughput: 96.70 samples/s lr: 8.00e-04  
[08/24 06:14:48] lb.utils.events INFO:  eta: 0:06:44  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01379  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.78 samples/s lr: 8.00e-04  
[08/24 06:14:49] lb.utils.events INFO:  eta: 0:06:43  iteration: 199/10000  consumed_samples: 800  total_loss: 0.007671  time: 0.0413 s/iter  data_time: 0.0010 s/iter total_throughput: 96.74 samples/s lr: 8.00e-04  
[08/24 06:14:50] lb.utils.events INFO:  eta: 0:06:42  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0007061  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.76 samples/s lr: 8.00e-04  
[08/24 06:14:50] lb.utils.events INFO:  eta: 0:06:41  iteration: 239/10000  consumed_samples: 960  total_loss: 2.282e-05  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.76 samples/s lr: 8.00e-04  
[08/24 06:14:51] lb.utils.events INFO:  eta: 0:06:41  iteration: 259/10000  consumed_samples: 1040  total_loss: 8.582e-06  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.76 samples/s lr: 8.00e-04  
[08/24 06:14:52] lb.utils.events INFO:  eta: 0:06:40  iteration: 279/10000  consumed_samples: 1120  total_loss: 6.268e-06  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.76 samples/s lr: 8.00e-04  
[08/24 06:14:53] lb.utils.events INFO:  eta: 0:06:39  iteration: 299/10000  consumed_samples: 1200  total_loss: 4.981e-06  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.80 samples/s lr: 8.00e-04  
[08/24 06:14:54] lb.utils.events INFO:  eta: 0:06:38  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.114e-06  time: 0.0413 s/iter  data_time: 0.0008 s/iter total_throughput: 96.84 samples/s lr: 8.00e-04  
[08/24 06:14:55] lb.utils.events INFO:  eta: 0:06:37  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.423e-06  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.85 samples/s lr: 8.00e-04  
[08/24 06:14:55] lb.utils.events INFO:  eta: 0:06:36  iteration: 359/10000  consumed_samples: 1440  total_loss: 2.876e-06  time: 0.0413 s/iter  data_time: 0.0009 s/iter total_throughput: 96.89 samples/s lr: 8.00e-04  
[08/24 06:14:56] lb.utils.events INFO:  eta: 0:06:35  iteration: 379/10000  consumed_samples: 1520  total_loss: 2.35e-06  time: 0.0412 s/iter  data_time: 0.0004 s/iter total_throughput: 97.03 samples/s lr: 8.00e-04  
[08/24 06:14:57] lb.utils.events INFO:  eta: 0:06:34  iteration: 399/10000  consumed_samples: 1600  total_loss: 1.855e-06  time: 0.0412 s/iter  data_time: 0.0005 s/iter total_throughput: 97.12 samples/s lr: 8.00e-04  
[08/24 06:14:58] lb.utils.events INFO:  eta: 0:06:33  iteration: 419/10000  consumed_samples: 1680  total_loss: 1.437e-06  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.10 samples/s lr: 8.00e-04  
[08/24 06:14:59] lb.utils.events INFO:  eta: 0:06:33  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.135e-06  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.11 samples/s lr: 8.00e-04  
[08/24 06:14:59] lb.utils.events INFO:  eta: 0:06:32  iteration: 459/10000  consumed_samples: 1840  total_loss: 9.275e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.11 samples/s lr: 8.00e-04  
[08/24 06:15:00] lb.utils.events INFO:  eta: 0:06:31  iteration: 479/10000  consumed_samples: 1920  total_loss: 7.877e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.11 samples/s lr: 8.00e-04  
[08/24 06:15:01] lb.utils.events INFO:  eta: 0:06:30  iteration: 499/10000  consumed_samples: 2000  total_loss: 6.843e-07  time: 0.0412 s/iter  data_time: 0.0008 s/iter total_throughput: 97.13 samples/s lr: 8.00e-04  
[08/24 06:15:02] lb.utils.events INFO:  eta: 0:06:29  iteration: 519/10000  consumed_samples: 2080  total_loss: 5.856e-07  time: 0.0412 s/iter  data_time: 0.0006 s/iter total_throughput: 97.16 samples/s lr: 8.00e-04  
[08/24 06:15:03] lb.utils.events INFO:  eta: 0:06:28  iteration: 539/10000  consumed_samples: 2160  total_loss: 5.16e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.14 samples/s lr: 8.00e-04  
[08/24 06:15:04] lb.utils.events INFO:  eta: 0:06:28  iteration: 559/10000  consumed_samples: 2240  total_loss: 4.536e-07  time: 0.0412 s/iter  data_time: 0.0011 s/iter total_throughput: 97.10 samples/s lr: 8.00e-04  
[08/24 06:15:04] lb.utils.events INFO:  eta: 0:06:27  iteration: 579/10000  consumed_samples: 2320  total_loss: 4.103e-07  time: 0.0412 s/iter  data_time: 0.0008 s/iter total_throughput: 97.08 samples/s lr: 8.00e-04  
[08/24 06:15:05] lb.utils.events INFO:  eta: 0:06:26  iteration: 599/10000  consumed_samples: 2400  total_loss: 3.719e-07  time: 0.0412 s/iter  data_time: 0.0003 s/iter total_throughput: 97.16 samples/s lr: 8.00e-04  
[08/24 06:15:06] lb.utils.events INFO:  eta: 0:06:25  iteration: 619/10000  consumed_samples: 2480  total_loss: 3.383e-07  time: 0.0412 s/iter  data_time: 0.0005 s/iter total_throughput: 97.19 samples/s lr: 8.00e-04  
[08/24 06:15:07] lb.utils.events INFO:  eta: 0:06:24  iteration: 639/10000  consumed_samples: 2560  total_loss: 3.123e-07  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.27 samples/s lr: 8.00e-04  
[08/24 06:15:08] lb.utils.events INFO:  eta: 0:06:23  iteration: 659/10000  consumed_samples: 2640  total_loss: 2.844e-07  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.34 samples/s lr: 8.00e-04  
[08/24 06:15:08] lb.utils.events INFO:  eta: 0:06:22  iteration: 679/10000  consumed_samples: 2720  total_loss: 2.638e-07  time: 0.0411 s/iter  data_time: 0.0006 s/iter total_throughput: 97.37 samples/s lr: 8.00e-04  
[08/24 06:15:09] lb.utils.events INFO:  eta: 0:06:22  iteration: 699/10000  consumed_samples: 2800  total_loss: 2.478e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.36 samples/s lr: 8.00e-04  
[08/24 06:15:10] lb.utils.events INFO:  eta: 0:06:21  iteration: 719/10000  consumed_samples: 2880  total_loss: 2.273e-07  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.36 samples/s lr: 8.00e-04  
[08/24 06:15:11] lb.utils.events INFO:  eta: 0:06:20  iteration: 739/10000  consumed_samples: 2960  total_loss: 2.145e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.33 samples/s lr: 8.00e-04  
[08/24 06:15:12] lb.utils.events INFO:  eta: 0:06:19  iteration: 759/10000  consumed_samples: 3040  total_loss: 2.024e-07  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.31 samples/s lr: 8.00e-04  
[08/24 06:15:13] lb.utils.events INFO:  eta: 0:06:19  iteration: 779/10000  consumed_samples: 3120  total_loss: 1.929e-07  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.31 samples/s lr: 8.00e-04  
[08/24 06:15:13] lb.utils.events INFO:  eta: 0:06:18  iteration: 799/10000  consumed_samples: 3200  total_loss: 1.809e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.29 samples/s lr: 8.00e-04  
[08/24 06:15:14] lb.utils.events INFO:  eta: 0:06:17  iteration: 819/10000  consumed_samples: 3280  total_loss: 1.722e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.27 samples/s lr: 8.00e-04  
[08/24 06:15:15] lb.utils.events INFO:  eta: 0:06:16  iteration: 839/10000  consumed_samples: 3360  total_loss: 1.637e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.26 samples/s lr: 8.00e-04  
[08/24 06:15:16] lb.utils.events INFO:  eta: 0:06:16  iteration: 859/10000  consumed_samples: 3440  total_loss: 1.573e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.24 samples/s lr: 8.00e-04  
[08/24 06:15:17] lb.utils.events INFO:  eta: 0:06:15  iteration: 879/10000  consumed_samples: 3520  total_loss: 1.486e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.22 samples/s lr: 8.00e-04  
[08/24 06:15:18] lb.utils.events INFO:  eta: 0:06:14  iteration: 899/10000  consumed_samples: 3600  total_loss: 1.432e-07  time: 0.0411 s/iter  data_time: 0.0010 s/iter total_throughput: 97.22 samples/s lr: 8.00e-04  
[08/24 06:15:18] lb.utils.events INFO:  eta: 0:06:13  iteration: 919/10000  consumed_samples: 3680  total_loss: 1.364e-07  time: 0.0411 s/iter  data_time: 0.0007 s/iter total_throughput: 97.23 samples/s lr: 8.00e-04  
[08/24 06:15:19] lb.utils.events INFO:  eta: 0:06:12  iteration: 939/10000  consumed_samples: 3760  total_loss: 1.306e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.22 samples/s lr: 8.00e-04  
[08/24 06:15:20] lb.utils.events INFO:  eta: 0:06:11  iteration: 959/10000  consumed_samples: 3840  total_loss: 1.26e-07  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.21 samples/s lr: 8.00e-04  
[08/24 06:15:21] lb.utils.events INFO:  eta: 0:06:11  iteration: 979/10000  consumed_samples: 3920  total_loss: 1.21e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.20 samples/s lr: 8.00e-04  
[08/24 06:15:22] lb.utils.events INFO:  eta: 0:06:10  iteration: 999/10000  consumed_samples: 4000  total_loss: 1.179e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.19 samples/s lr: 8.00e-04  
[08/24 06:15:23] lb.utils.events INFO:  eta: 0:06:09  iteration: 1019/10000  consumed_samples: 4080  total_loss: 1.138e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.17 samples/s lr: 8.00e-04  
[08/24 06:15:23] lb.utils.events INFO:  eta: 0:06:08  iteration: 1039/10000  consumed_samples: 4160  total_loss: 1.103e-07  time: 0.0412 s/iter  data_time: 0.0008 s/iter total_throughput: 97.17 samples/s lr: 8.00e-04  
[08/24 06:15:24] lb.utils.events INFO:  eta: 0:06:07  iteration: 1059/10000  consumed_samples: 4240  total_loss: 1.053e-07  time: 0.0412 s/iter  data_time: 0.0009 s/iter total_throughput: 97.17 samples/s lr: 8.00e-04  
[08/24 06:15:25] lb.utils.events INFO:  eta: 0:06:07  iteration: 1079/10000  consumed_samples: 4320  total_loss: 1.026e-07  time: 0.0412 s/iter  data_time: 0.0006 s/iter total_throughput: 97.19 samples/s lr: 8.00e-04  
[08/24 06:15:26] lb.utils.events INFO:  eta: 0:06:06  iteration: 1099/10000  consumed_samples: 4400  total_loss: 9.934e-08  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.24 samples/s lr: 8.00e-04  
[08/24 06:15:27] lb.utils.events INFO:  eta: 0:06:05  iteration: 1119/10000  consumed_samples: 4480  total_loss: 9.674e-08  time: 0.0411 s/iter  data_time: 0.0006 s/iter total_throughput: 97.25 samples/s lr: 8.00e-04  
[08/24 06:15:28] lb.utils.events INFO:  eta: 0:06:04  iteration: 1139/10000  consumed_samples: 4560  total_loss: 9.367e-08  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.24 samples/s lr: 8.00e-04  
[08/24 06:15:28] lb.utils.events INFO:  eta: 0:06:03  iteration: 1159/10000  consumed_samples: 4640  total_loss: 9.115e-08  time: 0.0411 s/iter  data_time: 0.0006 s/iter total_throughput: 97.26 samples/s lr: 8.00e-04  
[08/24 06:15:29] lb.utils.events INFO:  eta: 0:06:02  iteration: 1179/10000  consumed_samples: 4720  total_loss: 8.835e-08  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.31 samples/s lr: 8.00e-04  
[08/24 06:15:30] lb.utils.events INFO:  eta: 0:06:01  iteration: 1199/10000  consumed_samples: 4800  total_loss: 8.499e-08  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.35 samples/s lr: 8.00e-04  
[08/24 06:15:31] lb.utils.events INFO:  eta: 0:06:01  iteration: 1219/10000  consumed_samples: 4880  total_loss: 8.288e-08  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.38 samples/s lr: 8.00e-04  
[08/24 06:15:32] lb.utils.events INFO:  eta: 0:06:00  iteration: 1239/10000  consumed_samples: 4960  total_loss: 8.108e-08  time: 0.0411 s/iter  data_time: 0.0006 s/iter total_throughput: 97.40 samples/s lr: 8.00e-04  
[08/24 06:15:32] lb.utils.events INFO:  eta: 0:05:59  iteration: 1259/10000  consumed_samples: 5040  total_loss: 7.854e-08  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.38 samples/s lr: 8.00e-04  
[08/24 06:15:33] lb.utils.events INFO:  eta: 0:05:58  iteration: 1279/10000  consumed_samples: 5120  total_loss: 7.547e-08  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.37 samples/s lr: 8.00e-04  
[08/24 06:15:34] lb.utils.events INFO:  eta: 0:05:57  iteration: 1299/10000  consumed_samples: 5200  total_loss: 7.451e-08  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.35 samples/s lr: 8.00e-04  
[08/24 06:15:35] lb.utils.events INFO:  eta: 0:05:57  iteration: 1319/10000  consumed_samples: 5280  total_loss: 7.279e-08  time: 0.0411 s/iter  data_time: 0.0004 s/iter total_throughput: 97.37 samples/s lr: 8.00e-04  
[08/24 06:15:36] lb.utils.events INFO:  eta: 0:05:56  iteration: 1339/10000  consumed_samples: 5360  total_loss: 7.074e-08  time: 0.0411 s/iter  data_time: 0.0006 s/iter total_throughput: 97.37 samples/s lr: 8.00e-04  
[08/24 06:15:37] lb.utils.events INFO:  eta: 0:05:55  iteration: 1359/10000  consumed_samples: 5440  total_loss: 6.965e-08  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.36 samples/s lr: 8.00e-04  
[08/24 06:15:37] lb.utils.events INFO:  eta: 0:05:54  iteration: 1379/10000  consumed_samples: 5520  total_loss: 6.831e-08  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.34 samples/s lr: 8.00e-04  
[08/24 06:15:38] lb.utils.events INFO:  eta: 0:05:54  iteration: 1399/10000  consumed_samples: 5600  total_loss: 6.568e-08  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.33 samples/s lr: 8.00e-04  
[08/24 06:15:39] lb.utils.events INFO:  eta: 0:05:53  iteration: 1419/10000  consumed_samples: 5680  total_loss: 6.44e-08  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.32 samples/s lr: 8.00e-04  
[08/24 06:36:37] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:36:37] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:36:37] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:36:37] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:36:37] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:36:37] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.042 seconds
[08/24 06:36:37] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.043 seconds
[08/24 06:36:37] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:36:39] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:36:41] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:36:41] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:36:42] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:36:42] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:36:51] lb.utils.events INFO:  eta: 0:07:18  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1062  time: 0.0439 s/iter  data_time: 0.0012 s/iter total_throughput: 91.02 samples/s lr: 8.00e-04  
[08/24 06:36:52] lb.utils.events INFO:  eta: 0:07:06  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09183  time: 0.0432 s/iter  data_time: 0.0009 s/iter total_throughput: 92.53 samples/s lr: 8.00e-04  
[08/24 06:36:52] lb.utils.events INFO:  eta: 0:07:05  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08474  time: 0.0432 s/iter  data_time: 0.0009 s/iter total_throughput: 92.63 samples/s lr: 8.00e-04  
[08/24 06:36:53] lb.utils.events INFO:  eta: 0:07:04  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07971  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.74 samples/s lr: 8.00e-04  
[08/24 06:36:54] lb.utils.events INFO:  eta: 0:07:04  iteration: 99/10000  consumed_samples: 400  total_loss: 0.07078  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.77 samples/s lr: 8.00e-04  
[08/24 06:36:55] lb.utils.events INFO:  eta: 0:07:03  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05591  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.83 samples/s lr: 8.00e-04  
[08/24 06:36:56] lb.utils.events INFO:  eta: 0:07:02  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03988  time: 0.0430 s/iter  data_time: 0.0008 s/iter total_throughput: 92.92 samples/s lr: 8.00e-04  
[08/24 06:36:57] lb.utils.events INFO:  eta: 0:07:01  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02961  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.96 samples/s lr: 8.00e-04  
[08/24 06:36:58] lb.utils.events INFO:  eta: 0:07:01  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01688  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.95 samples/s lr: 8.00e-04  
[08/24 06:36:58] lb.utils.events INFO:  eta: 0:07:00  iteration: 199/10000  consumed_samples: 800  total_loss: 0.009766  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.93 samples/s lr: 8.00e-04  
[08/24 06:36:59] lb.utils.events INFO:  eta: 0:06:59  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001851  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.97 samples/s lr: 8.00e-04  
[08/24 06:37:00] lb.utils.events INFO:  eta: 0:06:59  iteration: 239/10000  consumed_samples: 960  total_loss: 7.574e-05  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.95 samples/s lr: 8.00e-04  
[08/24 06:37:01] lb.utils.events INFO:  eta: 0:06:58  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.892e-05  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.93 samples/s lr: 8.00e-04  
[08/24 06:37:02] lb.utils.events INFO:  eta: 0:06:57  iteration: 279/10000  consumed_samples: 1120  total_loss: 1.245e-05  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.87 samples/s lr: 8.00e-04  
[08/24 06:37:03] lb.utils.events INFO:  eta: 0:06:56  iteration: 299/10000  consumed_samples: 1200  total_loss: 9.288e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.88 samples/s lr: 8.00e-04  
[08/24 06:37:04] lb.utils.events INFO:  eta: 0:06:55  iteration: 319/10000  consumed_samples: 1280  total_loss: 7.348e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.88 samples/s lr: 8.00e-04  
[08/24 06:37:05] lb.utils.events INFO:  eta: 0:06:54  iteration: 339/10000  consumed_samples: 1360  total_loss: 6.042e-06  time: 0.0431 s/iter  data_time: 0.0008 s/iter total_throughput: 92.90 samples/s lr: 8.00e-04  
[08/24 06:37:05] lb.utils.events INFO:  eta: 0:06:53  iteration: 359/10000  consumed_samples: 1440  total_loss: 5.141e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.91 samples/s lr: 8.00e-04  
[08/24 06:37:06] lb.utils.events INFO:  eta: 0:06:53  iteration: 379/10000  consumed_samples: 1520  total_loss: 4.411e-06  time: 0.0431 s/iter  data_time: 0.0010 s/iter total_throughput: 92.87 samples/s lr: 8.00e-04  
[08/24 06:37:07] lb.utils.events INFO:  eta: 0:06:52  iteration: 399/10000  consumed_samples: 1600  total_loss: 3.764e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.86 samples/s lr: 8.00e-04  
[08/24 06:37:08] lb.utils.events INFO:  eta: 0:06:51  iteration: 419/10000  consumed_samples: 1680  total_loss: 3.229e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.86 samples/s lr: 8.00e-04  
[08/24 06:37:09] lb.utils.events INFO:  eta: 0:06:50  iteration: 439/10000  consumed_samples: 1760  total_loss: 2.671e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.86 samples/s lr: 8.00e-04  
[08/24 06:37:10] lb.utils.events INFO:  eta: 0:06:50  iteration: 459/10000  consumed_samples: 1840  total_loss: 2.014e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.86 samples/s lr: 8.00e-04  
[08/24 06:37:11] lb.utils.events INFO:  eta: 0:06:49  iteration: 479/10000  consumed_samples: 1920  total_loss: 1.447e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.86 samples/s lr: 8.00e-04  
[08/24 06:37:11] lb.utils.events INFO:  eta: 0:06:48  iteration: 499/10000  consumed_samples: 2000  total_loss: 1.08e-06  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.84 samples/s lr: 8.00e-04  
[08/24 06:37:12] lb.utils.events INFO:  eta: 0:06:47  iteration: 519/10000  consumed_samples: 2080  total_loss: 8.523e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.83 samples/s lr: 8.00e-04  
[08/24 06:37:13] lb.utils.events INFO:  eta: 0:06:46  iteration: 539/10000  consumed_samples: 2160  total_loss: 6.898e-07  time: 0.0431 s/iter  data_time: 0.0010 s/iter total_throughput: 92.83 samples/s lr: 8.00e-04  
[08/24 06:37:14] lb.utils.events INFO:  eta: 0:06:45  iteration: 559/10000  consumed_samples: 2240  total_loss: 5.768e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.84 samples/s lr: 8.00e-04  
[08/24 06:37:15] lb.utils.events INFO:  eta: 0:06:44  iteration: 579/10000  consumed_samples: 2320  total_loss: 4.948e-07  time: 0.0431 s/iter  data_time: 0.0008 s/iter total_throughput: 92.87 samples/s lr: 8.00e-04  
[08/24 06:37:16] lb.utils.events INFO:  eta: 0:06:44  iteration: 599/10000  consumed_samples: 2400  total_loss: 4.283e-07  time: 0.0431 s/iter  data_time: 0.0008 s/iter total_throughput: 92.87 samples/s lr: 8.00e-04  
[08/24 06:37:17] lb.utils.events INFO:  eta: 0:06:43  iteration: 619/10000  consumed_samples: 2480  total_loss: 3.765e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.86 samples/s lr: 8.00e-04  
[08/24 06:37:18] lb.utils.events INFO:  eta: 0:06:42  iteration: 639/10000  consumed_samples: 2560  total_loss: 3.425e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.87 samples/s lr: 8.00e-04  
[08/24 06:37:18] lb.utils.events INFO:  eta: 0:06:41  iteration: 659/10000  consumed_samples: 2640  total_loss: 3.03e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.89 samples/s lr: 8.00e-04  
[08/24 06:37:19] lb.utils.events INFO:  eta: 0:06:40  iteration: 679/10000  consumed_samples: 2720  total_loss: 2.774e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.90 samples/s lr: 8.00e-04  
[08/24 06:37:20] lb.utils.events INFO:  eta: 0:06:39  iteration: 699/10000  consumed_samples: 2800  total_loss: 2.536e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.89 samples/s lr: 8.00e-04  
[08/24 06:37:21] lb.utils.events INFO:  eta: 0:06:38  iteration: 719/10000  consumed_samples: 2880  total_loss: 2.322e-07  time: 0.0431 s/iter  data_time: 0.0008 s/iter total_throughput: 92.90 samples/s lr: 8.00e-04  
[08/24 06:37:22] lb.utils.events INFO:  eta: 0:06:37  iteration: 739/10000  consumed_samples: 2960  total_loss: 2.174e-07  time: 0.0431 s/iter  data_time: 0.0009 s/iter total_throughput: 92.90 samples/s lr: 8.00e-04  
[08/24 06:37:23] lb.utils.events INFO:  eta: 0:06:36  iteration: 759/10000  consumed_samples: 3040  total_loss: 2.019e-07  time: 0.0430 s/iter  data_time: 0.0006 s/iter total_throughput: 92.94 samples/s lr: 8.00e-04  
[08/24 06:37:24] lb.utils.events INFO:  eta: 0:06:36  iteration: 779/10000  consumed_samples: 3120  total_loss: 1.918e-07  time: 0.0430 s/iter  data_time: 0.0008 s/iter total_throughput: 92.96 samples/s lr: 8.00e-04  
[08/24 06:37:24] lb.utils.events INFO:  eta: 0:06:35  iteration: 799/10000  consumed_samples: 3200  total_loss: 1.797e-07  time: 0.0430 s/iter  data_time: 0.0009 s/iter total_throughput: 92.96 samples/s lr: 8.00e-04  
[08/24 06:39:57] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:39:57] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:39:57] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:39:57] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:39:57] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:39:57] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.042 seconds
[08/24 06:39:57] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.043 seconds
[08/24 06:39:57] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:39:59] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:40:01] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:40:01] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:40:01] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:40:01] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:40:10] lb.utils.events INFO:  eta: 0:07:27  iteration: 19/10000  consumed_samples: 80  total_loss: 0.106  time: 0.0455 s/iter  data_time: 0.0012 s/iter total_throughput: 87.94 samples/s lr: 8.00e-04  
[08/24 06:40:11] lb.utils.events INFO:  eta: 0:07:26  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09195  time: 0.0452 s/iter  data_time: 0.0008 s/iter total_throughput: 88.43 samples/s lr: 8.00e-04  
[08/24 06:40:12] lb.utils.events INFO:  eta: 0:07:26  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08393  time: 0.0452 s/iter  data_time: 0.0009 s/iter total_throughput: 88.43 samples/s lr: 8.00e-04  
[08/24 06:40:13] lb.utils.events INFO:  eta: 0:07:25  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07932  time: 0.0452 s/iter  data_time: 0.0009 s/iter total_throughput: 88.57 samples/s lr: 8.00e-04  
[08/24 06:40:14] lb.utils.events INFO:  eta: 0:07:24  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06992  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.68 samples/s lr: 8.00e-04  
[08/24 06:40:15] lb.utils.events INFO:  eta: 0:07:23  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05181  time: 0.0450 s/iter  data_time: 0.0005 s/iter total_throughput: 88.97 samples/s lr: 8.00e-04  
[08/24 06:40:16] lb.utils.events INFO:  eta: 0:07:22  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03653  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.89 samples/s lr: 8.00e-04  
[08/24 06:40:17] lb.utils.events INFO:  eta: 0:07:22  iteration: 159/10000  consumed_samples: 640  total_loss: 0.0255  time: 0.0450 s/iter  data_time: 0.0010 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:40:18] lb.utils.events INFO:  eta: 0:07:21  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01521  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.83 samples/s lr: 8.00e-04  
[08/24 06:40:19] lb.utils.events INFO:  eta: 0:07:20  iteration: 199/10000  consumed_samples: 800  total_loss: 0.01008  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:40:20] lb.utils.events INFO:  eta: 0:07:19  iteration: 219/10000  consumed_samples: 880  total_loss: 0.003141  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.88 samples/s lr: 8.00e-04  
[08/24 06:40:20] lb.utils.events INFO:  eta: 0:07:18  iteration: 239/10000  consumed_samples: 960  total_loss: 8.042e-05  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.88 samples/s lr: 8.00e-04  
[08/24 06:40:21] lb.utils.events INFO:  eta: 0:07:17  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.603e-05  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.85 samples/s lr: 8.00e-04  
[08/24 06:40:22] lb.utils.events INFO:  eta: 0:07:16  iteration: 279/10000  consumed_samples: 1120  total_loss: 9.432e-06  time: 0.0450 s/iter  data_time: 0.0007 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:40:23] lb.utils.events INFO:  eta: 0:07:15  iteration: 299/10000  consumed_samples: 1200  total_loss: 7.272e-06  time: 0.0450 s/iter  data_time: 0.0004 s/iter total_throughput: 88.96 samples/s lr: 8.00e-04  
[08/24 06:40:24] lb.utils.events INFO:  eta: 0:07:14  iteration: 319/10000  consumed_samples: 1280  total_loss: 6.081e-06  time: 0.0450 s/iter  data_time: 0.0003 s/iter total_throughput: 88.88 samples/s lr: 8.00e-04  
[08/24 06:40:25] lb.utils.events INFO:  eta: 0:07:14  iteration: 339/10000  consumed_samples: 1360  total_loss: 5.216e-06  time: 0.0450 s/iter  data_time: 0.0003 s/iter total_throughput: 88.82 samples/s lr: 8.00e-04  
[08/24 06:40:26] lb.utils.events INFO:  eta: 0:07:13  iteration: 359/10000  consumed_samples: 1440  total_loss: 4.514e-06  time: 0.0451 s/iter  data_time: 0.0004 s/iter total_throughput: 88.75 samples/s lr: 8.00e-04  
[08/24 06:40:27] lb.utils.events INFO:  eta: 0:07:12  iteration: 379/10000  consumed_samples: 1520  total_loss: 3.927e-06  time: 0.0453 s/iter  data_time: 0.0009 s/iter total_throughput: 88.39 samples/s lr: 8.00e-04  
[08/24 06:40:28] lb.utils.events INFO:  eta: 0:07:12  iteration: 399/10000  consumed_samples: 1600  total_loss: 3.461e-06  time: 0.0453 s/iter  data_time: 0.0009 s/iter total_throughput: 88.26 samples/s lr: 8.00e-04  
[08/24 06:40:29] lb.utils.events INFO:  eta: 0:07:12  iteration: 419/10000  consumed_samples: 1680  total_loss: 3.082e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.15 samples/s lr: 8.00e-04  
[08/24 06:40:30] lb.utils.events INFO:  eta: 0:07:11  iteration: 439/10000  consumed_samples: 1760  total_loss: 2.707e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.06 samples/s lr: 8.00e-04  
[08/24 06:40:31] lb.utils.events INFO:  eta: 0:07:10  iteration: 459/10000  consumed_samples: 1840  total_loss: 2.386e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.06 samples/s lr: 8.00e-04  
[08/24 06:40:31] lb.utils.events INFO:  eta: 0:07:09  iteration: 479/10000  consumed_samples: 1920  total_loss: 2.123e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.07 samples/s lr: 8.00e-04  
[08/24 06:40:32] lb.utils.events INFO:  eta: 0:07:08  iteration: 499/10000  consumed_samples: 2000  total_loss: 1.852e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.11 samples/s lr: 8.00e-04  
[08/24 06:40:33] lb.utils.events INFO:  eta: 0:07:07  iteration: 519/10000  consumed_samples: 2080  total_loss: 1.634e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.14 samples/s lr: 8.00e-04  
[08/24 06:40:34] lb.utils.events INFO:  eta: 0:07:06  iteration: 539/10000  consumed_samples: 2160  total_loss: 1.414e-06  time: 0.0454 s/iter  data_time: 0.0011 s/iter total_throughput: 88.12 samples/s lr: 8.00e-04  
[08/24 06:40:35] lb.utils.events INFO:  eta: 0:07:05  iteration: 559/10000  consumed_samples: 2240  total_loss: 1.227e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.15 samples/s lr: 8.00e-04  
[08/24 06:40:36] lb.utils.events INFO:  eta: 0:07:04  iteration: 579/10000  consumed_samples: 2320  total_loss: 1.065e-06  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.18 samples/s lr: 8.00e-04  
[08/24 06:40:37] lb.utils.events INFO:  eta: 0:07:03  iteration: 599/10000  consumed_samples: 2400  total_loss: 9.239e-07  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.20 samples/s lr: 8.00e-04  
[08/24 06:40:38] lb.utils.events INFO:  eta: 0:07:02  iteration: 619/10000  consumed_samples: 2480  total_loss: 8.317e-07  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.20 samples/s lr: 8.00e-04  
[08/24 06:41:36] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:41:36] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:41:36] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:41:36] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:41:36] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:41:36] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.043 seconds
[08/24 06:41:36] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.044 seconds
[08/24 06:41:36] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:41:38] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:41:39] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:41:40] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:41:40] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:41:40] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:41:49] lb.utils.events INFO:  eta: 0:07:29  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1062  time: 0.0451 s/iter  data_time: 0.0010 s/iter total_throughput: 88.71 samples/s lr: 8.00e-04  
[08/24 06:41:50] lb.utils.events INFO:  eta: 0:07:27  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09184  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.87 samples/s lr: 8.00e-04  
[08/24 06:41:51] lb.utils.events INFO:  eta: 0:07:25  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08479  time: 0.0448 s/iter  data_time: 0.0005 s/iter total_throughput: 89.33 samples/s lr: 8.00e-04  
[08/24 06:41:52] lb.utils.events INFO:  eta: 0:07:23  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07974  time: 0.0446 s/iter  data_time: 0.0004 s/iter total_throughput: 89.74 samples/s lr: 8.00e-04  
[08/24 06:41:53] lb.utils.events INFO:  eta: 0:07:22  iteration: 99/10000  consumed_samples: 400  total_loss: 0.07211  time: 0.0446 s/iter  data_time: 0.0008 s/iter total_throughput: 89.65 samples/s lr: 8.00e-04  
[08/24 06:41:54] lb.utils.events INFO:  eta: 0:07:22  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05686  time: 0.0447 s/iter  data_time: 0.0009 s/iter total_throughput: 89.45 samples/s lr: 8.00e-04  
[08/24 06:41:55] lb.utils.events INFO:  eta: 0:07:22  iteration: 139/10000  consumed_samples: 560  total_loss: 0.04125  time: 0.0448 s/iter  data_time: 0.0009 s/iter total_throughput: 89.36 samples/s lr: 8.00e-04  
[08/24 06:41:56] lb.utils.events INFO:  eta: 0:07:22  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02976  time: 0.0448 s/iter  data_time: 0.0009 s/iter total_throughput: 89.24 samples/s lr: 8.00e-04  
[08/24 06:41:57] lb.utils.events INFO:  eta: 0:07:21  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01741  time: 0.0449 s/iter  data_time: 0.0009 s/iter total_throughput: 89.13 samples/s lr: 8.00e-04  
[08/24 06:41:57] lb.utils.events INFO:  eta: 0:07:21  iteration: 199/10000  consumed_samples: 800  total_loss: 0.009411  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.96 samples/s lr: 8.00e-04  
[08/24 06:41:58] lb.utils.events INFO:  eta: 0:07:20  iteration: 219/10000  consumed_samples: 880  total_loss: 0.003164  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.88 samples/s lr: 8.00e-04  
[08/24 06:41:59] lb.utils.events INFO:  eta: 0:07:19  iteration: 239/10000  consumed_samples: 960  total_loss: 0.0002604  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:42:00] lb.utils.events INFO:  eta: 0:07:18  iteration: 259/10000  consumed_samples: 1040  total_loss: 4.863e-05  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.85 samples/s lr: 8.00e-04  
[08/24 06:42:01] lb.utils.events INFO:  eta: 0:07:17  iteration: 279/10000  consumed_samples: 1120  total_loss: 2.265e-05  time: 0.0451 s/iter  data_time: 0.0010 s/iter total_throughput: 88.75 samples/s lr: 8.00e-04  
[08/24 06:42:02] lb.utils.events INFO:  eta: 0:07:17  iteration: 299/10000  consumed_samples: 1200  total_loss: 1.5e-05  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.71 samples/s lr: 8.00e-04  
[08/24 06:42:03] lb.utils.events INFO:  eta: 0:07:16  iteration: 319/10000  consumed_samples: 1280  total_loss: 9.023e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.64 samples/s lr: 8.00e-04  
[08/24 06:42:04] lb.utils.events INFO:  eta: 0:07:15  iteration: 339/10000  consumed_samples: 1360  total_loss: 5.813e-06  time: 0.0452 s/iter  data_time: 0.0009 s/iter total_throughput: 88.59 samples/s lr: 8.00e-04  
[08/24 06:42:05] lb.utils.events INFO:  eta: 0:07:14  iteration: 359/10000  consumed_samples: 1440  total_loss: 4.261e-06  time: 0.0451 s/iter  data_time: 0.0007 s/iter total_throughput: 88.62 samples/s lr: 8.00e-04  
[08/24 06:42:06] lb.utils.events INFO:  eta: 0:07:13  iteration: 379/10000  consumed_samples: 1520  total_loss: 3.273e-06  time: 0.0451 s/iter  data_time: 0.0006 s/iter total_throughput: 88.66 samples/s lr: 8.00e-04  
[08/24 06:42:07] lb.utils.events INFO:  eta: 0:07:12  iteration: 399/10000  consumed_samples: 1600  total_loss: 2.582e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.66 samples/s lr: 8.00e-04  
[08/24 06:42:07] lb.utils.events INFO:  eta: 0:07:11  iteration: 419/10000  consumed_samples: 1680  total_loss: 2.111e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.65 samples/s lr: 8.00e-04  
[08/24 06:42:08] lb.utils.events INFO:  eta: 0:07:11  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.771e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.62 samples/s lr: 8.00e-04  
[08/24 06:42:09] lb.utils.events INFO:  eta: 0:07:10  iteration: 459/10000  consumed_samples: 1840  total_loss: 1.522e-06  time: 0.0452 s/iter  data_time: 0.0009 s/iter total_throughput: 88.58 samples/s lr: 8.00e-04  
[08/24 06:42:10] lb.utils.events INFO:  eta: 0:07:09  iteration: 479/10000  consumed_samples: 1920  total_loss: 1.325e-06  time: 0.0451 s/iter  data_time: 0.0007 s/iter total_throughput: 88.62 samples/s lr: 8.00e-04  
[08/24 06:42:11] lb.utils.events INFO:  eta: 0:07:08  iteration: 499/10000  consumed_samples: 2000  total_loss: 1.136e-06  time: 0.0451 s/iter  data_time: 0.0008 s/iter total_throughput: 88.65 samples/s lr: 8.00e-04  
[08/24 06:42:12] lb.utils.events INFO:  eta: 0:07:07  iteration: 519/10000  consumed_samples: 2080  total_loss: 1.015e-06  time: 0.0451 s/iter  data_time: 0.0008 s/iter total_throughput: 88.66 samples/s lr: 8.00e-04  
[08/24 06:42:13] lb.utils.events INFO:  eta: 0:07:06  iteration: 539/10000  consumed_samples: 2160  total_loss: 8.964e-07  time: 0.0451 s/iter  data_time: 0.0008 s/iter total_throughput: 88.68 samples/s lr: 8.00e-04  
[08/24 06:42:14] lb.utils.events INFO:  eta: 0:07:05  iteration: 559/10000  consumed_samples: 2240  total_loss: 7.986e-07  time: 0.0451 s/iter  data_time: 0.0007 s/iter total_throughput: 88.72 samples/s lr: 8.00e-04  
[08/24 06:42:15] lb.utils.events INFO:  eta: 0:07:04  iteration: 579/10000  consumed_samples: 2320  total_loss: 7.208e-07  time: 0.0450 s/iter  data_time: 0.0003 s/iter total_throughput: 88.81 samples/s lr: 8.00e-04  
[08/24 06:42:16] lb.utils.events INFO:  eta: 0:07:03  iteration: 599/10000  consumed_samples: 2400  total_loss: 6.49e-07  time: 0.0450 s/iter  data_time: 0.0005 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:42:16] lb.utils.events INFO:  eta: 0:07:02  iteration: 619/10000  consumed_samples: 2480  total_loss: 5.874e-07  time: 0.0450 s/iter  data_time: 0.0008 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:42:17] lb.utils.events INFO:  eta: 0:07:01  iteration: 639/10000  consumed_samples: 2560  total_loss: 5.352e-07  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:42:18] lb.utils.events INFO:  eta: 0:07:00  iteration: 659/10000  consumed_samples: 2640  total_loss: 4.908e-07  time: 0.0450 s/iter  data_time: 0.0008 s/iter total_throughput: 88.85 samples/s lr: 8.00e-04  
[08/24 06:42:19] lb.utils.events INFO:  eta: 0:06:59  iteration: 679/10000  consumed_samples: 2720  total_loss: 4.573e-07  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.85 samples/s lr: 8.00e-04  
[08/24 06:42:20] lb.utils.events INFO:  eta: 0:06:58  iteration: 699/10000  consumed_samples: 2800  total_loss: 4.281e-07  time: 0.0450 s/iter  data_time: 0.0010 s/iter total_throughput: 88.83 samples/s lr: 8.00e-04  
[08/24 06:42:21] lb.utils.events INFO:  eta: 0:06:58  iteration: 719/10000  consumed_samples: 2880  total_loss: 4.022e-07  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.81 samples/s lr: 8.00e-04  
[08/24 06:42:22] lb.utils.events INFO:  eta: 0:06:57  iteration: 739/10000  consumed_samples: 2960  total_loss: 3.769e-07  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.80 samples/s lr: 8.00e-04  
[08/24 06:42:23] lb.utils.events INFO:  eta: 0:06:56  iteration: 759/10000  consumed_samples: 3040  total_loss: 3.503e-07  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.80 samples/s lr: 8.00e-04  
[08/24 06:42:24] lb.utils.events INFO:  eta: 0:06:55  iteration: 779/10000  consumed_samples: 3120  total_loss: 3.323e-07  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.79 samples/s lr: 8.00e-04  
[08/24 06:42:25] lb.utils.events INFO:  eta: 0:06:54  iteration: 799/10000  consumed_samples: 3200  total_loss: 3.133e-07  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.79 samples/s lr: 8.00e-04  
[08/24 06:46:44] libai INFO: Rank of current process: 0. World size: 1
[08/24 06:46:44] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 06:46:44] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 06:46:44] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 06:46:44] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 06:46:44] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.044 seconds
[08/24 06:46:44] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.044 seconds
[08/24 06:46:44] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 06:46:46] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 06:46:48] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 06:46:49] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 06:46:49] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 06:46:49] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 06:46:58] lb.utils.events INFO:  eta: 0:07:32  iteration: 19/10000  consumed_samples: 80  total_loss: 0.106  time: 0.0457 s/iter  data_time: 0.0010 s/iter total_throughput: 87.59 samples/s lr: 8.00e-04  
[08/24 06:46:59] lb.utils.events INFO:  eta: 0:07:31  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09186  time: 0.0455 s/iter  data_time: 0.0009 s/iter total_throughput: 87.90 samples/s lr: 8.00e-04  
[08/24 06:47:00] lb.utils.events INFO:  eta: 0:07:30  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08401  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.05 samples/s lr: 8.00e-04  
[08/24 06:47:01] lb.utils.events INFO:  eta: 0:07:29  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07945  time: 0.0454 s/iter  data_time: 0.0009 s/iter total_throughput: 88.03 samples/s lr: 8.00e-04  
[08/24 06:47:02] lb.utils.events INFO:  eta: 0:07:28  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06401  time: 0.0452 s/iter  data_time: 0.0004 s/iter total_throughput: 88.57 samples/s lr: 8.00e-04  
[08/24 06:47:03] lb.utils.events INFO:  eta: 0:07:27  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04815  time: 0.0450 s/iter  data_time: 0.0006 s/iter total_throughput: 88.83 samples/s lr: 8.00e-04  
[08/24 06:47:03] lb.utils.events INFO:  eta: 0:07:26  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03226  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.82 samples/s lr: 8.00e-04  
[08/24 06:47:04] lb.utils.events INFO:  eta: 0:07:24  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01529  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.84 samples/s lr: 8.00e-04  
[08/24 06:47:05] lb.utils.events INFO:  eta: 0:07:22  iteration: 179/10000  consumed_samples: 720  total_loss: 0.006762  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:47:06] lb.utils.events INFO:  eta: 0:07:21  iteration: 199/10000  consumed_samples: 800  total_loss: 0.003091  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.86 samples/s lr: 8.00e-04  
[08/24 06:47:07] lb.utils.events INFO:  eta: 0:07:20  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0009722  time: 0.0450 s/iter  data_time: 0.0010 s/iter total_throughput: 88.80 samples/s lr: 8.00e-04  
[08/24 06:47:08] lb.utils.events INFO:  eta: 0:07:19  iteration: 239/10000  consumed_samples: 960  total_loss: 2.084e-05  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.78 samples/s lr: 8.00e-04  
[08/24 06:47:09] lb.utils.events INFO:  eta: 0:07:18  iteration: 259/10000  consumed_samples: 1040  total_loss: 9.556e-06  time: 0.0450 s/iter  data_time: 0.0008 s/iter total_throughput: 88.80 samples/s lr: 8.00e-04  
[08/24 06:47:10] lb.utils.events INFO:  eta: 0:07:17  iteration: 279/10000  consumed_samples: 1120  total_loss: 6.48e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.79 samples/s lr: 8.00e-04  
[08/24 06:47:11] lb.utils.events INFO:  eta: 0:07:17  iteration: 299/10000  consumed_samples: 1200  total_loss: 4.872e-06  time: 0.0451 s/iter  data_time: 0.0010 s/iter total_throughput: 88.76 samples/s lr: 8.00e-04  
[08/24 06:47:12] lb.utils.events INFO:  eta: 0:07:16  iteration: 319/10000  consumed_samples: 1280  total_loss: 3.875e-06  time: 0.0451 s/iter  data_time: 0.0010 s/iter total_throughput: 88.68 samples/s lr: 8.00e-04  
[08/24 06:47:13] lb.utils.events INFO:  eta: 0:07:15  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.225e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.65 samples/s lr: 8.00e-04  
[08/24 07:02:14] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:02:14] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:02:14] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:02:14] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:02:14] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:02:14] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.046 seconds
[08/24 07:02:14] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/24 07:02:14] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:02:16] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:02:18] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:02:18] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:02:18] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:02:18] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:02:28] lb.utils.events INFO:  eta: 0:07:16  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1061  time: 0.0441 s/iter  data_time: 0.0006 s/iter total_throughput: 90.74 samples/s lr: 8.00e-04  
[08/24 07:02:29] lb.utils.events INFO:  eta: 0:07:23  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09195  time: 0.0445 s/iter  data_time: 0.0008 s/iter total_throughput: 89.84 samples/s lr: 8.00e-04  
[08/24 07:02:30] lb.utils.events INFO:  eta: 0:07:24  iteration: 59/10000  consumed_samples: 240  total_loss: 0.0849  time: 0.0446 s/iter  data_time: 0.0009 s/iter total_throughput: 89.64 samples/s lr: 8.00e-04  
[08/24 07:02:30] lb.utils.events INFO:  eta: 0:07:23  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07988  time: 0.0447 s/iter  data_time: 0.0009 s/iter total_throughput: 89.39 samples/s lr: 8.00e-04  
[08/24 07:02:31] lb.utils.events INFO:  eta: 0:07:22  iteration: 99/10000  consumed_samples: 400  total_loss: 0.07143  time: 0.0446 s/iter  data_time: 0.0006 s/iter total_throughput: 89.60 samples/s lr: 8.00e-04  
[08/24 07:02:32] lb.utils.events INFO:  eta: 0:07:21  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05636  time: 0.0447 s/iter  data_time: 0.0008 s/iter total_throughput: 89.47 samples/s lr: 8.00e-04  
[08/24 07:02:33] lb.utils.events INFO:  eta: 0:07:21  iteration: 139/10000  consumed_samples: 560  total_loss: 0.0406  time: 0.0447 s/iter  data_time: 0.0009 s/iter total_throughput: 89.41 samples/s lr: 8.00e-04  
[08/24 07:02:34] lb.utils.events INFO:  eta: 0:07:20  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02896  time: 0.0448 s/iter  data_time: 0.0009 s/iter total_throughput: 89.33 samples/s lr: 8.00e-04  
[08/24 07:02:35] lb.utils.events INFO:  eta: 0:07:20  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01628  time: 0.0449 s/iter  data_time: 0.0011 s/iter total_throughput: 89.14 samples/s lr: 8.00e-04  
[08/24 07:02:36] lb.utils.events INFO:  eta: 0:07:19  iteration: 199/10000  consumed_samples: 800  total_loss: 0.01011  time: 0.0449 s/iter  data_time: 0.0009 s/iter total_throughput: 89.08 samples/s lr: 8.00e-04  
[08/24 07:02:37] lb.utils.events INFO:  eta: 0:07:18  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001307  time: 0.0449 s/iter  data_time: 0.0008 s/iter total_throughput: 89.07 samples/s lr: 8.00e-04  
[08/24 07:02:38] lb.utils.events INFO:  eta: 0:07:18  iteration: 239/10000  consumed_samples: 960  total_loss: 2.946e-05  time: 0.0449 s/iter  data_time: 0.0009 s/iter total_throughput: 89.00 samples/s lr: 8.00e-04  
[08/24 07:02:39] lb.utils.events INFO:  eta: 0:07:17  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.428e-05  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.96 samples/s lr: 8.00e-04  
[08/24 07:02:39] lb.utils.events INFO:  eta: 0:07:16  iteration: 279/10000  consumed_samples: 1120  total_loss: 9.656e-06  time: 0.0450 s/iter  data_time: 0.0011 s/iter total_throughput: 88.90 samples/s lr: 8.00e-04  
[08/24 07:02:40] lb.utils.events INFO:  eta: 0:07:15  iteration: 299/10000  consumed_samples: 1200  total_loss: 7.001e-06  time: 0.0450 s/iter  data_time: 0.0008 s/iter total_throughput: 88.93 samples/s lr: 8.00e-04  
[08/24 07:02:41] lb.utils.events INFO:  eta: 0:07:15  iteration: 319/10000  consumed_samples: 1280  total_loss: 5.278e-06  time: 0.0450 s/iter  data_time: 0.0006 s/iter total_throughput: 88.96 samples/s lr: 8.00e-04  
[08/24 07:02:42] lb.utils.events INFO:  eta: 0:07:13  iteration: 339/10000  consumed_samples: 1360  total_loss: 4.212e-06  time: 0.0449 s/iter  data_time: 0.0004 s/iter total_throughput: 89.05 samples/s lr: 8.00e-04  
[08/24 07:02:43] lb.utils.events INFO:  eta: 0:07:13  iteration: 359/10000  consumed_samples: 1440  total_loss: 3.428e-06  time: 0.0449 s/iter  data_time: 0.0009 s/iter total_throughput: 89.05 samples/s lr: 8.00e-04  
[08/24 07:07:15] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:07:15] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:07:15] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:07:15] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:07:15] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:07:15] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/24 07:07:15] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.053 seconds
[08/24 07:07:15] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:07:17] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:07:19] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:07:19] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:07:20] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:07:20] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:07:29] lb.utils.events INFO:  eta: 0:07:14  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1061  time: 0.0442 s/iter  data_time: 0.0007 s/iter total_throughput: 90.47 samples/s lr: 8.00e-04  
[08/24 07:07:29] lb.utils.events INFO:  eta: 0:07:13  iteration: 39/10000  consumed_samples: 160  total_loss: 0.0918  time: 0.0439 s/iter  data_time: 0.0003 s/iter total_throughput: 91.19 samples/s lr: 8.00e-04  
[08/24 07:07:30] lb.utils.events INFO:  eta: 0:07:13  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08397  time: 0.0438 s/iter  data_time: 0.0003 s/iter total_throughput: 91.32 samples/s lr: 8.00e-04  
[08/24 07:07:31] lb.utils.events INFO:  eta: 0:07:12  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07944  time: 0.0439 s/iter  data_time: 0.0006 s/iter total_throughput: 91.10 samples/s lr: 8.00e-04  
[08/24 07:07:32] lb.utils.events INFO:  eta: 0:07:11  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06528  time: 0.0441 s/iter  data_time: 0.0008 s/iter total_throughput: 90.75 samples/s lr: 8.00e-04  
[08/24 07:07:33] lb.utils.events INFO:  eta: 0:07:11  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04851  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.44 samples/s lr: 8.00e-04  
[08/24 07:07:34] lb.utils.events INFO:  eta: 0:07:16  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03352  time: 0.0443 s/iter  data_time: 0.0009 s/iter total_throughput: 90.23 samples/s lr: 8.00e-04  
[08/24 07:07:35] lb.utils.events INFO:  eta: 0:07:11  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01637  time: 0.0443 s/iter  data_time: 0.0003 s/iter total_throughput: 90.37 samples/s lr: 8.00e-04  
[08/24 07:07:36] lb.utils.events INFO:  eta: 0:07:16  iteration: 179/10000  consumed_samples: 720  total_loss: 0.007279  time: 0.0444 s/iter  data_time: 0.0009 s/iter total_throughput: 90.19 samples/s lr: 8.00e-04  
[08/24 07:07:37] lb.utils.events INFO:  eta: 0:07:13  iteration: 199/10000  consumed_samples: 800  total_loss: 0.003456  time: 0.0443 s/iter  data_time: 0.0005 s/iter total_throughput: 90.23 samples/s lr: 8.00e-04  
[08/24 07:07:37] lb.utils.events INFO:  eta: 0:07:15  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001007  time: 0.0444 s/iter  data_time: 0.0009 s/iter total_throughput: 90.13 samples/s lr: 8.00e-04  
[08/24 07:07:38] lb.utils.events INFO:  eta: 0:07:16  iteration: 239/10000  consumed_samples: 960  total_loss: 1.498e-05  time: 0.0444 s/iter  data_time: 0.0008 s/iter total_throughput: 90.03 samples/s lr: 8.00e-04  
[08/24 07:12:34] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:12:34] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:12:34] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 07:12:34] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:12:34] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:12:34] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.046 seconds
[08/24 07:12:34] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/24 07:12:34] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:12:36] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:12:38] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:12:38] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:12:39] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:12:39] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:12:50] lb.utils.events INFO:  eta: 0:09:20  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1061  time: 0.0564 s/iter  data_time: 0.0008 s/iter total_throughput: 70.93 samples/s lr: 8.00e-04  
[08/24 07:12:51] lb.utils.events INFO:  eta: 0:09:18  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09178  time: 0.0562 s/iter  data_time: 0.0003 s/iter total_throughput: 71.19 samples/s lr: 8.00e-04  
[08/24 07:12:52] lb.utils.events INFO:  eta: 0:09:17  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08401  time: 0.0561 s/iter  data_time: 0.0007 s/iter total_throughput: 71.25 samples/s lr: 8.00e-04  
[08/24 07:12:53] lb.utils.events INFO:  eta: 0:09:16  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07935  time: 0.0561 s/iter  data_time: 0.0008 s/iter total_throughput: 71.28 samples/s lr: 8.00e-04  
[08/24 07:12:54] lb.utils.events INFO:  eta: 0:09:15  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06396  time: 0.0561 s/iter  data_time: 0.0003 s/iter total_throughput: 71.27 samples/s lr: 8.00e-04  
[08/24 07:12:55] lb.utils.events INFO:  eta: 0:09:14  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04824  time: 0.0561 s/iter  data_time: 0.0007 s/iter total_throughput: 71.26 samples/s lr: 8.00e-04  
[08/24 07:12:56] lb.utils.events INFO:  eta: 0:09:13  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03435  time: 0.0561 s/iter  data_time: 0.0009 s/iter total_throughput: 71.27 samples/s lr: 8.00e-04  
[08/24 07:12:57] lb.utils.events INFO:  eta: 0:09:12  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02061  time: 0.0561 s/iter  data_time: 0.0009 s/iter total_throughput: 71.28 samples/s lr: 8.00e-04  
[08/24 07:12:59] lb.utils.events INFO:  eta: 0:09:11  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01335  time: 0.0561 s/iter  data_time: 0.0009 s/iter total_throughput: 71.27 samples/s lr: 8.00e-04  
[08/24 07:13:00] lb.utils.events INFO:  eta: 0:09:10  iteration: 199/10000  consumed_samples: 800  total_loss: 0.006279  time: 0.0561 s/iter  data_time: 0.0009 s/iter total_throughput: 71.26 samples/s lr: 8.00e-04  
[08/24 07:13:01] lb.utils.events INFO:  eta: 0:09:09  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0009084  time: 0.0561 s/iter  data_time: 0.0009 s/iter total_throughput: 71.25 samples/s lr: 8.00e-04  
[08/24 07:13:02] lb.utils.events INFO:  eta: 0:09:08  iteration: 239/10000  consumed_samples: 960  total_loss: 2.429e-05  time: 0.0561 s/iter  data_time: 0.0009 s/iter total_throughput: 71.24 samples/s lr: 8.00e-04  
[08/24 07:16:54] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:16:54] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:16:54] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:16:54] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:16:54] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:16:54] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.047 seconds
[08/24 07:16:54] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/24 07:16:54] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:16:56] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:16:58] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:16:58] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:16:59] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:16:59] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:17:08] lb.utils.events INFO:  eta: 0:07:15  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1061  time: 0.0439 s/iter  data_time: 0.0008 s/iter total_throughput: 91.10 samples/s lr: 8.00e-04  
[08/24 07:17:09] lb.utils.events INFO:  eta: 0:07:15  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09178  time: 0.0440 s/iter  data_time: 0.0004 s/iter total_throughput: 90.96 samples/s lr: 8.00e-04  
[08/24 07:17:10] lb.utils.events INFO:  eta: 0:07:14  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08398  time: 0.0440 s/iter  data_time: 0.0004 s/iter total_throughput: 91.01 samples/s lr: 8.00e-04  
[08/24 07:17:11] lb.utils.events INFO:  eta: 0:07:13  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07942  time: 0.0441 s/iter  data_time: 0.0004 s/iter total_throughput: 90.72 samples/s lr: 8.00e-04  
[08/24 07:17:11] lb.utils.events INFO:  eta: 0:07:13  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06578  time: 0.0441 s/iter  data_time: 0.0005 s/iter total_throughput: 90.67 samples/s lr: 8.00e-04  
[08/24 07:17:12] lb.utils.events INFO:  eta: 0:07:13  iteration: 119/10000  consumed_samples: 480  total_loss: 0.0486  time: 0.0443 s/iter  data_time: 0.0009 s/iter total_throughput: 90.32 samples/s lr: 8.00e-04  
[08/24 07:17:13] lb.utils.events INFO:  eta: 0:07:12  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03385  time: 0.0442 s/iter  data_time: 0.0003 s/iter total_throughput: 90.52 samples/s lr: 8.00e-04  
[08/24 07:17:14] lb.utils.events INFO:  eta: 0:07:11  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01808  time: 0.0442 s/iter  data_time: 0.0005 s/iter total_throughput: 90.49 samples/s lr: 8.00e-04  
[08/24 07:17:15] lb.utils.events INFO:  eta: 0:07:11  iteration: 179/10000  consumed_samples: 720  total_loss: 0.009337  time: 0.0443 s/iter  data_time: 0.0009 s/iter total_throughput: 90.33 samples/s lr: 8.00e-04  
[08/24 07:17:16] lb.utils.events INFO:  eta: 0:07:11  iteration: 199/10000  consumed_samples: 800  total_loss: 0.005758  time: 0.0444 s/iter  data_time: 0.0009 s/iter total_throughput: 90.14 samples/s lr: 8.00e-04  
[08/24 07:17:17] lb.utils.events INFO:  eta: 0:07:15  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001086  time: 0.0444 s/iter  data_time: 0.0009 s/iter total_throughput: 90.00 samples/s lr: 8.00e-04  
[08/24 07:17:18] lb.utils.events INFO:  eta: 0:07:14  iteration: 239/10000  consumed_samples: 960  total_loss: 3.058e-05  time: 0.0445 s/iter  data_time: 0.0010 s/iter total_throughput: 89.88 samples/s lr: 8.00e-04  
[08/24 07:17:19] lb.utils.events INFO:  eta: 0:07:14  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.309e-05  time: 0.0445 s/iter  data_time: 0.0009 s/iter total_throughput: 89.81 samples/s lr: 8.00e-04  
[08/24 07:17:20] lb.utils.events INFO:  eta: 0:07:14  iteration: 279/10000  consumed_samples: 1120  total_loss: 9.154e-06  time: 0.0446 s/iter  data_time: 0.0009 s/iter total_throughput: 89.73 samples/s lr: 8.00e-04  
[08/24 07:17:20] lb.utils.events INFO:  eta: 0:07:13  iteration: 299/10000  consumed_samples: 1200  total_loss: 7.09e-06  time: 0.0446 s/iter  data_time: 0.0006 s/iter total_throughput: 89.75 samples/s lr: 8.00e-04  
[08/24 07:21:54] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:21:54] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:21:54] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyuRWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyuRWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyuRWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 07:21:54] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:21:54] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:21:54] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.050 seconds
[08/24 07:21:54] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/24 07:21:54] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:23:03] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:23:03] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:23:03] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 07:23:03] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:23:03] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:23:04] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 07:23:04] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/24 07:23:04] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:23:05] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:23:07] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:23:08] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:23:08] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:23:08] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:23:18] lb.engine.trainer ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/zhangxiaoyu/libai/libai/engine/trainer.py", line 146, in train
    self.run_step()
  File "/home/zhangxiaoyu/libai/libai/engine/default.py", line 476, in run_step
    self._trainer.run_step(self.get_batch, self.cfg.train.input_placement_device)
  File "/home/zhangxiaoyu/libai/libai/engine/trainer.py", line 354, in run_step
    self.write_metrics(loss_dict, data_time)
  File "/home/zhangxiaoyu/libai/libai/engine/trainer.py", line 218, in write_metrics
    txt = open("/home/chenqiaoling/libai/projects/RWKV_v4/results/libai_bf16_defaultSize_graph_nolossscale_test2.txt", "a")
FileNotFoundError: [Errno 2] No such file or directory: '/home/chenqiaoling/libai/projects/RWKV_v4/results/libai_bf16_defaultSize_graph_nolossscale_test2.txt'
[08/24 07:23:18] lb.engine.hooks INFO: Total training time: 0:00:09 (0:00:00 on hooks)
[08/24 07:23:50] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:23:50] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:23:50] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 07:23:50] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:23:50] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:23:50] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.040 seconds
[08/24 07:23:50] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.041 seconds
[08/24 07:23:50] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:23:51] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:23:53] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:23:54] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:23:54] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:23:54] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:24:05] lb.utils.events INFO:  eta: 0:09:19  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1061  time: 0.0566 s/iter  data_time: 0.0004 s/iter total_throughput: 70.69 samples/s lr: 8.00e-04  
[08/24 07:24:06] lb.utils.events INFO:  eta: 0:09:18  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09183  time: 0.0563 s/iter  data_time: 0.0007 s/iter total_throughput: 71.07 samples/s lr: 8.00e-04  
[08/24 07:24:08] lb.utils.events INFO:  eta: 0:09:17  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08396  time: 0.0562 s/iter  data_time: 0.0009 s/iter total_throughput: 71.18 samples/s lr: 8.00e-04  
[08/24 07:24:09] lb.utils.events INFO:  eta: 0:09:16  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07961  time: 0.0561 s/iter  data_time: 0.0010 s/iter total_throughput: 71.24 samples/s lr: 8.00e-04  
[08/24 07:24:10] lb.utils.events INFO:  eta: 0:09:15  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06494  time: 0.0561 s/iter  data_time: 0.0007 s/iter total_throughput: 71.28 samples/s lr: 8.00e-04  
[08/24 07:24:11] lb.utils.events INFO:  eta: 0:09:14  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04843  time: 0.0561 s/iter  data_time: 0.0008 s/iter total_throughput: 71.28 samples/s lr: 8.00e-04  
[08/24 07:24:12] lb.utils.events INFO:  eta: 0:09:13  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03313  time: 0.0565 s/iter  data_time: 0.0009 s/iter total_throughput: 70.79 samples/s lr: 8.00e-04  
[08/24 07:24:13] lb.utils.events INFO:  eta: 0:09:12  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01801  time: 0.0565 s/iter  data_time: 0.0009 s/iter total_throughput: 70.84 samples/s lr: 8.00e-04  
[08/24 07:25:19] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:25:19] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:25:19] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:25:19] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:25:19] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:25:19] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.055 seconds
[08/24 07:25:19] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.055 seconds
[08/24 07:25:19] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:25:21] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:25:23] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:25:24] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:25:24] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:25:24] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:25:33] lb.utils.events INFO:  eta: 0:07:27  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1062  time: 0.0456 s/iter  data_time: 0.0011 s/iter total_throughput: 87.69 samples/s lr: 8.00e-04  
[08/24 07:25:34] lb.utils.events INFO:  eta: 0:07:26  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09199  time: 0.0452 s/iter  data_time: 0.0009 s/iter total_throughput: 88.44 samples/s lr: 8.00e-04  
[08/24 07:25:35] lb.utils.events INFO:  eta: 0:07:25  iteration: 59/10000  consumed_samples: 240  total_loss: 0.0839  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.65 samples/s lr: 8.00e-04  
[08/24 07:25:36] lb.utils.events INFO:  eta: 0:07:25  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07941  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.66 samples/s lr: 8.00e-04  
[08/24 07:25:37] lb.utils.events INFO:  eta: 0:07:24  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06961  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.65 samples/s lr: 8.00e-04  
[08/24 07:25:37] lb.utils.events INFO:  eta: 0:07:23  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05125  time: 0.0451 s/iter  data_time: 0.0008 s/iter total_throughput: 88.77 samples/s lr: 8.00e-04  
[08/24 07:25:38] lb.utils.events INFO:  eta: 0:07:22  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03586  time: 0.0449 s/iter  data_time: 0.0004 s/iter total_throughput: 89.06 samples/s lr: 8.00e-04  
[08/24 07:25:39] lb.utils.events INFO:  eta: 0:07:21  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02193  time: 0.0449 s/iter  data_time: 0.0008 s/iter total_throughput: 89.04 samples/s lr: 8.00e-04  
[08/24 07:25:40] lb.utils.events INFO:  eta: 0:07:20  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01286  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.97 samples/s lr: 8.00e-04  
[08/24 07:25:41] lb.utils.events INFO:  eta: 0:07:20  iteration: 199/10000  consumed_samples: 800  total_loss: 0.005076  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.90 samples/s lr: 8.00e-04  
[08/24 07:25:42] lb.utils.events INFO:  eta: 0:07:18  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0007991  time: 0.0449 s/iter  data_time: 0.0004 s/iter total_throughput: 89.02 samples/s lr: 8.00e-04  
[08/24 07:25:43] lb.utils.events INFO:  eta: 0:07:18  iteration: 239/10000  consumed_samples: 960  total_loss: 1.68e-05  time: 0.0449 s/iter  data_time: 0.0006 s/iter total_throughput: 89.05 samples/s lr: 8.00e-04  
[08/24 07:25:44] lb.utils.events INFO:  eta: 0:07:17  iteration: 259/10000  consumed_samples: 1040  total_loss: 7.543e-06  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.92 samples/s lr: 8.00e-04  
[08/24 07:25:45] lb.utils.events INFO:  eta: 0:07:17  iteration: 279/10000  consumed_samples: 1120  total_loss: 5.78e-06  time: 0.0450 s/iter  data_time: 0.0009 s/iter total_throughput: 88.85 samples/s lr: 8.00e-04  
[08/24 07:25:46] lb.utils.events INFO:  eta: 0:07:16  iteration: 299/10000  consumed_samples: 1200  total_loss: 4.826e-06  time: 0.0451 s/iter  data_time: 0.0010 s/iter total_throughput: 88.76 samples/s lr: 8.00e-04  
[08/24 07:25:47] lb.utils.events INFO:  eta: 0:07:15  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.185e-06  time: 0.0451 s/iter  data_time: 0.0009 s/iter total_throughput: 88.72 samples/s lr: 8.00e-04  
[08/24 07:25:47] lb.utils.events INFO:  eta: 0:07:14  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.626e-06  time: 0.0451 s/iter  data_time: 0.0007 s/iter total_throughput: 88.74 samples/s lr: 8.00e-04  
[08/24 07:27:33] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:27:33] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:27:33] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:27:33] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:27:33] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:27:33] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.040 seconds
[08/24 07:27:33] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.041 seconds
[08/24 07:27:33] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:27:35] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:27:37] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:27:38] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:27:38] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:27:38] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:27:48] lb.utils.events INFO:  eta: 0:07:14  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1061  time: 0.0440 s/iter  data_time: 0.0003 s/iter total_throughput: 90.88 samples/s lr: 8.00e-04  
[08/24 07:27:49] lb.utils.events INFO:  eta: 0:07:14  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09189  time: 0.0438 s/iter  data_time: 0.0008 s/iter total_throughput: 91.28 samples/s lr: 8.00e-04  
[08/24 07:27:49] lb.utils.events INFO:  eta: 0:07:13  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08488  time: 0.0436 s/iter  data_time: 0.0008 s/iter total_throughput: 91.70 samples/s lr: 8.00e-04  
[08/24 07:27:50] lb.utils.events INFO:  eta: 0:07:12  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07987  time: 0.0435 s/iter  data_time: 0.0008 s/iter total_throughput: 91.92 samples/s lr: 8.00e-04  
[08/24 07:27:51] lb.utils.events INFO:  eta: 0:07:11  iteration: 99/10000  consumed_samples: 400  total_loss: 0.07227  time: 0.0435 s/iter  data_time: 0.0009 s/iter total_throughput: 91.87 samples/s lr: 8.00e-04  
[08/24 07:27:52] lb.utils.events INFO:  eta: 0:07:10  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05707  time: 0.0436 s/iter  data_time: 0.0008 s/iter total_throughput: 91.80 samples/s lr: 8.00e-04  
[08/24 07:27:53] lb.utils.events INFO:  eta: 0:07:09  iteration: 139/10000  consumed_samples: 560  total_loss: 0.04243  time: 0.0435 s/iter  data_time: 0.0008 s/iter total_throughput: 91.89 samples/s lr: 8.00e-04  
[08/24 07:27:54] lb.utils.events INFO:  eta: 0:07:08  iteration: 159/10000  consumed_samples: 640  total_loss: 0.03091  time: 0.0435 s/iter  data_time: 0.0008 s/iter total_throughput: 91.89 samples/s lr: 8.00e-04  
[08/24 07:27:55] lb.utils.events INFO:  eta: 0:07:07  iteration: 179/10000  consumed_samples: 720  total_loss: 0.0175  time: 0.0436 s/iter  data_time: 0.0009 s/iter total_throughput: 91.84 samples/s lr: 8.00e-04  
[08/24 07:27:56] lb.utils.events INFO:  eta: 0:07:07  iteration: 199/10000  consumed_samples: 800  total_loss: 0.00958  time: 0.0438 s/iter  data_time: 0.0009 s/iter total_throughput: 91.36 samples/s lr: 8.00e-04  
[08/24 07:28:31] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:28:31] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:28:32] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:28:32] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:28:32] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:28:32] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.049 seconds
[08/24 07:28:32] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/24 07:28:32] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:28:33] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:28:35] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:28:36] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:28:36] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:28:36] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:28:46] lb.utils.events INFO:  eta: 0:07:14  iteration: 19/10000  consumed_samples: 80  total_loss: 0.106  time: 0.0448 s/iter  data_time: 0.0008 s/iter total_throughput: 89.33 samples/s lr: 8.00e-04  
[08/24 07:28:47] lb.utils.events INFO:  eta: 0:07:14  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09188  time: 0.0443 s/iter  data_time: 0.0007 s/iter total_throughput: 90.25 samples/s lr: 8.00e-04  
[08/24 07:28:48] lb.utils.events INFO:  eta: 0:07:15  iteration: 59/10000  consumed_samples: 240  total_loss: 0.0841  time: 0.0442 s/iter  data_time: 0.0008 s/iter total_throughput: 90.56 samples/s lr: 8.00e-04  
[08/24 07:28:49] lb.utils.events INFO:  eta: 0:07:14  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07932  time: 0.0442 s/iter  data_time: 0.0008 s/iter total_throughput: 90.48 samples/s lr: 8.00e-04  
[08/24 07:28:50] lb.utils.events INFO:  eta: 0:07:14  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06817  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.53 samples/s lr: 8.00e-04  
[08/24 07:28:50] lb.utils.events INFO:  eta: 0:07:13  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04968  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.47 samples/s lr: 8.00e-04  
[08/24 07:28:51] lb.utils.events INFO:  eta: 0:07:12  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03491  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.54 samples/s lr: 8.00e-04  
[08/24 07:28:52] lb.utils.events INFO:  eta: 0:07:11  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01996  time: 0.0441 s/iter  data_time: 0.0010 s/iter total_throughput: 90.76 samples/s lr: 8.00e-04  
[08/24 07:28:53] lb.utils.events INFO:  eta: 0:07:10  iteration: 179/10000  consumed_samples: 720  total_loss: 0.009329  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.60 samples/s lr: 8.00e-04  
[08/24 07:28:54] lb.utils.events INFO:  eta: 0:07:10  iteration: 199/10000  consumed_samples: 800  total_loss: 0.004769  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.55 samples/s lr: 8.00e-04  
[08/24 07:28:55] lb.utils.events INFO:  eta: 0:07:09  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001313  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.48 samples/s lr: 8.00e-04  
[08/24 07:28:56] lb.utils.events INFO:  eta: 0:07:09  iteration: 239/10000  consumed_samples: 960  total_loss: 3.545e-05  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.42 samples/s lr: 8.00e-04  
[08/24 07:28:57] lb.utils.events INFO:  eta: 0:07:08  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.14e-05  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.42 samples/s lr: 8.00e-04  
[08/24 07:28:58] lb.utils.events INFO:  eta: 0:07:08  iteration: 279/10000  consumed_samples: 1120  total_loss: 7.545e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.42 samples/s lr: 8.00e-04  
[08/24 07:28:58] lb.utils.events INFO:  eta: 0:07:07  iteration: 299/10000  consumed_samples: 1200  total_loss: 5.251e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.43 samples/s lr: 8.00e-04  
[08/24 07:28:59] lb.utils.events INFO:  eta: 0:07:06  iteration: 319/10000  consumed_samples: 1280  total_loss: 3.61e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.46 samples/s lr: 8.00e-04  
[08/24 07:29:00] lb.utils.events INFO:  eta: 0:07:05  iteration: 339/10000  consumed_samples: 1360  total_loss: 2.527e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.50 samples/s lr: 8.00e-04  
[08/24 07:29:01] lb.utils.events INFO:  eta: 0:07:04  iteration: 359/10000  consumed_samples: 1440  total_loss: 1.884e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.50 samples/s lr: 8.00e-04  
[08/24 07:29:02] lb.utils.events INFO:  eta: 0:07:03  iteration: 379/10000  consumed_samples: 1520  total_loss: 1.46e-06  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.51 samples/s lr: 8.00e-04  
[08/24 07:29:03] lb.utils.events INFO:  eta: 0:07:02  iteration: 399/10000  consumed_samples: 1600  total_loss: 1.197e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.52 samples/s lr: 8.00e-04  
[08/24 07:36:16] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:36:16] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:36:16] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:36:16] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:36:16] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:36:16] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/24 07:36:16] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 07:36:16] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:36:18] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:36:20] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:36:21] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:36:21] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:36:21] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:36:30] lb.utils.events INFO:  eta: 0:07:23  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1062  time: 0.0449 s/iter  data_time: 0.0009 s/iter total_throughput: 89.16 samples/s lr: 8.00e-04  
[08/24 07:36:31] lb.utils.events INFO:  eta: 0:07:26  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09173  time: 0.0448 s/iter  data_time: 0.0009 s/iter total_throughput: 89.22 samples/s lr: 8.00e-04  
[08/24 07:36:32] lb.utils.events INFO:  eta: 0:07:25  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08395  time: 0.0448 s/iter  data_time: 0.0009 s/iter total_throughput: 89.20 samples/s lr: 8.00e-04  
[08/24 07:36:33] lb.utils.events INFO:  eta: 0:07:24  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07945  time: 0.0447 s/iter  data_time: 0.0004 s/iter total_throughput: 89.47 samples/s lr: 8.00e-04  
[08/24 07:36:34] lb.utils.events INFO:  eta: 0:07:23  iteration: 99/10000  consumed_samples: 400  total_loss: 0.07  time: 0.0447 s/iter  data_time: 0.0007 s/iter total_throughput: 89.49 samples/s lr: 8.00e-04  
[08/24 07:36:35] lb.utils.events INFO:  eta: 0:07:20  iteration: 119/10000  consumed_samples: 480  total_loss: 0.05178  time: 0.0446 s/iter  data_time: 0.0005 s/iter total_throughput: 89.75 samples/s lr: 8.00e-04  
[08/24 07:36:36] lb.utils.events INFO:  eta: 0:07:19  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03655  time: 0.0446 s/iter  data_time: 0.0008 s/iter total_throughput: 89.71 samples/s lr: 8.00e-04  
[08/24 07:36:37] lb.utils.events INFO:  eta: 0:07:18  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02377  time: 0.0446 s/iter  data_time: 0.0008 s/iter total_throughput: 89.66 samples/s lr: 8.00e-04  
[08/24 07:36:38] lb.utils.events INFO:  eta: 0:07:18  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01496  time: 0.0446 s/iter  data_time: 0.0008 s/iter total_throughput: 89.65 samples/s lr: 8.00e-04  
[08/24 07:36:39] lb.utils.events INFO:  eta: 0:07:17  iteration: 199/10000  consumed_samples: 800  total_loss: 0.008999  time: 0.0446 s/iter  data_time: 0.0003 s/iter total_throughput: 89.76 samples/s lr: 8.00e-04  
[08/24 07:36:39] lb.utils.events INFO:  eta: 0:07:15  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001294  time: 0.0445 s/iter  data_time: 0.0003 s/iter total_throughput: 89.90 samples/s lr: 8.00e-04  
[08/24 07:36:40] lb.utils.events INFO:  eta: 0:07:14  iteration: 239/10000  consumed_samples: 960  total_loss: 2.664e-05  time: 0.0444 s/iter  data_time: 0.0003 s/iter total_throughput: 90.04 samples/s lr: 8.00e-04  
[08/24 07:36:41] lb.utils.events INFO:  eta: 0:07:13  iteration: 259/10000  consumed_samples: 1040  total_loss: 1.244e-05  time: 0.0444 s/iter  data_time: 0.0005 s/iter total_throughput: 90.06 samples/s lr: 8.00e-04  
[08/24 07:36:42] lb.utils.events INFO:  eta: 0:07:13  iteration: 279/10000  consumed_samples: 1120  total_loss: 8.214e-06  time: 0.0445 s/iter  data_time: 0.0010 s/iter total_throughput: 89.95 samples/s lr: 8.00e-04  
[08/24 07:41:22] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:41:22] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:41:22] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:41:22] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:41:22] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:41:22] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.043 seconds
[08/24 07:41:22] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.043 seconds
[08/24 07:41:22] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:41:24] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:41:26] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:41:27] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:41:27] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:41:27] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:41:37] lb.utils.events INFO:  eta: 0:07:14  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1064  time: 0.0440 s/iter  data_time: 0.0011 s/iter total_throughput: 90.95 samples/s lr: 8.00e-04  
[08/24 07:41:38] lb.utils.events INFO:  eta: 0:07:13  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09192  time: 0.0435 s/iter  data_time: 0.0009 s/iter total_throughput: 92.01 samples/s lr: 8.00e-04  
[08/24 07:41:39] lb.utils.events INFO:  eta: 0:07:12  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08398  time: 0.0435 s/iter  data_time: 0.0009 s/iter total_throughput: 91.91 samples/s lr: 8.00e-04  
[08/24 07:41:40] lb.utils.events INFO:  eta: 0:07:11  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07928  time: 0.0435 s/iter  data_time: 0.0009 s/iter total_throughput: 91.96 samples/s lr: 8.00e-04  
[08/24 07:41:41] lb.utils.events INFO:  eta: 0:07:11  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06436  time: 0.0435 s/iter  data_time: 0.0008 s/iter total_throughput: 91.97 samples/s lr: 8.00e-04  
[08/24 07:41:41] lb.utils.events INFO:  eta: 0:07:10  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04843  time: 0.0435 s/iter  data_time: 0.0009 s/iter total_throughput: 92.05 samples/s lr: 8.00e-04  
[08/24 07:41:42] lb.utils.events INFO:  eta: 0:07:09  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03314  time: 0.0435 s/iter  data_time: 0.0009 s/iter total_throughput: 91.89 samples/s lr: 8.00e-04  
[08/24 07:41:43] lb.utils.events INFO:  eta: 0:07:09  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01631  time: 0.0436 s/iter  data_time: 0.0009 s/iter total_throughput: 91.70 samples/s lr: 8.00e-04  
[08/24 07:41:44] lb.utils.events INFO:  eta: 0:07:08  iteration: 179/10000  consumed_samples: 720  total_loss: 0.009888  time: 0.0436 s/iter  data_time: 0.0005 s/iter total_throughput: 91.65 samples/s lr: 8.00e-04  
[08/24 07:41:45] lb.utils.events INFO:  eta: 0:07:07  iteration: 199/10000  consumed_samples: 800  total_loss: 0.003143  time: 0.0437 s/iter  data_time: 0.0010 s/iter total_throughput: 91.50 samples/s lr: 8.00e-04  
[08/24 07:41:46] lb.utils.events INFO:  eta: 0:07:07  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001008  time: 0.0437 s/iter  data_time: 0.0008 s/iter total_throughput: 91.43 samples/s lr: 8.00e-04  
[08/24 07:41:47] lb.utils.events INFO:  eta: 0:07:06  iteration: 239/10000  consumed_samples: 960  total_loss: 1.776e-05  time: 0.0438 s/iter  data_time: 0.0009 s/iter total_throughput: 91.35 samples/s lr: 8.00e-04  
[08/24 07:41:48] lb.utils.events INFO:  eta: 0:07:06  iteration: 259/10000  consumed_samples: 1040  total_loss: 9.126e-06  time: 0.0438 s/iter  data_time: 0.0009 s/iter total_throughput: 91.25 samples/s lr: 8.00e-04  
[08/24 07:41:49] lb.utils.events INFO:  eta: 0:07:05  iteration: 279/10000  consumed_samples: 1120  total_loss: 6.773e-06  time: 0.0439 s/iter  data_time: 0.0010 s/iter total_throughput: 91.15 samples/s lr: 8.00e-04  
[08/24 07:41:49] lb.utils.events INFO:  eta: 0:07:05  iteration: 299/10000  consumed_samples: 1200  total_loss: 5.402e-06  time: 0.0439 s/iter  data_time: 0.0009 s/iter total_throughput: 91.13 samples/s lr: 8.00e-04  
[08/24 07:41:50] lb.utils.events INFO:  eta: 0:07:04  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.503e-06  time: 0.0439 s/iter  data_time: 0.0004 s/iter total_throughput: 91.13 samples/s lr: 8.00e-04  
[08/24 07:41:51] lb.utils.events INFO:  eta: 0:07:03  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.862e-06  time: 0.0439 s/iter  data_time: 0.0003 s/iter total_throughput: 91.13 samples/s lr: 8.00e-04  
[08/24 07:41:52] lb.utils.events INFO:  eta: 0:07:02  iteration: 359/10000  consumed_samples: 1440  total_loss: 3.42e-06  time: 0.0439 s/iter  data_time: 0.0006 s/iter total_throughput: 91.07 samples/s lr: 8.00e-04  
[08/24 07:41:53] lb.utils.events INFO:  eta: 0:07:02  iteration: 379/10000  consumed_samples: 1520  total_loss: 3.062e-06  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 91.01 samples/s lr: 8.00e-04  
[08/24 07:41:54] lb.utils.events INFO:  eta: 0:07:01  iteration: 399/10000  consumed_samples: 1600  total_loss: 2.731e-06  time: 0.0440 s/iter  data_time: 0.0008 s/iter total_throughput: 91.00 samples/s lr: 8.00e-04  
[08/24 07:41:55] lb.utils.events INFO:  eta: 0:07:00  iteration: 419/10000  consumed_samples: 1680  total_loss: 2.414e-06  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.96 samples/s lr: 8.00e-04  
[08/24 07:41:56] lb.utils.events INFO:  eta: 0:06:59  iteration: 439/10000  consumed_samples: 1760  total_loss: 2.141e-06  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.95 samples/s lr: 8.00e-04  
[08/24 07:41:57] lb.utils.events INFO:  eta: 0:06:58  iteration: 459/10000  consumed_samples: 1840  total_loss: 1.89e-06  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.94 samples/s lr: 8.00e-04  
[08/24 07:59:17] libai INFO: Rank of current process: 0. World size: 1
[08/24 07:59:17] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 07:59:17] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 07:59:17] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 07:59:17] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 07:59:17] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.048 seconds
[08/24 07:59:17] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.049 seconds
[08/24 07:59:17] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 07:59:19] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 07:59:21] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 07:59:22] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 07:59:22] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 07:59:22] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 07:59:32] lb.utils.events INFO:  eta: 0:07:13  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1064  time: 0.0433 s/iter  data_time: 0.0008 s/iter total_throughput: 92.40 samples/s lr: 8.00e-04  
[08/24 07:59:33] lb.utils.events INFO:  eta: 0:07:14  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09192  time: 0.0438 s/iter  data_time: 0.0009 s/iter total_throughput: 91.23 samples/s lr: 8.00e-04  
[08/24 07:59:33] lb.utils.events INFO:  eta: 0:07:15  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08398  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.98 samples/s lr: 8.00e-04  
[08/24 07:59:34] lb.utils.events INFO:  eta: 0:07:15  iteration: 79/10000  consumed_samples: 320  total_loss: 0.0793  time: 0.0441 s/iter  data_time: 0.0009 s/iter total_throughput: 90.78 samples/s lr: 8.00e-04  
[08/24 07:59:35] lb.utils.events INFO:  eta: 0:07:14  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06448  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.88 samples/s lr: 8.00e-04  
[08/24 07:59:36] lb.utils.events INFO:  eta: 0:07:13  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04841  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.88 samples/s lr: 8.00e-04  
[08/24 07:59:37] lb.utils.events INFO:  eta: 0:07:12  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03321  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.88 samples/s lr: 8.00e-04  
[08/24 07:59:38] lb.utils.events INFO:  eta: 0:07:12  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01644  time: 0.0440 s/iter  data_time: 0.0009 s/iter total_throughput: 90.81 samples/s lr: 8.00e-04  
[08/24 07:59:39] lb.utils.events INFO:  eta: 0:07:11  iteration: 179/10000  consumed_samples: 720  total_loss: 0.009432  time: 0.0441 s/iter  data_time: 0.0010 s/iter total_throughput: 90.68 samples/s lr: 8.00e-04  
[08/24 07:59:40] lb.utils.events INFO:  eta: 0:07:10  iteration: 199/10000  consumed_samples: 800  total_loss: 0.004076  time: 0.0441 s/iter  data_time: 0.0009 s/iter total_throughput: 90.65 samples/s lr: 8.00e-04  
[08/24 07:59:41] lb.utils.events INFO:  eta: 0:07:09  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001109  time: 0.0441 s/iter  data_time: 0.0010 s/iter total_throughput: 90.63 samples/s lr: 8.00e-04  
[08/24 07:59:41] lb.utils.events INFO:  eta: 0:07:09  iteration: 239/10000  consumed_samples: 960  total_loss: 1.95e-05  time: 0.0441 s/iter  data_time: 0.0009 s/iter total_throughput: 90.62 samples/s lr: 8.00e-04  
[08/24 07:59:42] lb.utils.events INFO:  eta: 0:07:08  iteration: 259/10000  consumed_samples: 1040  total_loss: 9.951e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.60 samples/s lr: 8.00e-04  
[08/24 07:59:43] lb.utils.events INFO:  eta: 0:07:07  iteration: 279/10000  consumed_samples: 1120  total_loss: 7.108e-06  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.58 samples/s lr: 8.00e-04  
[08/24 07:59:44] lb.utils.events INFO:  eta: 0:07:06  iteration: 299/10000  consumed_samples: 1200  total_loss: 5.583e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.60 samples/s lr: 8.00e-04  
[08/24 07:59:45] lb.utils.events INFO:  eta: 0:07:05  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.531e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.60 samples/s lr: 8.00e-04  
[08/24 07:59:46] lb.utils.events INFO:  eta: 0:07:04  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.741e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.59 samples/s lr: 8.00e-04  
[08/24 07:59:47] lb.utils.events INFO:  eta: 0:07:04  iteration: 359/10000  consumed_samples: 1440  total_loss: 3.139e-06  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.58 samples/s lr: 8.00e-04  
[08/24 07:59:48] lb.utils.events INFO:  eta: 0:07:03  iteration: 379/10000  consumed_samples: 1520  total_loss: 2.632e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.59 samples/s lr: 8.00e-04  
[08/24 07:59:49] lb.utils.events INFO:  eta: 0:07:02  iteration: 399/10000  consumed_samples: 1600  total_loss: 2.201e-06  time: 0.0441 s/iter  data_time: 0.0010 s/iter total_throughput: 90.60 samples/s lr: 8.00e-04  
[08/24 07:59:49] lb.utils.events INFO:  eta: 0:07:01  iteration: 419/10000  consumed_samples: 1680  total_loss: 1.849e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.58 samples/s lr: 8.00e-04  
[08/24 07:59:50] lb.utils.events INFO:  eta: 0:07:00  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.601e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.52 samples/s lr: 8.00e-04  
[08/24 07:59:51] lb.utils.events INFO:  eta: 0:07:00  iteration: 459/10000  consumed_samples: 1840  total_loss: 1.413e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.51 samples/s lr: 8.00e-04  
[08/24 07:59:52] lb.utils.events INFO:  eta: 0:06:59  iteration: 479/10000  consumed_samples: 1920  total_loss: 1.232e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.49 samples/s lr: 8.00e-04  
[08/24 07:59:53] lb.utils.events INFO:  eta: 0:06:58  iteration: 499/10000  consumed_samples: 2000  total_loss: 1.094e-06  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.48 samples/s lr: 8.00e-04  
[08/24 07:59:54] lb.utils.events INFO:  eta: 0:06:57  iteration: 519/10000  consumed_samples: 2080  total_loss: 1.003e-06  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.44 samples/s lr: 8.00e-04  
[08/24 07:59:55] lb.utils.events INFO:  eta: 0:06:56  iteration: 539/10000  consumed_samples: 2160  total_loss: 9.345e-07  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.44 samples/s lr: 8.00e-04  
[08/24 07:59:56] lb.utils.events INFO:  eta: 0:06:56  iteration: 559/10000  consumed_samples: 2240  total_loss: 8.791e-07  time: 0.0442 s/iter  data_time: 0.0010 s/iter total_throughput: 90.42 samples/s lr: 8.00e-04  
[08/24 07:59:57] lb.utils.events INFO:  eta: 0:06:55  iteration: 579/10000  consumed_samples: 2320  total_loss: 8.229e-07  time: 0.0442 s/iter  data_time: 0.0009 s/iter total_throughput: 90.40 samples/s lr: 8.00e-04  
[08/24 08:02:05] libai INFO: Rank of current process: 0. World size: 1
[08/24 08:02:05] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:02:05] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 08:02:05] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:02:05] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:02:05] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.043 seconds
[08/24 08:02:05] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.043 seconds
[08/24 08:02:05] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:02:07] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:02:09] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 08:02:10] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 08:02:10] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:02:10] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:02:19] lb.utils.events INFO:  eta: 0:06:33  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1064  time: 0.0397 s/iter  data_time: 0.0010 s/iter total_throughput: 100.65 samples/s lr: 8.00e-04  
[08/24 08:02:20] lb.utils.events INFO:  eta: 0:06:31  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09189  time: 0.0395 s/iter  data_time: 0.0009 s/iter total_throughput: 101.35 samples/s lr: 8.00e-04  
[08/24 08:02:21] lb.utils.events INFO:  eta: 0:06:31  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08399  time: 0.0393 s/iter  data_time: 0.0009 s/iter total_throughput: 101.76 samples/s lr: 8.00e-04  
[08/24 08:02:22] lb.utils.events INFO:  eta: 0:06:30  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07929  time: 0.0393 s/iter  data_time: 0.0009 s/iter total_throughput: 101.78 samples/s lr: 8.00e-04  
[08/24 08:02:23] lb.utils.events INFO:  eta: 0:06:29  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06679  time: 0.0393 s/iter  data_time: 0.0009 s/iter total_throughput: 101.83 samples/s lr: 8.00e-04  
[08/24 08:02:23] lb.utils.events INFO:  eta: 0:06:28  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04903  time: 0.0393 s/iter  data_time: 0.0008 s/iter total_throughput: 101.81 samples/s lr: 8.00e-04  
[08/24 08:02:24] lb.utils.events INFO:  eta: 0:06:27  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03445  time: 0.0393 s/iter  data_time: 0.0008 s/iter total_throughput: 101.75 samples/s lr: 8.00e-04  
[08/24 08:02:25] lb.utils.events INFO:  eta: 0:06:27  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02114  time: 0.0395 s/iter  data_time: 0.0009 s/iter total_throughput: 101.38 samples/s lr: 8.00e-04  
[08/24 08:02:26] lb.utils.events INFO:  eta: 0:06:27  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01166  time: 0.0396 s/iter  data_time: 0.0010 s/iter total_throughput: 101.10 samples/s lr: 8.00e-04  
[08/24 08:02:27] lb.utils.events INFO:  eta: 0:06:28  iteration: 199/10000  consumed_samples: 800  total_loss: 0.006425  time: 0.0396 s/iter  data_time: 0.0009 s/iter total_throughput: 100.90 samples/s lr: 8.00e-04  
[08/24 08:02:27] lb.utils.events INFO:  eta: 0:06:29  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0008319  time: 0.0397 s/iter  data_time: 0.0009 s/iter total_throughput: 100.76 samples/s lr: 8.00e-04  
[08/24 08:02:28] lb.utils.events INFO:  eta: 0:06:30  iteration: 239/10000  consumed_samples: 960  total_loss: 1.763e-05  time: 0.0398 s/iter  data_time: 0.0009 s/iter total_throughput: 100.57 samples/s lr: 8.00e-04  
[08/24 08:02:29] lb.utils.events INFO:  eta: 0:06:30  iteration: 259/10000  consumed_samples: 1040  total_loss: 8.835e-06  time: 0.0398 s/iter  data_time: 0.0009 s/iter total_throughput: 100.44 samples/s lr: 8.00e-04  
[08/24 08:02:30] lb.utils.events INFO:  eta: 0:06:29  iteration: 279/10000  consumed_samples: 1120  total_loss: 6.303e-06  time: 0.0398 s/iter  data_time: 0.0009 s/iter total_throughput: 100.52 samples/s lr: 8.00e-04  
[08/24 08:02:31] lb.utils.events INFO:  eta: 0:06:28  iteration: 299/10000  consumed_samples: 1200  total_loss: 5.046e-06  time: 0.0398 s/iter  data_time: 0.0010 s/iter total_throughput: 100.62 samples/s lr: 8.00e-04  
[08/24 08:02:31] lb.utils.events INFO:  eta: 0:06:27  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.199e-06  time: 0.0397 s/iter  data_time: 0.0009 s/iter total_throughput: 100.65 samples/s lr: 8.00e-04  
[08/24 08:02:32] lb.utils.events INFO:  eta: 0:06:27  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.589e-06  time: 0.0398 s/iter  data_time: 0.0009 s/iter total_throughput: 100.50 samples/s lr: 8.00e-04  
[08/24 08:02:33] lb.utils.events INFO:  eta: 0:06:26  iteration: 359/10000  consumed_samples: 1440  total_loss: 3.128e-06  time: 0.0398 s/iter  data_time: 0.0009 s/iter total_throughput: 100.44 samples/s lr: 8.00e-04  
[08/24 08:02:34] lb.utils.events INFO:  eta: 0:06:25  iteration: 379/10000  consumed_samples: 1520  total_loss: 2.761e-06  time: 0.0398 s/iter  data_time: 0.0009 s/iter total_throughput: 100.39 samples/s lr: 8.00e-04  
[08/24 08:02:35] lb.utils.events INFO:  eta: 0:06:24  iteration: 399/10000  consumed_samples: 1600  total_loss: 2.446e-06  time: 0.0399 s/iter  data_time: 0.0008 s/iter total_throughput: 100.35 samples/s lr: 8.00e-04  
[08/24 08:02:35] lb.utils.events INFO:  eta: 0:06:24  iteration: 419/10000  consumed_samples: 1680  total_loss: 2.16e-06  time: 0.0399 s/iter  data_time: 0.0010 s/iter total_throughput: 100.29 samples/s lr: 8.00e-04  
[08/24 08:02:36] lb.utils.events INFO:  eta: 0:06:23  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.915e-06  time: 0.0399 s/iter  data_time: 0.0009 s/iter total_throughput: 100.25 samples/s lr: 8.00e-04  
[08/24 08:02:37] lb.utils.events INFO:  eta: 0:06:22  iteration: 459/10000  consumed_samples: 1840  total_loss: 1.696e-06  time: 0.0399 s/iter  data_time: 0.0010 s/iter total_throughput: 100.27 samples/s lr: 8.00e-04  
[08/24 08:02:38] lb.utils.events INFO:  eta: 0:06:21  iteration: 479/10000  consumed_samples: 1920  total_loss: 1.528e-06  time: 0.0399 s/iter  data_time: 0.0009 s/iter total_throughput: 100.32 samples/s lr: 8.00e-04  
[08/24 08:02:39] lb.utils.events INFO:  eta: 0:06:21  iteration: 499/10000  consumed_samples: 2000  total_loss: 1.385e-06  time: 0.0399 s/iter  data_time: 0.0009 s/iter total_throughput: 100.35 samples/s lr: 8.00e-04  
[08/24 08:02:39] lb.utils.events INFO:  eta: 0:06:20  iteration: 519/10000  consumed_samples: 2080  total_loss: 1.274e-06  time: 0.0399 s/iter  data_time: 0.0008 s/iter total_throughput: 100.22 samples/s lr: 8.00e-04  
[08/24 08:02:40] lb.utils.events INFO:  eta: 0:06:19  iteration: 539/10000  consumed_samples: 2160  total_loss: 1.173e-06  time: 0.0399 s/iter  data_time: 0.0007 s/iter total_throughput: 100.19 samples/s lr: 8.00e-04  
[08/24 08:02:59] libai INFO: Rank of current process: 0. World size: 1
[08/24 08:02:59] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:02:59] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 08:02:59] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:02:59] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:02:59] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.040 seconds
[08/24 08:02:59] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.041 seconds
[08/24 08:02:59] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:03:01] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:03:03] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 08:03:03] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/24 08:03:04] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:03:04] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:03:12] lb.utils.events INFO:  eta: 0:06:50  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1063  time: 0.0415 s/iter  data_time: 0.0009 s/iter total_throughput: 96.40 samples/s lr: 8.00e-04  
[08/24 08:03:13] lb.utils.events INFO:  eta: 0:06:43  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09177  time: 0.0407 s/iter  data_time: 0.0003 s/iter total_throughput: 98.26 samples/s lr: 8.00e-04  
[08/24 08:03:14] lb.utils.events INFO:  eta: 0:06:39  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08392  time: 0.0404 s/iter  data_time: 0.0003 s/iter total_throughput: 98.90 samples/s lr: 8.00e-04  
[08/24 08:03:15] lb.utils.events INFO:  eta: 0:06:42  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07929  time: 0.0407 s/iter  data_time: 0.0012 s/iter total_throughput: 98.19 samples/s lr: 8.00e-04  
[08/24 08:03:16] lb.utils.events INFO:  eta: 0:06:44  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06897  time: 0.0408 s/iter  data_time: 0.0009 s/iter total_throughput: 98.01 samples/s lr: 8.00e-04  
[08/24 08:03:17] lb.utils.events INFO:  eta: 0:06:43  iteration: 119/10000  consumed_samples: 480  total_loss: 0.0507  time: 0.0409 s/iter  data_time: 0.0009 s/iter total_throughput: 97.90 samples/s lr: 8.00e-04  
[08/24 08:03:17] lb.utils.events INFO:  eta: 0:06:43  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03656  time: 0.0409 s/iter  data_time: 0.0009 s/iter total_throughput: 97.83 samples/s lr: 8.00e-04  
[08/24 08:03:18] lb.utils.events INFO:  eta: 0:06:43  iteration: 159/10000  consumed_samples: 640  total_loss: 0.02525  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.67 samples/s lr: 8.00e-04  
[08/24 08:03:19] lb.utils.events INFO:  eta: 0:06:42  iteration: 179/10000  consumed_samples: 720  total_loss: 0.01379  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.56 samples/s lr: 8.00e-04  
[08/24 08:03:20] lb.utils.events INFO:  eta: 0:06:42  iteration: 199/10000  consumed_samples: 800  total_loss: 0.007671  time: 0.0410 s/iter  data_time: 0.0008 s/iter total_throughput: 97.56 samples/s lr: 8.00e-04  
[08/24 08:03:21] lb.utils.events INFO:  eta: 0:06:41  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0007061  time: 0.0410 s/iter  data_time: 0.0005 s/iter total_throughput: 97.65 samples/s lr: 8.00e-04  
[08/24 08:03:22] lb.utils.events INFO:  eta: 0:06:40  iteration: 239/10000  consumed_samples: 960  total_loss: 2.282e-05  time: 0.0410 s/iter  data_time: 0.0006 s/iter total_throughput: 97.67 samples/s lr: 8.00e-04  
[08/24 08:03:22] lb.utils.events INFO:  eta: 0:06:39  iteration: 259/10000  consumed_samples: 1040  total_loss: 8.582e-06  time: 0.0410 s/iter  data_time: 0.0008 s/iter total_throughput: 97.67 samples/s lr: 8.00e-04  
[08/24 08:03:23] lb.utils.events INFO:  eta: 0:06:38  iteration: 279/10000  consumed_samples: 1120  total_loss: 6.268e-06  time: 0.0410 s/iter  data_time: 0.0008 s/iter total_throughput: 97.66 samples/s lr: 8.00e-04  
[08/24 08:03:24] lb.utils.events INFO:  eta: 0:06:37  iteration: 299/10000  consumed_samples: 1200  total_loss: 4.981e-06  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.59 samples/s lr: 8.00e-04  
[08/24 08:03:25] lb.utils.events INFO:  eta: 0:06:37  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.114e-06  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.56 samples/s lr: 8.00e-04  
[08/24 08:03:26] lb.utils.events INFO:  eta: 0:06:36  iteration: 339/10000  consumed_samples: 1360  total_loss: 3.423e-06  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.52 samples/s lr: 8.00e-04  
[08/24 08:03:26] lb.utils.events INFO:  eta: 0:06:35  iteration: 359/10000  consumed_samples: 1440  total_loss: 2.876e-06  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.47 samples/s lr: 8.00e-04  
[08/24 08:03:27] lb.utils.events INFO:  eta: 0:06:34  iteration: 379/10000  consumed_samples: 1520  total_loss: 2.35e-06  time: 0.0410 s/iter  data_time: 0.0008 s/iter total_throughput: 97.47 samples/s lr: 8.00e-04  
[08/24 08:03:28] lb.utils.events INFO:  eta: 0:06:33  iteration: 399/10000  consumed_samples: 1600  total_loss: 1.855e-06  time: 0.0410 s/iter  data_time: 0.0010 s/iter total_throughput: 97.45 samples/s lr: 8.00e-04  
[08/24 08:03:29] lb.utils.events INFO:  eta: 0:06:33  iteration: 419/10000  consumed_samples: 1680  total_loss: 1.437e-06  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.43 samples/s lr: 8.00e-04  
[08/24 08:03:30] lb.utils.events INFO:  eta: 0:06:32  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.135e-06  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.44 samples/s lr: 8.00e-04  
[08/24 08:03:31] lb.utils.events INFO:  eta: 0:06:31  iteration: 459/10000  consumed_samples: 1840  total_loss: 9.275e-07  time: 0.0410 s/iter  data_time: 0.0009 s/iter total_throughput: 97.45 samples/s lr: 8.00e-04  
[08/24 08:03:31] lb.utils.events INFO:  eta: 0:06:30  iteration: 479/10000  consumed_samples: 1920  total_loss: 7.877e-07  time: 0.0411 s/iter  data_time: 0.0010 s/iter total_throughput: 97.41 samples/s lr: 8.00e-04  
[08/24 08:03:32] lb.utils.events INFO:  eta: 0:06:29  iteration: 499/10000  consumed_samples: 2000  total_loss: 6.843e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.41 samples/s lr: 8.00e-04  
[08/24 08:03:33] lb.utils.events INFO:  eta: 0:06:28  iteration: 519/10000  consumed_samples: 2080  total_loss: 5.856e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.42 samples/s lr: 8.00e-04  
[08/24 08:03:34] lb.utils.events INFO:  eta: 0:06:27  iteration: 539/10000  consumed_samples: 2160  total_loss: 5.16e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.41 samples/s lr: 8.00e-04  
[08/24 08:03:35] lb.utils.events INFO:  eta: 0:06:27  iteration: 559/10000  consumed_samples: 2240  total_loss: 4.536e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.41 samples/s lr: 8.00e-04  
[08/24 08:03:36] lb.utils.events INFO:  eta: 0:06:26  iteration: 579/10000  consumed_samples: 2320  total_loss: 4.103e-07  time: 0.0411 s/iter  data_time: 0.0010 s/iter total_throughput: 97.38 samples/s lr: 8.00e-04  
[08/24 08:03:36] lb.utils.events INFO:  eta: 0:06:25  iteration: 599/10000  consumed_samples: 2400  total_loss: 3.719e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.36 samples/s lr: 8.00e-04  
[08/24 08:03:37] lb.utils.events INFO:  eta: 0:06:24  iteration: 619/10000  consumed_samples: 2480  total_loss: 3.383e-07  time: 0.0411 s/iter  data_time: 0.0005 s/iter total_throughput: 97.34 samples/s lr: 8.00e-04  
[08/24 08:03:38] lb.utils.events INFO:  eta: 0:06:24  iteration: 639/10000  consumed_samples: 2560  total_loss: 3.123e-07  time: 0.0411 s/iter  data_time: 0.0003 s/iter total_throughput: 97.33 samples/s lr: 8.00e-04  
[08/24 08:03:39] lb.utils.events INFO:  eta: 0:06:23  iteration: 659/10000  consumed_samples: 2640  total_loss: 2.844e-07  time: 0.0411 s/iter  data_time: 0.0008 s/iter total_throughput: 97.33 samples/s lr: 8.00e-04  
[08/24 08:03:40] lb.utils.events INFO:  eta: 0:06:22  iteration: 679/10000  consumed_samples: 2720  total_loss: 2.638e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.31 samples/s lr: 8.00e-04  
[08/24 08:03:41] lb.utils.events INFO:  eta: 0:06:21  iteration: 699/10000  consumed_samples: 2800  total_loss: 2.478e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.31 samples/s lr: 8.00e-04  
[08/24 08:03:41] lb.utils.events INFO:  eta: 0:06:20  iteration: 719/10000  consumed_samples: 2880  total_loss: 2.273e-07  time: 0.0411 s/iter  data_time: 0.0009 s/iter total_throughput: 97.29 samples/s lr: 8.00e-04  
[08/24 08:09:53] libai INFO: Rank of current process: 0. World size: 1
[08/24 08:09:53] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:09:53] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 08:09:53] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:09:53] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:09:53] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.045 seconds
[08/24 08:09:53] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.046 seconds
[08/24 08:09:53] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:09:55] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:09:57] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/24 08:09:58] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:09:58] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:10:07] lb.utils.events INFO:  eta: 0:06:35  iteration: 19/10000  consumed_samples: 80  total_loss: 4.791  time: 0.0407 s/iter  data_time: 0.0005 s/iter total_throughput: 98.37 samples/s lr: 8.00e-04  
[08/24 08:10:08] lb.utils.events INFO:  eta: 0:06:43  iteration: 39/10000  consumed_samples: 160  total_loss: 3.384  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.55 samples/s lr: 8.00e-04  
[08/24 08:10:08] lb.utils.events INFO:  eta: 0:06:42  iteration: 59/10000  consumed_samples: 240  total_loss: 2.832  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.50 samples/s lr: 8.00e-04  
[08/24 08:10:09] lb.utils.events INFO:  eta: 0:06:41  iteration: 79/10000  consumed_samples: 320  total_loss: 2.489  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.61 samples/s lr: 8.00e-04  
[08/24 08:10:10] lb.utils.events INFO:  eta: 0:06:41  iteration: 99/10000  consumed_samples: 400  total_loss: 2.254  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.49 samples/s lr: 8.00e-04  
[08/24 08:10:11] lb.utils.events INFO:  eta: 0:06:40  iteration: 119/10000  consumed_samples: 480  total_loss: 2.058  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.33 samples/s lr: 8.00e-04  
[08/24 08:10:12] lb.utils.events INFO:  eta: 0:06:40  iteration: 139/10000  consumed_samples: 560  total_loss: 1.946  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.24 samples/s lr: 8.00e-04  
[08/24 08:10:13] lb.utils.events INFO:  eta: 0:06:39  iteration: 159/10000  consumed_samples: 640  total_loss: 1.656  time: 0.0406 s/iter  data_time: 0.0007 s/iter total_throughput: 98.58 samples/s lr: 8.00e-04  
[08/24 08:10:13] lb.utils.events INFO:  eta: 0:06:38  iteration: 179/10000  consumed_samples: 720  total_loss: 1.466  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.39 samples/s lr: 8.00e-04  
[08/24 08:10:14] lb.utils.events INFO:  eta: 0:06:37  iteration: 199/10000  consumed_samples: 800  total_loss: 1.216  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.36 samples/s lr: 8.00e-04  
[08/24 08:10:15] lb.utils.events INFO:  eta: 0:06:37  iteration: 219/10000  consumed_samples: 880  total_loss: 0.8736  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.34 samples/s lr: 8.00e-04  
[08/24 08:10:16] lb.utils.events INFO:  eta: 0:06:36  iteration: 239/10000  consumed_samples: 960  total_loss: 0.6076  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.30 samples/s lr: 8.00e-04  
[08/24 08:10:17] lb.utils.events INFO:  eta: 0:06:35  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.3467  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.25 samples/s lr: 8.00e-04  
[08/24 08:10:17] lb.utils.events INFO:  eta: 0:06:35  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.09571  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.24 samples/s lr: 8.00e-04  
[08/24 08:10:18] lb.utils.events INFO:  eta: 0:06:34  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.02567  time: 0.0407 s/iter  data_time: 0.0009 s/iter total_throughput: 98.23 samples/s lr: 8.00e-04  
[08/24 08:10:19] lb.utils.events INFO:  eta: 0:06:33  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.007853  time: 0.0407 s/iter  data_time: 0.0004 s/iter total_throughput: 98.34 samples/s lr: 8.00e-04  
[08/24 08:10:20] lb.utils.events INFO:  eta: 0:06:32  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.001615  time: 0.0406 s/iter  data_time: 0.0003 s/iter total_throughput: 98.46 samples/s lr: 8.00e-04  
[08/24 08:10:21] lb.utils.events INFO:  eta: 0:06:31  iteration: 359/10000  consumed_samples: 1440  total_loss: 0.0003595  time: 0.0406 s/iter  data_time: 0.0003 s/iter total_throughput: 98.53 samples/s lr: 8.00e-04  
[08/24 08:10:21] lb.utils.events INFO:  eta: 0:06:30  iteration: 379/10000  consumed_samples: 1520  total_loss: 0.0001767  time: 0.0406 s/iter  data_time: 0.0003 s/iter total_throughput: 98.61 samples/s lr: 8.00e-04  
[08/24 08:10:22] lb.utils.events INFO:  eta: 0:06:29  iteration: 399/10000  consumed_samples: 1600  total_loss: 0.0001117  time: 0.0405 s/iter  data_time: 0.0003 s/iter total_throughput: 98.66 samples/s lr: 8.00e-04  
[08/24 08:10:23] lb.utils.events INFO:  eta: 0:06:28  iteration: 419/10000  consumed_samples: 1680  total_loss: 7.861e-05  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.63 samples/s lr: 8.00e-04  
[08/24 08:10:24] lb.utils.events INFO:  eta: 0:06:27  iteration: 439/10000  consumed_samples: 1760  total_loss: 5.895e-05  time: 0.0405 s/iter  data_time: 0.0004 s/iter total_throughput: 98.67 samples/s lr: 8.00e-04  
[08/24 08:10:25] lb.utils.events INFO:  eta: 0:06:26  iteration: 459/10000  consumed_samples: 1840  total_loss: 4.61e-05  time: 0.0405 s/iter  data_time: 0.0003 s/iter total_throughput: 98.73 samples/s lr: 8.00e-04  
[08/24 08:10:26] lb.utils.events INFO:  eta: 0:06:25  iteration: 479/10000  consumed_samples: 1920  total_loss: 3.733e-05  time: 0.0405 s/iter  data_time: 0.0003 s/iter total_throughput: 98.79 samples/s lr: 8.00e-04  
[08/24 08:10:26] lb.utils.events INFO:  eta: 0:06:25  iteration: 499/10000  consumed_samples: 2000  total_loss: 3.097e-05  time: 0.0405 s/iter  data_time: 0.0008 s/iter total_throughput: 98.75 samples/s lr: 8.00e-04  
[08/24 08:10:27] lb.utils.events INFO:  eta: 0:06:24  iteration: 519/10000  consumed_samples: 2080  total_loss: 2.643e-05  time: 0.0405 s/iter  data_time: 0.0009 s/iter total_throughput: 98.67 samples/s lr: 8.00e-04  
[08/24 08:10:28] lb.utils.events INFO:  eta: 0:06:24  iteration: 539/10000  consumed_samples: 2160  total_loss: 2.281e-05  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.61 samples/s lr: 8.00e-04  
[08/24 08:10:29] lb.utils.events INFO:  eta: 0:06:23  iteration: 559/10000  consumed_samples: 2240  total_loss: 1.974e-05  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.58 samples/s lr: 8.00e-04  
[08/24 08:10:30] lb.utils.events INFO:  eta: 0:06:22  iteration: 579/10000  consumed_samples: 2320  total_loss: 1.744e-05  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.55 samples/s lr: 8.00e-04  
[08/24 08:10:30] lb.utils.events INFO:  eta: 0:06:21  iteration: 599/10000  consumed_samples: 2400  total_loss: 1.544e-05  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.53 samples/s lr: 8.00e-04  
[08/24 08:10:31] lb.utils.events INFO:  eta: 0:06:21  iteration: 619/10000  consumed_samples: 2480  total_loss: 1.38e-05  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.50 samples/s lr: 8.00e-04  
[08/24 08:10:32] lb.utils.events INFO:  eta: 0:06:20  iteration: 639/10000  consumed_samples: 2560  total_loss: 1.25e-05  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.47 samples/s lr: 8.00e-04  
[08/24 08:10:33] lb.utils.events INFO:  eta: 0:06:19  iteration: 659/10000  consumed_samples: 2640  total_loss: 1.145e-05  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.46 samples/s lr: 8.00e-04  
[08/24 08:10:34] lb.utils.events INFO:  eta: 0:06:18  iteration: 679/10000  consumed_samples: 2720  total_loss: 1.042e-05  time: 0.0406 s/iter  data_time: 0.0009 s/iter total_throughput: 98.45 samples/s lr: 8.00e-04  
[08/24 08:10:35] lb.utils.events INFO:  eta: 0:06:18  iteration: 699/10000  consumed_samples: 2800  total_loss: 9.556e-06  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.44 samples/s lr: 8.00e-04  
[08/24 08:10:35] lb.utils.events INFO:  eta: 0:06:17  iteration: 719/10000  consumed_samples: 2880  total_loss: 8.787e-06  time: 0.0406 s/iter  data_time: 0.0008 s/iter total_throughput: 98.42 samples/s lr: 8.00e-04  
[08/24 08:12:40] libai INFO: Rank of current process: 0. World size: 1
[08/24 08:12:40] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:12:40] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 08:12:40] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:12:40] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:12:40] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.047 seconds
[08/24 08:12:40] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/24 08:12:40] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:12:42] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:12:46] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 08:12:46] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:12:46] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:12:56] lb.utils.events INFO:  eta: 0:12:56  iteration: 19/10000  consumed_samples: 80  total_loss: 9.233  time: 0.0782 s/iter  data_time: 0.0009 s/iter total_throughput: 51.15 samples/s lr: 8.00e-04  
[08/24 08:12:58] lb.utils.events INFO:  eta: 0:12:55  iteration: 39/10000  consumed_samples: 160  total_loss: 4.677  time: 0.0780 s/iter  data_time: 0.0008 s/iter total_throughput: 51.27 samples/s lr: 8.00e-04  
[08/24 08:12:59] lb.utils.events INFO:  eta: 0:12:53  iteration: 59/10000  consumed_samples: 240  total_loss: 3.778  time: 0.0780 s/iter  data_time: 0.0009 s/iter total_throughput: 51.29 samples/s lr: 8.00e-04  
[08/24 08:13:01] lb.utils.events INFO:  eta: 0:12:52  iteration: 79/10000  consumed_samples: 320  total_loss: 3.051  time: 0.0780 s/iter  data_time: 0.0008 s/iter total_throughput: 51.27 samples/s lr: 8.00e-04  
[08/24 08:13:02] lb.utils.events INFO:  eta: 0:12:51  iteration: 99/10000  consumed_samples: 400  total_loss: 2.812  time: 0.0781 s/iter  data_time: 0.0009 s/iter total_throughput: 51.22 samples/s lr: 8.00e-04  
[08/24 08:13:04] lb.utils.events INFO:  eta: 0:12:51  iteration: 119/10000  consumed_samples: 480  total_loss: 2.663  time: 0.0781 s/iter  data_time: 0.0008 s/iter total_throughput: 51.19 samples/s lr: 8.00e-04  
[08/24 08:13:05] lb.utils.events INFO:  eta: 0:12:50  iteration: 139/10000  consumed_samples: 560  total_loss: 2.512  time: 0.0782 s/iter  data_time: 0.0008 s/iter total_throughput: 51.15 samples/s lr: 8.00e-04  
[08/24 08:13:07] lb.utils.events INFO:  eta: 0:12:49  iteration: 159/10000  consumed_samples: 640  total_loss: 2.291  time: 0.0783 s/iter  data_time: 0.0008 s/iter total_throughput: 51.11 samples/s lr: 8.00e-04  
[08/24 08:13:09] lb.utils.events INFO:  eta: 0:12:48  iteration: 179/10000  consumed_samples: 720  total_loss: 2.004  time: 0.0783 s/iter  data_time: 0.0008 s/iter total_throughput: 51.08 samples/s lr: 8.00e-04  
[08/24 08:13:10] lb.utils.events INFO:  eta: 0:12:47  iteration: 199/10000  consumed_samples: 800  total_loss: 2.138  time: 0.0783 s/iter  data_time: 0.0008 s/iter total_throughput: 51.05 samples/s lr: 8.00e-04  
[08/24 08:13:12] lb.utils.events INFO:  eta: 0:12:46  iteration: 219/10000  consumed_samples: 880  total_loss: 1.798  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 51.04 samples/s lr: 8.00e-04  
[08/24 08:13:13] lb.utils.events INFO:  eta: 0:12:44  iteration: 239/10000  consumed_samples: 960  total_loss: 1.39  time: 0.0784 s/iter  data_time: 0.0008 s/iter total_throughput: 51.04 samples/s lr: 8.00e-04  
[08/24 08:13:15] lb.utils.events INFO:  eta: 0:12:43  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.9657  time: 0.0784 s/iter  data_time: 0.0008 s/iter total_throughput: 51.04 samples/s lr: 8.00e-04  
[08/24 08:13:16] lb.utils.events INFO:  eta: 0:12:41  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.7091  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 51.03 samples/s lr: 8.00e-04  
[08/24 08:13:18] lb.utils.events INFO:  eta: 0:12:40  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.4152  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 51.01 samples/s lr: 8.00e-04  
[08/24 08:13:20] lb.utils.events INFO:  eta: 0:12:39  iteration: 319/10000  consumed_samples: 1280  total_loss: 0.2178  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 51.00 samples/s lr: 8.00e-04  
[08/24 08:13:21] lb.utils.events INFO:  eta: 0:12:37  iteration: 339/10000  consumed_samples: 1360  total_loss: 0.1204  time: 0.0784 s/iter  data_time: 0.0009 s/iter total_throughput: 50.99 samples/s lr: 8.00e-04  
[08/24 08:13:27] libai INFO: Rank of current process: 0. World size: 2
[08/24 08:13:27] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:13:27] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 08:13:27] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:13:27] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:13:27] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.055 seconds
[08/24 08:13:27] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.057 seconds
[08/24 08:13:27] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:13:29] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:13:33] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 08:13:34] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:13:34] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:13:45] lb.utils.events INFO:  eta: 0:15:26  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.0931 s/iter  data_time: 0.0025 s/iter total_throughput: 85.89 samples/s lr: 8.00e-04  
[08/24 08:13:46] lb.utils.events INFO:  eta: 0:15:22  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.0926 s/iter  data_time: 0.0025 s/iter total_throughput: 86.35 samples/s lr: 8.00e-04  
[08/24 08:13:48] lb.utils.events INFO:  eta: 0:15:20  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.0926 s/iter  data_time: 0.0025 s/iter total_throughput: 86.41 samples/s lr: 8.00e-04  
[08/24 08:13:50] lb.utils.events INFO:  eta: 0:15:18  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0025 s/iter total_throughput: 86.47 samples/s lr: 8.00e-04  
[08/24 08:13:52] lb.utils.events INFO:  eta: 0:15:16  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0023 s/iter total_throughput: 86.50 samples/s lr: 8.00e-04  
[08/24 08:13:54] lb.utils.events INFO:  eta: 0:15:14  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0021 s/iter total_throughput: 86.52 samples/s lr: 8.00e-04  
[08/24 08:13:56] lb.utils.events INFO:  eta: 0:15:12  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0023 s/iter total_throughput: 86.52 samples/s lr: 8.00e-04  
[08/24 08:13:58] lb.utils.events INFO:  eta: 0:15:10  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0023 s/iter total_throughput: 86.51 samples/s lr: 8.00e-04  
[08/24 08:13:59] lb.utils.events INFO:  eta: 0:15:08  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0023 s/iter total_throughput: 86.52 samples/s lr: 8.00e-04  
[08/24 08:14:01] lb.utils.events INFO:  eta: 0:15:07  iteration: 199/10000  consumed_samples: 1600  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0024 s/iter total_throughput: 86.52 samples/s lr: 8.00e-04  
[08/24 08:14:03] lb.utils.events INFO:  eta: 0:15:05  iteration: 219/10000  consumed_samples: 1760  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0025 s/iter total_throughput: 86.51 samples/s lr: 8.00e-04  
[08/24 08:14:05] lb.utils.events INFO:  eta: 0:15:03  iteration: 239/10000  consumed_samples: 1920  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0024 s/iter total_throughput: 86.49 samples/s lr: 8.00e-04  
[08/24 08:14:07] lb.utils.events INFO:  eta: 0:15:01  iteration: 259/10000  consumed_samples: 2080  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0025 s/iter total_throughput: 86.48 samples/s lr: 8.00e-04  
[08/24 08:14:09] lb.utils.events INFO:  eta: 0:14:59  iteration: 279/10000  consumed_samples: 2240  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0022 s/iter total_throughput: 86.48 samples/s lr: 8.00e-04  
[08/24 08:14:11] lb.utils.events INFO:  eta: 0:14:58  iteration: 299/10000  consumed_samples: 2400  total_loss: nan  time: 0.0925 s/iter  data_time: 0.0024 s/iter total_throughput: 86.48 samples/s lr: 8.00e-04  
[08/24 08:14:40] libai INFO: Rank of current process: 0. World size: 2
[08/24 08:14:40] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:14:40] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m[38;5;15m [39m

[08/24 08:14:41] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:14:41] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:14:41] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.052 seconds
[08/24 08:14:41] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 08:14:41] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:14:42] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:14:46] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 08:14:47] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:14:47] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:14:59] lb.utils.events INFO:  eta: 0:15:26  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.0932 s/iter  data_time: 0.0024 s/iter total_throughput: 85.87 samples/s lr: 8.00e-04  
[08/24 08:15:01] lb.utils.events INFO:  eta: 0:15:24  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.0929 s/iter  data_time: 0.0022 s/iter total_throughput: 86.11 samples/s lr: 8.00e-04  
[08/24 08:15:02] lb.utils.events INFO:  eta: 0:15:23  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.0930 s/iter  data_time: 0.0025 s/iter total_throughput: 86.05 samples/s lr: 8.00e-04  
[08/24 08:15:04] lb.utils.events INFO:  eta: 0:15:21  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.0929 s/iter  data_time: 0.0025 s/iter total_throughput: 86.10 samples/s lr: 8.00e-04  
[08/24 08:15:06] lb.utils.events INFO:  eta: 0:15:19  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.0928 s/iter  data_time: 0.0022 s/iter total_throughput: 86.18 samples/s lr: 8.00e-04  
[08/24 08:15:08] lb.utils.events INFO:  eta: 0:15:16  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.0928 s/iter  data_time: 0.0021 s/iter total_throughput: 86.22 samples/s lr: 8.00e-04  
[08/24 08:15:10] lb.utils.events INFO:  eta: 0:15:14  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0020 s/iter total_throughput: 86.26 samples/s lr: 8.00e-04  
[08/24 08:15:12] lb.utils.events INFO:  eta: 0:15:12  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0021 s/iter total_throughput: 86.29 samples/s lr: 8.00e-04  
[08/24 08:15:14] lb.utils.events INFO:  eta: 0:15:10  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0022 s/iter total_throughput: 86.31 samples/s lr: 8.00e-04  
[08/24 08:15:15] lb.utils.events INFO:  eta: 0:15:07  iteration: 199/10000  consumed_samples: 1600  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0025 s/iter total_throughput: 86.33 samples/s lr: 8.00e-04  
[08/24 08:15:17] lb.utils.events INFO:  eta: 0:15:06  iteration: 219/10000  consumed_samples: 1760  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0026 s/iter total_throughput: 86.34 samples/s lr: 8.00e-04  
[08/24 08:15:19] lb.utils.events INFO:  eta: 0:15:04  iteration: 239/10000  consumed_samples: 1920  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0025 s/iter total_throughput: 86.34 samples/s lr: 8.00e-04  
[08/24 08:15:21] lb.utils.events INFO:  eta: 0:15:02  iteration: 259/10000  consumed_samples: 2080  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0025 s/iter total_throughput: 86.34 samples/s lr: 8.00e-04  
[08/24 08:15:23] lb.utils.events INFO:  eta: 0:15:01  iteration: 279/10000  consumed_samples: 2240  total_loss: nan  time: 0.0927 s/iter  data_time: 0.0025 s/iter total_throughput: 86.34 samples/s lr: 8.00e-04  
[08/24 08:15:42] libai INFO: Rank of current process: 0. World size: 2
[08/24 08:15:42] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:15:42] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 08:15:42] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:15:42] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:15:42] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.053 seconds
[08/24 08:15:42] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.054 seconds
[08/24 08:15:42] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:15:44] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:15:47] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 08:15:48] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:15:48] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:16:01] lb.utils.events INFO:  eta: 0:19:08  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.1155 s/iter  data_time: 0.0023 s/iter total_throughput: 69.28 samples/s lr: 8.00e-04  
[08/24 08:16:04] lb.utils.events INFO:  eta: 0:19:04  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.1149 s/iter  data_time: 0.0025 s/iter total_throughput: 69.60 samples/s lr: 8.00e-04  
[08/24 08:16:06] lb.utils.events INFO:  eta: 0:19:01  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.1148 s/iter  data_time: 0.0024 s/iter total_throughput: 69.69 samples/s lr: 8.00e-04  
[08/24 08:16:08] lb.utils.events INFO:  eta: 0:18:58  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.1148 s/iter  data_time: 0.0022 s/iter total_throughput: 69.71 samples/s lr: 8.00e-04  
[08/24 08:16:10] lb.utils.events INFO:  eta: 0:18:55  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.1147 s/iter  data_time: 0.0025 s/iter total_throughput: 69.73 samples/s lr: 8.00e-04  
[08/24 08:16:13] lb.utils.events INFO:  eta: 0:18:53  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.1147 s/iter  data_time: 0.0025 s/iter total_throughput: 69.73 samples/s lr: 8.00e-04  
[08/24 08:16:15] lb.utils.events INFO:  eta: 0:18:51  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.1147 s/iter  data_time: 0.0021 s/iter total_throughput: 69.72 samples/s lr: 8.00e-04  
[08/24 08:16:17] lb.utils.events INFO:  eta: 0:18:49  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.1147 s/iter  data_time: 0.0023 s/iter total_throughput: 69.72 samples/s lr: 8.00e-04  
[08/24 08:16:20] lb.utils.events INFO:  eta: 0:18:47  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.1148 s/iter  data_time: 0.0025 s/iter total_throughput: 69.71 samples/s lr: 8.00e-04  
[08/24 08:16:53] libai INFO: Rank of current process: 0. World size: 1
[08/24 08:16:53] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:16:53] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 08:16:53] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:16:53] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:16:53] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.040 seconds
[08/24 08:16:53] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.041 seconds
[08/24 08:16:53] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:16:55] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:16:58] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 08:16:59] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:16:59] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:17:11] lb.utils.events INFO:  eta: 0:16:52  iteration: 19/10000  consumed_samples: 80  total_loss: 12.46  time: 0.1018 s/iter  data_time: 0.0004 s/iter total_throughput: 39.30 samples/s lr: 8.00e-04  
[08/24 08:17:13] lb.utils.events INFO:  eta: 0:16:49  iteration: 39/10000  consumed_samples: 160  total_loss: 6.997  time: 0.1015 s/iter  data_time: 0.0004 s/iter total_throughput: 39.41 samples/s lr: 8.00e-04  
[08/24 08:17:15] lb.utils.events INFO:  eta: 0:16:46  iteration: 59/10000  consumed_samples: 240  total_loss: 4.878  time: 0.1014 s/iter  data_time: 0.0004 s/iter total_throughput: 39.46 samples/s lr: 8.00e-04  
[08/24 08:17:17] lb.utils.events INFO:  eta: 0:16:44  iteration: 79/10000  consumed_samples: 320  total_loss: 3.473  time: 0.1013 s/iter  data_time: 0.0004 s/iter total_throughput: 39.48 samples/s lr: 8.00e-04  
[08/24 08:17:19] lb.utils.events INFO:  eta: 0:16:42  iteration: 99/10000  consumed_samples: 400  total_loss: 2.963  time: 0.1013 s/iter  data_time: 0.0004 s/iter total_throughput: 39.47 samples/s lr: 8.00e-04  
[08/24 08:17:21] lb.utils.events INFO:  eta: 0:16:41  iteration: 119/10000  consumed_samples: 480  total_loss: 2.791  time: 0.1014 s/iter  data_time: 0.0004 s/iter total_throughput: 39.44 samples/s lr: 8.00e-04  
[08/24 08:17:23] lb.utils.events INFO:  eta: 0:16:40  iteration: 139/10000  consumed_samples: 560  total_loss: 2.639  time: 0.1015 s/iter  data_time: 0.0004 s/iter total_throughput: 39.42 samples/s lr: 8.00e-04  
[08/24 08:17:25] lb.utils.events INFO:  eta: 0:16:39  iteration: 159/10000  consumed_samples: 640  total_loss: 2.471  time: 0.1015 s/iter  data_time: 0.0004 s/iter total_throughput: 39.39 samples/s lr: 8.00e-04  
[08/24 08:17:27] lb.utils.events INFO:  eta: 0:16:37  iteration: 179/10000  consumed_samples: 720  total_loss: 2.236  time: 0.1016 s/iter  data_time: 0.0004 s/iter total_throughput: 39.37 samples/s lr: 8.00e-04  
[08/24 08:17:29] lb.utils.events INFO:  eta: 0:16:36  iteration: 199/10000  consumed_samples: 800  total_loss: 1.967  time: 0.1017 s/iter  data_time: 0.0004 s/iter total_throughput: 39.34 samples/s lr: 8.00e-04  
[08/24 08:17:40] libai INFO: Rank of current process: 0. World size: 2
[08/24 08:17:40] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/24 08:17:40] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mFalse[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m1024[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/24 08:17:40] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/24 08:17:40] lb.engine.default INFO: > compiling dataset index builder ...
[08/24 08:17:40] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.054 seconds
[08/24 08:17:40] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.056 seconds
[08/24 08:17:40] lb.engine.default INFO: Prepare training, validating, testing set
[08/24 08:17:42] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/24 08:17:46] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=1024)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (output): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=1024, out_features=4096, bias=False, parallel=col)
        (receptance): Linear1D(in_features=1024, out_features=1024, bias=False, parallel=col)
        (value): Linear1D(in_features=4096, out_features=1024, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=1024, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=1024, out_features=256, bias=False, parallel=col)
)
[08/24 08:17:47] lb.engine.trainer INFO: Starting training from iteration 0
[08/24 08:17:47] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/24 08:18:00] lb.utils.events INFO:  eta: 0:19:04  iteration: 19/10000  consumed_samples: 160  total_loss: nan  time: 0.1149 s/iter  data_time: 0.0025 s/iter total_throughput: 69.62 samples/s lr: 8.00e-04  
[08/24 08:18:02] lb.utils.events INFO:  eta: 0:19:02  iteration: 39/10000  consumed_samples: 320  total_loss: nan  time: 0.1147 s/iter  data_time: 0.0026 s/iter total_throughput: 69.73 samples/s lr: 8.00e-04  
[08/24 08:18:04] lb.utils.events INFO:  eta: 0:19:00  iteration: 59/10000  consumed_samples: 480  total_loss: nan  time: 0.1147 s/iter  data_time: 0.0023 s/iter total_throughput: 69.75 samples/s lr: 8.00e-04  
[08/24 08:18:06] lb.utils.events INFO:  eta: 0:18:59  iteration: 79/10000  consumed_samples: 640  total_loss: nan  time: 0.1148 s/iter  data_time: 0.0025 s/iter total_throughput: 69.70 samples/s lr: 8.00e-04  
[08/24 08:18:09] lb.utils.events INFO:  eta: 0:18:57  iteration: 99/10000  consumed_samples: 800  total_loss: nan  time: 0.1148 s/iter  data_time: 0.0025 s/iter total_throughput: 69.68 samples/s lr: 8.00e-04  
[08/24 08:18:11] lb.utils.events INFO:  eta: 0:18:55  iteration: 119/10000  consumed_samples: 960  total_loss: nan  time: 0.1149 s/iter  data_time: 0.0023 s/iter total_throughput: 69.65 samples/s lr: 8.00e-04  
[08/24 08:18:13] lb.utils.events INFO:  eta: 0:18:53  iteration: 139/10000  consumed_samples: 1120  total_loss: nan  time: 0.1149 s/iter  data_time: 0.0024 s/iter total_throughput: 69.63 samples/s lr: 8.00e-04  
[08/24 08:18:16] lb.utils.events INFO:  eta: 0:18:51  iteration: 159/10000  consumed_samples: 1280  total_loss: nan  time: 0.1149 s/iter  data_time: 0.0025 s/iter total_throughput: 69.61 samples/s lr: 8.00e-04  
[08/24 08:18:18] lb.utils.events INFO:  eta: 0:18:49  iteration: 179/10000  consumed_samples: 1440  total_loss: nan  time: 0.1149 s/iter  data_time: 0.0024 s/iter total_throughput: 69.61 samples/s lr: 8.00e-04  
[08/24 08:18:20] lb.utils.events INFO:  eta: 0:18:47  iteration: 199/10000  consumed_samples: 1600  total_loss: nan  time: 0.1150 s/iter  data_time: 0.0024 s/iter total_throughput: 69.58 samples/s lr: 8.00e-04  
[08/24 08:18:23] lb.utils.events INFO:  eta: 0:18:45  iteration: 219/10000  consumed_samples: 1760  total_loss: nan  time: 0.1150 s/iter  data_time: 0.0024 s/iter total_throughput: 69.56 samples/s lr: 8.00e-04  
[08/24 08:18:25] lb.utils.events INFO:  eta: 0:18:43  iteration: 239/10000  consumed_samples: 1920  total_loss: nan  time: 0.1150 s/iter  data_time: 0.0026 s/iter total_throughput: 69.54 samples/s lr: 8.00e-04  
[08/24 08:18:27] lb.utils.events INFO:  eta: 0:18:41  iteration: 259/10000  consumed_samples: 2080  total_loss: nan  time: 0.1151 s/iter  data_time: 0.0025 s/iter total_throughput: 69.53 samples/s lr: 8.00e-04  
[08/24 08:18:30] lb.utils.events INFO:  eta: 0:18:39  iteration: 279/10000  consumed_samples: 2240  total_loss: nan  time: 0.1151 s/iter  data_time: 0.0025 s/iter total_throughput: 69.51 samples/s lr: 8.00e-04  
[08/24 08:18:32] lb.utils.events INFO:  eta: 0:18:37  iteration: 299/10000  consumed_samples: 2400  total_loss: nan  time: 0.1151 s/iter  data_time: 0.0024 s/iter total_throughput: 69.50 samples/s lr: 8.00e-04  
[08/24 08:18:34] lb.utils.events INFO:  eta: 0:18:34  iteration: 319/10000  consumed_samples: 2560  total_loss: nan  time: 0.1151 s/iter  data_time: 0.0026 s/iter total_throughput: 69.49 samples/s lr: 8.00e-04  
[08/24 08:18:36] lb.utils.events INFO:  eta: 0:18:32  iteration: 339/10000  consumed_samples: 2720  total_loss: nan  time: 0.1151 s/iter  data_time: 0.0023 s/iter total_throughput: 69.49 samples/s lr: 8.00e-04  
[08/25 03:59:40] libai INFO: Rank of current process: 0. World size: 1
[08/25 03:59:40] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/25 03:59:40] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyuRWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyuRWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyuRWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/25 03:59:40] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/25 03:59:40] lb.engine.default INFO: > compiling dataset index builder ...
[08/25 03:59:40] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.044 seconds
[08/25 03:59:40] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.045 seconds
[08/25 03:59:40] lb.engine.default INFO: Prepare training, validating, testing set
[08/25 04:01:42] libai INFO: Rank of current process: 0. World size: 1
[08/25 04:01:42] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/25 04:01:43] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mFalse[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/25 04:01:43] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/25 04:01:43] lb.engine.default INFO: > compiling dataset index builder ...
[08/25 04:01:43] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.046 seconds
[08/25 04:01:43] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/25 04:01:43] lb.engine.default INFO: Prepare training, validating, testing set
[08/25 04:01:44] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/25 04:01:46] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/25 04:01:47] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/25 04:01:47] lb.engine.trainer INFO: Starting training from iteration 0
[08/25 04:01:47] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/25 04:01:55] lb.utils.events INFO:  eta: 0:11:08  iteration: 19/10000  consumed_samples: 80  total_loss: 0.1064  time: 0.0677 s/iter  data_time: 0.0020 s/iter total_throughput: 59.06 samples/s lr: 8.00e-04  
[08/25 04:01:57] lb.utils.events INFO:  eta: 0:11:07  iteration: 39/10000  consumed_samples: 160  total_loss: 0.09191  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.34 samples/s lr: 8.00e-04  
[08/25 04:01:58] lb.utils.events INFO:  eta: 0:11:07  iteration: 59/10000  consumed_samples: 240  total_loss: 0.08399  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.34 samples/s lr: 8.00e-04  
[08/25 04:02:00] lb.utils.events INFO:  eta: 0:11:06  iteration: 79/10000  consumed_samples: 320  total_loss: 0.07929  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.31 samples/s lr: 8.00e-04  
[08/25 04:02:01] lb.utils.events INFO:  eta: 0:11:05  iteration: 99/10000  consumed_samples: 400  total_loss: 0.06304  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.33 samples/s lr: 8.00e-04  
[08/25 04:02:02] lb.utils.events INFO:  eta: 0:11:04  iteration: 119/10000  consumed_samples: 480  total_loss: 0.04849  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.31 samples/s lr: 8.00e-04  
[08/25 04:02:04] lb.utils.events INFO:  eta: 0:11:03  iteration: 139/10000  consumed_samples: 560  total_loss: 0.03284  time: 0.0674 s/iter  data_time: 0.0008 s/iter total_throughput: 59.32 samples/s lr: 8.00e-04  
[08/25 04:02:05] lb.utils.events INFO:  eta: 0:11:02  iteration: 159/10000  consumed_samples: 640  total_loss: 0.01566  time: 0.0674 s/iter  data_time: 0.0008 s/iter total_throughput: 59.32 samples/s lr: 8.00e-04  
[08/25 04:02:06] lb.utils.events INFO:  eta: 0:11:00  iteration: 179/10000  consumed_samples: 720  total_loss: 0.005798  time: 0.0674 s/iter  data_time: 0.0008 s/iter total_throughput: 59.33 samples/s lr: 8.00e-04  
[08/25 04:02:08] lb.utils.events INFO:  eta: 0:10:59  iteration: 199/10000  consumed_samples: 800  total_loss: 0.002584  time: 0.0674 s/iter  data_time: 0.0008 s/iter total_throughput: 59.32 samples/s lr: 8.00e-04  
[08/25 04:02:09] lb.utils.events INFO:  eta: 0:10:58  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0009584  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.30 samples/s lr: 8.00e-04  
[08/25 04:02:10] lb.utils.events INFO:  eta: 0:10:57  iteration: 239/10000  consumed_samples: 960  total_loss: 1.497e-05  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.27 samples/s lr: 8.00e-04  
[08/25 04:02:12] lb.utils.events INFO:  eta: 0:10:56  iteration: 259/10000  consumed_samples: 1040  total_loss: 8.097e-06  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.26 samples/s lr: 8.00e-04  
[08/25 04:02:13] lb.utils.events INFO:  eta: 0:10:55  iteration: 279/10000  consumed_samples: 1120  total_loss: 5.802e-06  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.24 samples/s lr: 8.00e-04  
[08/25 04:02:14] lb.utils.events INFO:  eta: 0:10:54  iteration: 299/10000  consumed_samples: 1200  total_loss: 4.509e-06  time: 0.0676 s/iter  data_time: 0.0008 s/iter total_throughput: 59.21 samples/s lr: 8.00e-04  
[08/25 04:02:16] lb.utils.events INFO:  eta: 0:10:52  iteration: 319/10000  consumed_samples: 1280  total_loss: 3.619e-06  time: 0.0675 s/iter  data_time: 0.0006 s/iter total_throughput: 59.24 samples/s lr: 8.00e-04  
[08/25 04:02:17] lb.utils.events INFO:  eta: 0:10:51  iteration: 339/10000  consumed_samples: 1360  total_loss: 2.974e-06  time: 0.0675 s/iter  data_time: 0.0008 s/iter total_throughput: 59.23 samples/s lr: 8.00e-04  
[08/25 04:02:19] lb.utils.events INFO:  eta: 0:10:50  iteration: 359/10000  consumed_samples: 1440  total_loss: 2.478e-06  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.22 samples/s lr: 8.00e-04  
[08/25 04:02:20] lb.utils.events INFO:  eta: 0:10:48  iteration: 379/10000  consumed_samples: 1520  total_loss: 2.083e-06  time: 0.0675 s/iter  data_time: 0.0004 s/iter total_throughput: 59.25 samples/s lr: 8.00e-04  
[08/25 04:02:21] lb.utils.events INFO:  eta: 0:10:47  iteration: 399/10000  consumed_samples: 1600  total_loss: 1.774e-06  time: 0.0675 s/iter  data_time: 0.0004 s/iter total_throughput: 59.29 samples/s lr: 8.00e-04  
[08/25 04:02:23] lb.utils.events INFO:  eta: 0:10:45  iteration: 419/10000  consumed_samples: 1680  total_loss: 1.529e-06  time: 0.0674 s/iter  data_time: 0.0004 s/iter total_throughput: 59.31 samples/s lr: 8.00e-04  
[08/25 04:02:24] lb.utils.events INFO:  eta: 0:10:44  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.332e-06  time: 0.0674 s/iter  data_time: 0.0006 s/iter total_throughput: 59.31 samples/s lr: 8.00e-04  
[08/25 04:02:25] lb.utils.events INFO:  eta: 0:10:42  iteration: 459/10000  consumed_samples: 1840  total_loss: 1.164e-06  time: 0.0674 s/iter  data_time: 0.0004 s/iter total_throughput: 59.33 samples/s lr: 8.00e-04  
[08/25 04:02:27] lb.utils.events INFO:  eta: 0:10:40  iteration: 479/10000  consumed_samples: 1920  total_loss: 1.019e-06  time: 0.0674 s/iter  data_time: 0.0004 s/iter total_throughput: 59.34 samples/s lr: 8.00e-04  
[08/25 04:02:28] lb.utils.events INFO:  eta: 0:10:39  iteration: 499/10000  consumed_samples: 2000  total_loss: 8.936e-07  time: 0.0674 s/iter  data_time: 0.0004 s/iter total_throughput: 59.35 samples/s lr: 8.00e-04  
[08/25 04:02:29] lb.utils.events INFO:  eta: 0:10:37  iteration: 519/10000  consumed_samples: 2080  total_loss: 7.837e-07  time: 0.0674 s/iter  data_time: 0.0004 s/iter total_throughput: 59.35 samples/s lr: 8.00e-04  
[08/25 04:02:31] lb.utils.events INFO:  eta: 0:10:36  iteration: 539/10000  consumed_samples: 2160  total_loss: 6.834e-07  time: 0.0674 s/iter  data_time: 0.0004 s/iter total_throughput: 59.36 samples/s lr: 8.00e-04  
[08/25 04:02:32] lb.utils.events INFO:  eta: 0:10:35  iteration: 559/10000  consumed_samples: 2240  total_loss: 5.955e-07  time: 0.0674 s/iter  data_time: 0.0005 s/iter total_throughput: 59.36 samples/s lr: 8.00e-04  
[08/25 04:02:33] lb.utils.events INFO:  eta: 0:10:33  iteration: 579/10000  consumed_samples: 2320  total_loss: 5.227e-07  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.32 samples/s lr: 8.00e-04  
[08/25 04:02:35] lb.utils.events INFO:  eta: 0:10:32  iteration: 599/10000  consumed_samples: 2400  total_loss: 4.566e-07  time: 0.0674 s/iter  data_time: 0.0009 s/iter total_throughput: 59.30 samples/s lr: 8.00e-04  
[08/25 04:02:36] lb.utils.events INFO:  eta: 0:10:31  iteration: 619/10000  consumed_samples: 2480  total_loss: 4.033e-07  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.29 samples/s lr: 8.00e-04  
[08/25 04:02:37] lb.utils.events INFO:  eta: 0:10:30  iteration: 639/10000  consumed_samples: 2560  total_loss: 3.604e-07  time: 0.0675 s/iter  data_time: 0.0009 s/iter total_throughput: 59.27 samples/s lr: 8.00e-04  
[08/25 04:02:39] lb.utils.events INFO:  eta: 0:10:29  iteration: 659/10000  consumed_samples: 2640  total_loss: 3.238e-07  time: 0.0675 s/iter  data_time: 0.0010 s/iter total_throughput: 59.25 samples/s lr: 8.00e-04  
[08/25 04:02:40] lb.utils.events INFO:  eta: 0:10:28  iteration: 679/10000  consumed_samples: 2720  total_loss: 2.942e-07  time: 0.0675 s/iter  data_time: 0.0010 s/iter total_throughput: 59.23 samples/s lr: 8.00e-04  
[08/25 04:02:42] lb.utils.events INFO:  eta: 0:10:27  iteration: 699/10000  consumed_samples: 2800  total_loss: 2.675e-07  time: 0.0676 s/iter  data_time: 0.0009 s/iter total_throughput: 59.21 samples/s lr: 8.00e-04  
[08/25 04:02:43] lb.utils.events INFO:  eta: 0:10:25  iteration: 719/10000  consumed_samples: 2880  total_loss: 2.456e-07  time: 0.0676 s/iter  data_time: 0.0005 s/iter total_throughput: 59.20 samples/s lr: 8.00e-04  
[08/25 04:02:44] lb.utils.events INFO:  eta: 0:10:24  iteration: 739/10000  consumed_samples: 2960  total_loss: 2.264e-07  time: 0.0676 s/iter  data_time: 0.0004 s/iter total_throughput: 59.21 samples/s lr: 8.00e-04  
[08/25 04:02:46] lb.utils.events INFO:  eta: 0:10:23  iteration: 759/10000  consumed_samples: 3040  total_loss: 2.096e-07  time: 0.0676 s/iter  data_time: 0.0009 s/iter total_throughput: 59.18 samples/s lr: 8.00e-04  
[08/25 04:02:47] lb.utils.events INFO:  eta: 0:10:22  iteration: 779/10000  consumed_samples: 3120  total_loss: 1.947e-07  time: 0.0676 s/iter  data_time: 0.0009 s/iter total_throughput: 59.16 samples/s lr: 8.00e-04  
[08/25 04:02:48] lb.utils.events INFO:  eta: 0:10:21  iteration: 799/10000  consumed_samples: 3200  total_loss: 1.828e-07  time: 0.0676 s/iter  data_time: 0.0008 s/iter total_throughput: 59.15 samples/s lr: 8.00e-04  
[08/25 04:02:50] lb.utils.events INFO:  eta: 0:10:19  iteration: 819/10000  consumed_samples: 3280  total_loss: 1.716e-07  time: 0.0676 s/iter  data_time: 0.0008 s/iter total_throughput: 59.13 samples/s lr: 8.00e-04  
[08/25 04:02:51] lb.utils.events INFO:  eta: 0:10:18  iteration: 839/10000  consumed_samples: 3360  total_loss: 1.623e-07  time: 0.0677 s/iter  data_time: 0.0009 s/iter total_throughput: 59.12 samples/s lr: 8.00e-04  
[08/25 04:02:52] lb.utils.events INFO:  eta: 0:10:17  iteration: 859/10000  consumed_samples: 3440  total_loss: 1.538e-07  time: 0.0677 s/iter  data_time: 0.0009 s/iter total_throughput: 59.10 samples/s lr: 8.00e-04  
[08/25 04:02:54] lb.utils.events INFO:  eta: 0:10:16  iteration: 879/10000  consumed_samples: 3520  total_loss: 1.443e-07  time: 0.0677 s/iter  data_time: 0.0004 s/iter total_throughput: 59.10 samples/s lr: 8.00e-04  
[08/25 04:02:55] lb.utils.events INFO:  eta: 0:10:14  iteration: 899/10000  consumed_samples: 3600  total_loss: 1.378e-07  time: 0.0677 s/iter  data_time: 0.0009 s/iter total_throughput: 59.08 samples/s lr: 8.00e-04  
[08/25 04:02:57] lb.utils.events INFO:  eta: 0:10:13  iteration: 919/10000  consumed_samples: 3680  total_loss: 1.307e-07  time: 0.0677 s/iter  data_time: 0.0008 s/iter total_throughput: 59.07 samples/s lr: 8.00e-04  
[08/25 04:02:58] lb.utils.events INFO:  eta: 0:10:12  iteration: 939/10000  consumed_samples: 3760  total_loss: 1.249e-07  time: 0.0677 s/iter  data_time: 0.0009 s/iter total_throughput: 59.05 samples/s lr: 8.00e-04  
[08/25 04:02:59] lb.utils.events INFO:  eta: 0:10:11  iteration: 959/10000  consumed_samples: 3840  total_loss: 1.198e-07  time: 0.0678 s/iter  data_time: 0.0009 s/iter total_throughput: 59.04 samples/s lr: 8.00e-04  
[08/25 04:03:01] lb.utils.events INFO:  eta: 0:10:10  iteration: 979/10000  consumed_samples: 3920  total_loss: 1.144e-07  time: 0.0678 s/iter  data_time: 0.0009 s/iter total_throughput: 59.03 samples/s lr: 8.00e-04  
[08/25 04:03:02] lb.utils.events INFO:  eta: 0:10:09  iteration: 999/10000  consumed_samples: 4000  total_loss: 1.09e-07  time: 0.0678 s/iter  data_time: 0.0009 s/iter total_throughput: 59.01 samples/s lr: 8.00e-04  
[08/25 04:03:03] lb.utils.events INFO:  eta: 0:10:08  iteration: 1019/10000  consumed_samples: 4080  total_loss: 1.041e-07  time: 0.0678 s/iter  data_time: 0.0010 s/iter total_throughput: 59.00 samples/s lr: 8.00e-04  
[08/25 04:03:05] lb.utils.events INFO:  eta: 0:10:07  iteration: 1039/10000  consumed_samples: 4160  total_loss: 9.994e-08  time: 0.0678 s/iter  data_time: 0.0006 s/iter total_throughput: 59.00 samples/s lr: 8.00e-04  
[08/25 04:03:06] lb.utils.events INFO:  eta: 0:10:06  iteration: 1059/10000  consumed_samples: 4240  total_loss: 9.565e-08  time: 0.0678 s/iter  data_time: 0.0010 s/iter total_throughput: 58.99 samples/s lr: 8.00e-04  
[08/25 04:03:08] lb.utils.events INFO:  eta: 0:10:05  iteration: 1079/10000  consumed_samples: 4320  total_loss: 9.224e-08  time: 0.0678 s/iter  data_time: 0.0013 s/iter total_throughput: 58.96 samples/s lr: 8.00e-04  
[08/25 04:03:09] lb.utils.events INFO:  eta: 0:10:04  iteration: 1099/10000  consumed_samples: 4400  total_loss: 8.874e-08  time: 0.0678 s/iter  data_time: 0.0008 s/iter total_throughput: 58.96 samples/s lr: 8.00e-04  
[08/25 04:03:10] lb.utils.events INFO:  eta: 0:10:03  iteration: 1119/10000  consumed_samples: 4480  total_loss: 8.465e-08  time: 0.0679 s/iter  data_time: 0.0009 s/iter total_throughput: 58.94 samples/s lr: 8.00e-04  
[08/25 04:03:12] lb.utils.events INFO:  eta: 0:10:02  iteration: 1139/10000  consumed_samples: 4560  total_loss: 8.119e-08  time: 0.0679 s/iter  data_time: 0.0008 s/iter total_throughput: 58.93 samples/s lr: 8.00e-04  
[08/25 04:03:13] lb.utils.events INFO:  eta: 0:10:01  iteration: 1159/10000  consumed_samples: 4640  total_loss: 7.787e-08  time: 0.0679 s/iter  data_time: 0.0009 s/iter total_throughput: 58.92 samples/s lr: 8.00e-04  
[08/25 04:03:15] lb.utils.events INFO:  eta: 0:10:00  iteration: 1179/10000  consumed_samples: 4720  total_loss: 7.568e-08  time: 0.0679 s/iter  data_time: 0.0009 s/iter total_throughput: 58.91 samples/s lr: 8.00e-04  
[08/25 04:03:16] lb.utils.events INFO:  eta: 0:09:59  iteration: 1199/10000  consumed_samples: 4800  total_loss: 7.384e-08  time: 0.0679 s/iter  data_time: 0.0008 s/iter total_throughput: 58.89 samples/s lr: 8.00e-04  
[08/25 04:03:17] lb.utils.events INFO:  eta: 0:09:58  iteration: 1219/10000  consumed_samples: 4880  total_loss: 7.087e-08  time: 0.0679 s/iter  data_time: 0.0009 s/iter total_throughput: 58.88 samples/s lr: 8.00e-04  
[08/25 04:03:19] lb.utils.events INFO:  eta: 0:09:57  iteration: 1239/10000  consumed_samples: 4960  total_loss: 6.92e-08  time: 0.0679 s/iter  data_time: 0.0009 s/iter total_throughput: 58.87 samples/s lr: 8.00e-04  
[08/25 04:03:20] lb.utils.events INFO:  eta: 0:09:56  iteration: 1259/10000  consumed_samples: 5040  total_loss: 6.744e-08  time: 0.0680 s/iter  data_time: 0.0009 s/iter total_throughput: 58.86 samples/s lr: 8.00e-04  
[08/25 04:03:21] lb.utils.events INFO:  eta: 0:09:54  iteration: 1279/10000  consumed_samples: 5120  total_loss: 6.502e-08  time: 0.0680 s/iter  data_time: 0.0008 s/iter total_throughput: 58.85 samples/s lr: 8.00e-04  
[08/25 04:03:23] lb.utils.events INFO:  eta: 0:09:53  iteration: 1299/10000  consumed_samples: 5200  total_loss: 6.271e-08  time: 0.0680 s/iter  data_time: 0.0009 s/iter total_throughput: 58.84 samples/s lr: 8.00e-04  
[08/25 04:03:24] lb.utils.events INFO:  eta: 0:09:52  iteration: 1319/10000  consumed_samples: 5280  total_loss: 6.105e-08  time: 0.0680 s/iter  data_time: 0.0009 s/iter total_throughput: 58.83 samples/s lr: 8.00e-04  
[08/25 04:03:26] lb.utils.events INFO:  eta: 0:09:51  iteration: 1339/10000  consumed_samples: 5360  total_loss: 5.874e-08  time: 0.0680 s/iter  data_time: 0.0009 s/iter total_throughput: 58.81 samples/s lr: 8.00e-04  
[08/25 04:03:27] lb.utils.events INFO:  eta: 0:09:50  iteration: 1359/10000  consumed_samples: 5440  total_loss: 5.727e-08  time: 0.0680 s/iter  data_time: 0.0008 s/iter total_throughput: 58.80 samples/s lr: 8.00e-04  
[08/25 04:03:28] lb.utils.events INFO:  eta: 0:09:49  iteration: 1379/10000  consumed_samples: 5520  total_loss: 5.499e-08  time: 0.0680 s/iter  data_time: 0.0008 s/iter total_throughput: 58.78 samples/s lr: 8.00e-04  
[08/25 04:03:30] lb.utils.events INFO:  eta: 0:09:48  iteration: 1399/10000  consumed_samples: 5600  total_loss: 5.387e-08  time: 0.0681 s/iter  data_time: 0.0008 s/iter total_throughput: 58.77 samples/s lr: 8.00e-04  
[08/25 04:03:31] lb.utils.events INFO:  eta: 0:09:46  iteration: 1419/10000  consumed_samples: 5680  total_loss: 5.25e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.77 samples/s lr: 8.00e-04  
[08/25 04:03:32] lb.utils.events INFO:  eta: 0:09:45  iteration: 1439/10000  consumed_samples: 5760  total_loss: 5.11e-08  time: 0.0681 s/iter  data_time: 0.0005 s/iter total_throughput: 58.77 samples/s lr: 8.00e-04  
[08/25 04:03:34] lb.utils.events INFO:  eta: 0:09:44  iteration: 1459/10000  consumed_samples: 5840  total_loss: 4.991e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.77 samples/s lr: 8.00e-04  
[08/25 04:03:35] lb.utils.events INFO:  eta: 0:09:42  iteration: 1479/10000  consumed_samples: 5920  total_loss: 4.864e-08  time: 0.0681 s/iter  data_time: 0.0005 s/iter total_throughput: 58.77 samples/s lr: 8.00e-04  
[08/25 04:03:37] lb.utils.events INFO:  eta: 0:09:41  iteration: 1499/10000  consumed_samples: 6000  total_loss: 4.761e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.77 samples/s lr: 8.00e-04  
[08/25 04:03:38] lb.utils.events INFO:  eta: 0:09:40  iteration: 1519/10000  consumed_samples: 6080  total_loss: 4.636e-08  time: 0.0681 s/iter  data_time: 0.0007 s/iter total_throughput: 58.76 samples/s lr: 8.00e-04  
[08/25 04:03:39] lb.utils.events INFO:  eta: 0:09:38  iteration: 1539/10000  consumed_samples: 6160  total_loss: 4.496e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.76 samples/s lr: 8.00e-04  
[08/25 04:03:41] lb.utils.events INFO:  eta: 0:09:37  iteration: 1559/10000  consumed_samples: 6240  total_loss: 4.421e-08  time: 0.0681 s/iter  data_time: 0.0003 s/iter total_throughput: 58.76 samples/s lr: 8.00e-04  
[08/25 04:03:42] lb.utils.events INFO:  eta: 0:09:36  iteration: 1579/10000  consumed_samples: 6320  total_loss: 4.267e-08  time: 0.0681 s/iter  data_time: 0.0007 s/iter total_throughput: 58.75 samples/s lr: 8.00e-04  
[08/25 04:03:43] lb.utils.events INFO:  eta: 0:09:34  iteration: 1599/10000  consumed_samples: 6400  total_loss: 4.18e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.75 samples/s lr: 8.00e-04  
[08/25 04:03:45] lb.utils.events INFO:  eta: 0:09:33  iteration: 1619/10000  consumed_samples: 6480  total_loss: 4.063e-08  time: 0.0681 s/iter  data_time: 0.0006 s/iter total_throughput: 58.75 samples/s lr: 8.00e-04  
[08/25 04:03:46] lb.utils.events INFO:  eta: 0:09:32  iteration: 1639/10000  consumed_samples: 6560  total_loss: 3.983e-08  time: 0.0681 s/iter  data_time: 0.0003 s/iter total_throughput: 58.75 samples/s lr: 8.00e-04  
[08/25 04:03:47] lb.utils.events INFO:  eta: 0:09:30  iteration: 1659/10000  consumed_samples: 6640  total_loss: 3.878e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.75 samples/s lr: 8.00e-04  
[08/25 04:03:49] lb.utils.events INFO:  eta: 0:09:29  iteration: 1679/10000  consumed_samples: 6720  total_loss: 3.779e-08  time: 0.0681 s/iter  data_time: 0.0004 s/iter total_throughput: 58.76 samples/s lr: 8.00e-04  
[08/25 07:13:57] libai INFO: Rank of current process: 0. World size: 1
[08/25 07:13:57] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/25 07:13:57] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/25 07:13:57] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/25 07:13:57] lb.engine.default INFO: > compiling dataset index builder ...
[08/25 07:13:57] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.042 seconds
[08/25 07:13:57] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.042 seconds
[08/25 07:13:57] lb.engine.default INFO: Prepare training, validating, testing set
[08/25 07:13:59] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/25 07:14:01] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/25 07:14:02] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/25 07:14:02] lb.engine.trainer INFO: Starting training from iteration 0
[08/25 07:14:02] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/25 07:14:14] lb.utils.events INFO:  eta: 0:09:29  iteration: 19/10000  consumed_samples: 80  total_loss: 0.08902  time: 0.0571 s/iter  data_time: 0.0006 s/iter total_throughput: 70.00 samples/s lr: 8.00e-04  
[08/25 07:14:16] lb.utils.events INFO:  eta: 0:09:28  iteration: 39/10000  consumed_samples: 160  total_loss: 0.05999  time: 0.0570 s/iter  data_time: 0.0005 s/iter total_throughput: 70.16 samples/s lr: 8.00e-04  
[08/25 07:14:17] lb.utils.events INFO:  eta: 0:09:28  iteration: 59/10000  consumed_samples: 240  total_loss: 0.04503  time: 0.0571 s/iter  data_time: 0.0005 s/iter total_throughput: 70.08 samples/s lr: 8.00e-04  
[08/25 07:14:18] lb.utils.events INFO:  eta: 0:09:27  iteration: 79/10000  consumed_samples: 320  total_loss: 0.03401  time: 0.0571 s/iter  data_time: 0.0005 s/iter total_throughput: 70.05 samples/s lr: 8.00e-04  
[08/25 07:14:19] lb.utils.events INFO:  eta: 0:09:26  iteration: 99/10000  consumed_samples: 400  total_loss: 0.02279  time: 0.0571 s/iter  data_time: 0.0006 s/iter total_throughput: 70.03 samples/s lr: 8.00e-04  
[08/25 07:14:20] lb.utils.events INFO:  eta: 0:09:25  iteration: 119/10000  consumed_samples: 480  total_loss: 0.01227  time: 0.0571 s/iter  data_time: 0.0005 s/iter total_throughput: 69.99 samples/s lr: 8.00e-04  
[08/25 07:14:21] lb.utils.events INFO:  eta: 0:09:24  iteration: 139/10000  consumed_samples: 560  total_loss: 0.003795  time: 0.0572 s/iter  data_time: 0.0005 s/iter total_throughput: 69.96 samples/s lr: 8.00e-04  
[08/25 07:14:22] lb.utils.events INFO:  eta: 0:09:23  iteration: 159/10000  consumed_samples: 640  total_loss: 0.001745  time: 0.0572 s/iter  data_time: 0.0005 s/iter total_throughput: 69.95 samples/s lr: 8.00e-04  
[08/25 07:14:24] lb.utils.events INFO:  eta: 0:09:22  iteration: 179/10000  consumed_samples: 720  total_loss: 0.001188  time: 0.0572 s/iter  data_time: 0.0006 s/iter total_throughput: 69.93 samples/s lr: 8.00e-04  
[08/25 07:14:25] lb.utils.events INFO:  eta: 0:09:21  iteration: 199/10000  consumed_samples: 800  total_loss: 0.0009305  time: 0.0572 s/iter  data_time: 0.0005 s/iter total_throughput: 69.91 samples/s lr: 8.00e-04  
[08/25 07:14:26] lb.utils.events INFO:  eta: 0:09:20  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0006483  time: 0.0572 s/iter  data_time: 0.0005 s/iter total_throughput: 69.89 samples/s lr: 8.00e-04  
[08/25 07:14:27] lb.utils.events INFO:  eta: 0:09:19  iteration: 239/10000  consumed_samples: 960  total_loss: 0.000485  time: 0.0572 s/iter  data_time: 0.0006 s/iter total_throughput: 69.87 samples/s lr: 8.00e-04  
[08/25 07:14:28] lb.utils.events INFO:  eta: 0:09:18  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.0003621  time: 0.0573 s/iter  data_time: 0.0005 s/iter total_throughput: 69.83 samples/s lr: 8.00e-04  
[08/25 07:14:29] lb.utils.events INFO:  eta: 0:09:17  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.0002258  time: 0.0573 s/iter  data_time: 0.0006 s/iter total_throughput: 69.82 samples/s lr: 8.00e-04  
[08/25 07:14:31] lb.utils.events INFO:  eta: 0:09:16  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.0001033  time: 0.0573 s/iter  data_time: 0.0005 s/iter total_throughput: 69.78 samples/s lr: 8.00e-04  
[08/25 07:14:32] lb.utils.events INFO:  eta: 0:09:15  iteration: 319/10000  consumed_samples: 1280  total_loss: 3.722e-05  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.78 samples/s lr: 8.00e-04  
[08/25 07:14:33] lb.utils.events INFO:  eta: 0:09:14  iteration: 339/10000  consumed_samples: 1360  total_loss: 1.861e-05  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.77 samples/s lr: 8.00e-04  
[08/25 07:14:34] lb.utils.events INFO:  eta: 0:09:13  iteration: 359/10000  consumed_samples: 1440  total_loss: 1.328e-05  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.77 samples/s lr: 8.00e-04  
[08/25 07:14:35] lb.utils.events INFO:  eta: 0:09:12  iteration: 379/10000  consumed_samples: 1520  total_loss: 1.079e-05  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.75 samples/s lr: 8.00e-04  
[08/25 07:14:36] lb.utils.events INFO:  eta: 0:09:11  iteration: 399/10000  consumed_samples: 1600  total_loss: 9.236e-06  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.76 samples/s lr: 8.00e-04  
[08/25 07:14:37] lb.utils.events INFO:  eta: 0:09:10  iteration: 419/10000  consumed_samples: 1680  total_loss: 8.122e-06  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.76 samples/s lr: 8.00e-04  
[08/25 07:14:39] lb.utils.events INFO:  eta: 0:09:08  iteration: 439/10000  consumed_samples: 1760  total_loss: 7.167e-06  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.77 samples/s lr: 8.00e-04  
[08/25 07:14:40] lb.utils.events INFO:  eta: 0:09:07  iteration: 459/10000  consumed_samples: 1840  total_loss: 6.481e-06  time: 0.0573 s/iter  data_time: 0.0010 s/iter total_throughput: 69.77 samples/s lr: 8.00e-04  
[08/25 07:14:41] lb.utils.events INFO:  eta: 0:09:06  iteration: 479/10000  consumed_samples: 1920  total_loss: 5.907e-06  time: 0.0573 s/iter  data_time: 0.0006 s/iter total_throughput: 69.76 samples/s lr: 8.00e-04  
[08/25 07:14:42] lb.utils.events INFO:  eta: 0:09:05  iteration: 499/10000  consumed_samples: 2000  total_loss: 5.411e-06  time: 0.0573 s/iter  data_time: 0.0008 s/iter total_throughput: 69.77 samples/s lr: 8.00e-04  
[08/25 07:14:43] lb.utils.events INFO:  eta: 0:09:04  iteration: 519/10000  consumed_samples: 2080  total_loss: 5.029e-06  time: 0.0573 s/iter  data_time: 0.0005 s/iter total_throughput: 69.77 samples/s lr: 8.00e-04  
[08/25 07:15:51] libai INFO: Rank of current process: 0. World size: 1
[08/25 07:15:51] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/25 07:15:51] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/25 07:15:51] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/25 07:15:51] lb.engine.default INFO: > compiling dataset index builder ...
[08/25 07:15:51] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.051 seconds
[08/25 07:15:51] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.052 seconds
[08/25 07:15:51] lb.engine.default INFO: Prepare training, validating, testing set
[08/25 07:15:53] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/25 07:15:55] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/25 07:15:55] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/25 07:15:56] lb.engine.trainer INFO: Starting training from iteration 0
[08/25 07:15:56] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/25 07:16:06] lb.utils.events INFO:  eta: 0:09:26  iteration: 19/10000  consumed_samples: 80  total_loss: 0.08907  time: 0.0576 s/iter  data_time: 0.0004 s/iter total_throughput: 69.46 samples/s lr: 8.00e-04  
[08/25 07:16:07] lb.utils.events INFO:  eta: 0:09:25  iteration: 39/10000  consumed_samples: 160  total_loss: 0.0601  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.10 samples/s lr: 8.00e-04  
[08/25 07:16:08] lb.utils.events INFO:  eta: 0:09:24  iteration: 59/10000  consumed_samples: 240  total_loss: 0.04511  time: 0.0570 s/iter  data_time: 0.0009 s/iter total_throughput: 70.23 samples/s lr: 8.00e-04  
[08/25 07:16:10] lb.utils.events INFO:  eta: 0:09:23  iteration: 79/10000  consumed_samples: 320  total_loss: 0.03406  time: 0.0569 s/iter  data_time: 0.0011 s/iter total_throughput: 70.31 samples/s lr: 8.00e-04  
[08/25 07:16:11] lb.utils.events INFO:  eta: 0:09:22  iteration: 99/10000  consumed_samples: 400  total_loss: 0.02362  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.33 samples/s lr: 8.00e-04  
[08/25 07:16:12] lb.utils.events INFO:  eta: 0:09:21  iteration: 119/10000  consumed_samples: 480  total_loss: 0.0125  time: 0.0568 s/iter  data_time: 0.0010 s/iter total_throughput: 70.37 samples/s lr: 8.00e-04  
[08/25 07:16:13] lb.utils.events INFO:  eta: 0:09:20  iteration: 139/10000  consumed_samples: 560  total_loss: 0.006207  time: 0.0568 s/iter  data_time: 0.0009 s/iter total_throughput: 70.38 samples/s lr: 8.00e-04  
[08/25 07:16:14] lb.utils.events INFO:  eta: 0:09:19  iteration: 159/10000  consumed_samples: 640  total_loss: 0.003708  time: 0.0568 s/iter  data_time: 0.0009 s/iter total_throughput: 70.36 samples/s lr: 8.00e-04  
[08/25 07:16:15] lb.utils.events INFO:  eta: 0:09:18  iteration: 179/10000  consumed_samples: 720  total_loss: 0.002465  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.35 samples/s lr: 8.00e-04  
[08/25 07:16:16] lb.utils.events INFO:  eta: 0:09:17  iteration: 199/10000  consumed_samples: 800  total_loss: 0.001415  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.33 samples/s lr: 8.00e-04  
[08/25 07:16:18] lb.utils.events INFO:  eta: 0:09:16  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0008225  time: 0.0569 s/iter  data_time: 0.0008 s/iter total_throughput: 70.33 samples/s lr: 8.00e-04  
[08/25 07:16:19] lb.utils.events INFO:  eta: 0:09:15  iteration: 239/10000  consumed_samples: 960  total_loss: 0.0005976  time: 0.0569 s/iter  data_time: 0.0005 s/iter total_throughput: 70.30 samples/s lr: 8.00e-04  
[08/25 07:16:20] lb.utils.events INFO:  eta: 0:09:14  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.0004031  time: 0.0569 s/iter  data_time: 0.0004 s/iter total_throughput: 70.29 samples/s lr: 8.00e-04  
[08/25 07:16:21] lb.utils.events INFO:  eta: 0:09:13  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.0001423  time: 0.0569 s/iter  data_time: 0.0006 s/iter total_throughput: 70.32 samples/s lr: 8.00e-04  
[08/25 07:16:22] lb.utils.events INFO:  eta: 0:09:12  iteration: 299/10000  consumed_samples: 1200  total_loss: 6.137e-05  time: 0.0569 s/iter  data_time: 0.0004 s/iter total_throughput: 70.33 samples/s lr: 8.00e-04  
[08/25 07:16:23] lb.utils.events INFO:  eta: 0:09:10  iteration: 319/10000  consumed_samples: 1280  total_loss: 3.885e-05  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.35 samples/s lr: 8.00e-04  
[08/25 07:16:24] lb.utils.events INFO:  eta: 0:09:09  iteration: 339/10000  consumed_samples: 1360  total_loss: 2.638e-05  time: 0.0568 s/iter  data_time: 0.0008 s/iter total_throughput: 70.37 samples/s lr: 8.00e-04  
[08/25 07:16:25] lb.utils.events INFO:  eta: 0:09:08  iteration: 359/10000  consumed_samples: 1440  total_loss: 1.767e-05  time: 0.0568 s/iter  data_time: 0.0008 s/iter total_throughput: 70.38 samples/s lr: 8.00e-04  
[08/25 07:16:27] lb.utils.events INFO:  eta: 0:09:07  iteration: 379/10000  consumed_samples: 1520  total_loss: 1.264e-05  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.27 samples/s lr: 8.00e-04  
[08/25 07:16:28] lb.utils.events INFO:  eta: 0:09:06  iteration: 399/10000  consumed_samples: 1600  total_loss: 9.676e-06  time: 0.0569 s/iter  data_time: 0.0006 s/iter total_throughput: 70.29 samples/s lr: 8.00e-04  
[08/25 07:16:29] lb.utils.events INFO:  eta: 0:09:05  iteration: 419/10000  consumed_samples: 1680  total_loss: 7.735e-06  time: 0.0569 s/iter  data_time: 0.0003 s/iter total_throughput: 70.29 samples/s lr: 8.00e-04  
[08/25 07:16:30] lb.utils.events INFO:  eta: 0:09:04  iteration: 439/10000  consumed_samples: 1760  total_loss: 6.017e-06  time: 0.0569 s/iter  data_time: 0.0003 s/iter total_throughput: 70.29 samples/s lr: 8.00e-04  
[08/25 07:16:31] lb.utils.events INFO:  eta: 0:09:02  iteration: 459/10000  consumed_samples: 1840  total_loss: 4.765e-06  time: 0.0569 s/iter  data_time: 0.0008 s/iter total_throughput: 70.29 samples/s lr: 8.00e-04  
[08/25 07:16:32] lb.utils.events INFO:  eta: 0:09:01  iteration: 479/10000  consumed_samples: 1920  total_loss: 3.751e-06  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.30 samples/s lr: 8.00e-04  
[08/25 07:16:33] lb.utils.events INFO:  eta: 0:09:00  iteration: 499/10000  consumed_samples: 2000  total_loss: 3.01e-06  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.31 samples/s lr: 8.00e-04  
[08/25 07:19:34] libai INFO: Rank of current process: 0. World size: 1
[08/25 07:19:34] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/25 07:19:34] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/25 07:19:34] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/25 07:19:34] lb.engine.default INFO: > compiling dataset index builder ...
[08/25 07:19:34] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.050 seconds
[08/25 07:19:34] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.050 seconds
[08/25 07:19:34] lb.engine.default INFO: Prepare training, validating, testing set
[08/25 07:19:36] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/25 07:19:38] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/25 07:19:38] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/25 07:19:38] lb.engine.trainer INFO: Starting training from iteration 0
[08/25 07:19:38] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/25 07:19:49] lb.utils.events INFO:  eta: 0:09:24  iteration: 19/10000  consumed_samples: 80  total_loss: 0.08896  time: 0.0572 s/iter  data_time: 0.0011 s/iter total_throughput: 69.94 samples/s lr: 8.00e-04  
[08/25 07:19:50] lb.utils.events INFO:  eta: 0:09:23  iteration: 39/10000  consumed_samples: 160  total_loss: 0.05994  time: 0.0567 s/iter  data_time: 0.0009 s/iter total_throughput: 70.49 samples/s lr: 8.00e-04  
[08/25 07:19:51] lb.utils.events INFO:  eta: 0:09:22  iteration: 59/10000  consumed_samples: 240  total_loss: 0.04499  time: 0.0566 s/iter  data_time: 0.0010 s/iter total_throughput: 70.62 samples/s lr: 8.00e-04  
[08/25 07:19:52] lb.utils.events INFO:  eta: 0:09:21  iteration: 79/10000  consumed_samples: 320  total_loss: 0.03388  time: 0.0567 s/iter  data_time: 0.0009 s/iter total_throughput: 70.60 samples/s lr: 8.00e-04  
[08/25 07:19:54] lb.utils.events INFO:  eta: 0:09:20  iteration: 99/10000  consumed_samples: 400  total_loss: 0.0249  time: 0.0567 s/iter  data_time: 0.0008 s/iter total_throughput: 70.61 samples/s lr: 8.00e-04  
[08/25 07:19:55] lb.utils.events INFO:  eta: 0:09:20  iteration: 119/10000  consumed_samples: 480  total_loss: 0.01676  time: 0.0567 s/iter  data_time: 0.0005 s/iter total_throughput: 70.57 samples/s lr: 8.00e-04  
[08/25 07:19:56] lb.utils.events INFO:  eta: 0:09:19  iteration: 139/10000  consumed_samples: 560  total_loss: 0.005576  time: 0.0567 s/iter  data_time: 0.0010 s/iter total_throughput: 70.57 samples/s lr: 8.00e-04  
[08/25 07:19:57] lb.utils.events INFO:  eta: 0:09:18  iteration: 159/10000  consumed_samples: 640  total_loss: 0.00211  time: 0.0567 s/iter  data_time: 0.0010 s/iter total_throughput: 70.58 samples/s lr: 8.00e-04  
[08/25 07:19:58] lb.utils.events INFO:  eta: 0:09:17  iteration: 179/10000  consumed_samples: 720  total_loss: 0.001491  time: 0.0567 s/iter  data_time: 0.0010 s/iter total_throughput: 70.57 samples/s lr: 8.00e-04  
[08/25 07:19:59] lb.utils.events INFO:  eta: 0:09:16  iteration: 199/10000  consumed_samples: 800  total_loss: 0.001166  time: 0.0567 s/iter  data_time: 0.0008 s/iter total_throughput: 70.56 samples/s lr: 8.00e-04  
[08/25 07:20:00] lb.utils.events INFO:  eta: 0:09:15  iteration: 219/10000  consumed_samples: 880  total_loss: 0.0007547  time: 0.0567 s/iter  data_time: 0.0009 s/iter total_throughput: 70.55 samples/s lr: 8.00e-04  
[08/25 07:20:02] lb.utils.events INFO:  eta: 0:09:14  iteration: 239/10000  consumed_samples: 960  total_loss: 0.0005719  time: 0.0567 s/iter  data_time: 0.0008 s/iter total_throughput: 70.54 samples/s lr: 8.00e-04  
[08/25 07:20:03] lb.utils.events INFO:  eta: 0:09:13  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.0004445  time: 0.0567 s/iter  data_time: 0.0005 s/iter total_throughput: 70.53 samples/s lr: 8.00e-04  
[08/25 07:20:04] lb.utils.events INFO:  eta: 0:09:12  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.0002835  time: 0.0567 s/iter  data_time: 0.0004 s/iter total_throughput: 70.51 samples/s lr: 8.00e-04  
[08/25 07:20:05] lb.utils.events INFO:  eta: 0:09:11  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.000126  time: 0.0568 s/iter  data_time: 0.0004 s/iter total_throughput: 70.48 samples/s lr: 8.00e-04  
[08/25 07:20:06] lb.utils.events INFO:  eta: 0:09:10  iteration: 319/10000  consumed_samples: 1280  total_loss: 4.508e-05  time: 0.0568 s/iter  data_time: 0.0004 s/iter total_throughput: 70.45 samples/s lr: 8.00e-04  
[08/25 07:20:07] lb.utils.events INFO:  eta: 0:09:09  iteration: 339/10000  consumed_samples: 1360  total_loss: 2.446e-05  time: 0.0568 s/iter  data_time: 0.0004 s/iter total_throughput: 70.43 samples/s lr: 8.00e-04  
[08/25 07:20:08] lb.utils.events INFO:  eta: 0:09:08  iteration: 359/10000  consumed_samples: 1440  total_loss: 1.701e-05  time: 0.0568 s/iter  data_time: 0.0005 s/iter total_throughput: 70.41 samples/s lr: 8.00e-04  
[08/25 07:20:10] lb.utils.events INFO:  eta: 0:09:07  iteration: 379/10000  consumed_samples: 1520  total_loss: 1.281e-05  time: 0.0568 s/iter  data_time: 0.0004 s/iter total_throughput: 70.39 samples/s lr: 8.00e-04  
[08/25 07:20:11] lb.utils.events INFO:  eta: 0:09:06  iteration: 399/10000  consumed_samples: 1600  total_loss: 1.006e-05  time: 0.0568 s/iter  data_time: 0.0008 s/iter total_throughput: 70.37 samples/s lr: 8.00e-04  
[08/25 07:25:37] libai INFO: Rank of current process: 0. World size: 1
[08/25 07:25:37] libai INFO: Command line arguments: Namespace(config_file='projects/RWKV_v4/configs/config_test.py', eval_only=False, fast_dev_run=False, opts=[], resume=False)
[08/25 07:25:37] libai INFO: Contents of args.config_file=projects/RWKV_v4/configs/config_test.py:
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15momegaconf[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mOmegaConf[39m

[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mLazyCall[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mtokenizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT2Tokenizer[39m
[38;5;242m# 配置 dataloader `build_image_train_loader` 和 `build_image_test_loader` 是 LiBai 提供的用于创建图像数据的训练集和测试集 DataLoader 的两个函数[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mlibai[39m[38;5;15m.[39m[38;5;15mdata[39m[38;5;15m.[39m[38;5;15mbuild[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mbuild_nlp_test_loader[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15mbuild_nlp_train_loader[39m
[38;5;197mimport[39m[38;5;15m [39m[38;5;15moneflow[39m[38;5;15m [39m[38;5;81mas[39m[38;5;15m [39m[38;5;15mflow[39m

[38;5;242m# 配置 model[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mmodeling[39m[38;5;15m.[39m[38;5;15mmodel[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mGPT[39m[38;5;15m [39m[38;5;15m,[39m[38;5;15mGPTConfig[39m
[38;5;242m# 导入自定义的 dataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mdataset[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mRWKVDataset[39m
[38;5;197mfrom[39m[38;5;15m [39m[38;5;15mprojects[39m[38;5;15m.[39m[38;5;15mRWKV_v4[39m[38;5;15m.[39m[38;5;15mutils[39m[38;5;15m.[39m[38;5;15mconfig_optimizer[39m[38;5;15m [39m[38;5;197mimport[39m[38;5;15m [39m[38;5;15mget_RWKV_v4_config_optim[39m


[38;5;15mtest[39m[38;5;197m=[39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15menable[39m[38;5;197m=[39m[38;5;81mTrue[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mweight_style[39m[38;5;197m=[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;186m"[39m[38;5;186mpytorch[39m[38;5;186m"[39m
[38;5;15m)[39m
[38;5;15mtest[39m[38;5;197m.[39m[38;5;15mpath[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth[39m[38;5;186m"[39m

[38;5;15mgraph[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/models/graph.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mgraph[39m

[38;5;15mgraph[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;242m# optim = get_config("common/optim.py").optim[39m
[38;5;15moptim[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mAdam[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mparams[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mget_RWKV_v4_config_optim[39m[38;5;15m)[39m[38;5;15m([39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mlr[39m[38;5;197m=[39m[38;5;141m8e-4[39m[38;5;15m,[39m
[38;5;15m)[39m


[38;5;242m# 配置model[39m
[38;5;15mmodel[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mGPT[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mvocab_size[39m[38;5;197m=[39m[38;5;141m6064[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mmodel_type[39m[38;5;197m=[39m[38;5;186m'[39m[38;5;186mRWKV[39m[38;5;186m'[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_layer[39m[38;5;197m=[39m[38;5;141m6[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mn_embd[39m[38;5;197m=[39m[38;5;141m512[39m
[38;5;15m)[39m

[38;5;242m# 训练过程[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;197m.[39m[38;5;15mtrain[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15minput_placement_device[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcpu[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mdist[39m[38;5;197m.[39m[38;5;15mpipeline_num_layers[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_micro_batch_size[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mscheduler[39m[38;5;197m=[39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mflow[39m[38;5;197m.[39m[38;5;15moptim[39m[38;5;197m.[39m[38;5;15mlr_scheduler[39m[38;5;197m.[39m[38;5;15mStepLR[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m        [39m[38;5;15mstep_size[39m[38;5;197m=[39m[38;5;141m1000[39m[38;5;15m,[39m[38;5;15m [39m
[38;5;15m        [39m[38;5;15mgamma[39m[38;5;197m=[39m[38;5;141m1.0[39m
[38;5;15m)[39m[38;5;15m [39m

[38;5;242m# false = fp32[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mamp[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m

[38;5;15mdatafile[39m[38;5;197m=[39m[38;5;186m"[39m[38;5;186m/home/zhangxiaoyu/RWKV-LM/data/enwik8[39m[38;5;186m"[39m
[38;5;242m# 获得一个 DataLoader 的配置对象[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mOmegaConf[39m[38;5;197m.[39m[38;5;15mcreate[39m[38;5;15m([39m[38;5;15m)[39m
[38;5;15mdataloader[39m[38;5;197m.[39m[38;5;15mtrain[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mbuild_nlp_train_loader[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m    [39m[38;5;15mdataset[39m[38;5;197m=[39m[38;5;15m[[39m
[38;5;15m        [39m[38;5;15mLazyCall[39m[38;5;15m([39m[38;5;15mRWKVDataset[39m[38;5;15m)[39m[38;5;15m([39m
[38;5;15m            [39m[38;5;15mdata_dir[39m[38;5;197m=[39m[38;5;15mdatafile[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mctx_len[39m[38;5;197m=[39m[38;5;141m1024[39m[38;5;15m,[39m
[38;5;15m            [39m[38;5;15mepoch_length_fixed[39m[38;5;197m=[39m[38;5;141m9996[39m[38;5;15m,[39m
[38;5;15m        [39m[38;5;15m)[39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15m][39m[38;5;15m,[39m
[38;5;15m    [39m[38;5;15mnum_workers[39m[38;5;197m=[39m[38;5;141m4[39m[38;5;15m,[39m
[38;5;15m)[39m

[38;5;242m# train.train_iter=3[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mtrain_epoch[39m[38;5;197m=[39m[38;5;141m1[39m

[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186moutput/rwkv_output_loss_compare[39m[38;5;186m"[39m
[38;5;242m# train.load_weight = "/home/zhangxiaoyu/RWKV-LM/libai/projects/RWKV_v4/model/output_model/" # 采用同一个model进行初始化[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mrdma_enabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# model.cfg.hidden_dropout_prob= 0.0 # 关闭所有的dropout[39m
[38;5;242m# model.cfg.attention_probs_dropout_prob= 0.0[39m
[38;5;242m# model.cfg.bias_dropout_fusion= False[39m

[38;5;242m# train.dist.pipeline_parallel_size=2[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mevaluation[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;197m=[39m[38;5;15m [39m[38;5;81mFalse[39m

[38;5;242m# train.train_iter=5[39m
[38;5;242m# train.dist.tensor_parallel_size = 2  # 并行度为 4 的模型并行[39m
[38;5;242m# train.dist.tensor_parallel_size = 4  # 并行度为 4 的模型并行[39m
[38;5;15mtrain[39m[38;5;197m.[39m[38;5;15mactivation_checkpoint[39m[38;5;197m.[39m[38;5;15menabled[39m[38;5;197m=[39m[38;5;81mTrue[39m[38;5;15m [39m

[08/25 07:25:37] libai INFO: Full config saved to output/rwkv_output_loss_compare/config.yaml
[08/25 07:25:37] lb.engine.default INFO: > compiling dataset index builder ...
[08/25 07:25:37] lb.engine.default INFO: >>> done with dataset index builder. Compilation time: 0.046 seconds
[08/25 07:25:37] lb.engine.default INFO: >>> done with compiling. Compilation time: 0.047 seconds
[08/25 07:25:37] lb.engine.default INFO: Prepare training, validating, testing set
[08/25 07:25:39] lb.engine.default INFO: Auto-scaling the config to train.train_iter=10000, train.warmup_iter=0
[08/25 07:25:41] lb.engine.default INFO: Model:
GPT(
  (emb): VocabEmbedding(num_embeddings=6064, embedding_dim=512)
  (blocks): Sequential(
    (0): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln0): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (1): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (2): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (3): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (4): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
    (5): Block(
      (ln1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (ln2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (att): RWKV_TimeMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (output): Linear1D(in_features=512, out_features=512, bias=False, parallel=row)
      )
      (ffn): RWKV_ChannelMix(
        (time_shift): ZeroPad2d()
        (key): Linear1D(in_features=512, out_features=2048, bias=False, parallel=col)
        (receptance): Linear1D(in_features=512, out_features=512, bias=False, parallel=col)
        (value): Linear1D(in_features=2048, out_features=512, bias=False, parallel=row)
      )
    )
  )
  (ln_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  (head): Linear1D(in_features=512, out_features=6064, bias=False, parallel=row)
  (head_q): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
  (head_k): Linear1D(in_features=512, out_features=256, bias=False, parallel=col)
)
[08/25 07:25:41] lb.__main__ INFO: Loading pretrained weight for test /home/zhangxiaoyu/RWKV-LM/RWKV-v4/for_load.pth
[08/25 07:25:42] lb.engine.trainer INFO: Starting training from iteration 0
[08/25 07:25:42] lb.models.utils.graph_base INFO: Start compling the train graph which may take some time. Please wait for a moment ...
[08/25 07:25:52] lb.utils.events INFO:  eta: 0:09:31  iteration: 19/10000  consumed_samples: 80  total_loss: 0.08914  time: 0.0577 s/iter  data_time: 0.0010 s/iter total_throughput: 69.31 samples/s lr: 8.00e-04  
[08/25 07:25:53] lb.utils.events INFO:  eta: 0:09:27  iteration: 39/10000  consumed_samples: 160  total_loss: 0.06007  time: 0.0571 s/iter  data_time: 0.0008 s/iter total_throughput: 70.10 samples/s lr: 8.00e-04  
[08/25 07:25:55] lb.utils.events INFO:  eta: 0:09:25  iteration: 59/10000  consumed_samples: 240  total_loss: 0.04509  time: 0.0570 s/iter  data_time: 0.0009 s/iter total_throughput: 70.19 samples/s lr: 8.00e-04  
[08/25 07:25:56] lb.utils.events INFO:  eta: 0:09:24  iteration: 79/10000  consumed_samples: 320  total_loss: 0.03405  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.27 samples/s lr: 8.00e-04  
[08/25 07:25:57] lb.utils.events INFO:  eta: 0:09:23  iteration: 99/10000  consumed_samples: 400  total_loss: 0.02287  time: 0.0569 s/iter  data_time: 0.0008 s/iter total_throughput: 70.25 samples/s lr: 8.00e-04  
[08/25 07:25:58] lb.utils.events INFO:  eta: 0:09:21  iteration: 119/10000  consumed_samples: 480  total_loss: 0.01246  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.28 samples/s lr: 8.00e-04  
[08/25 07:25:59] lb.utils.events INFO:  eta: 0:09:21  iteration: 139/10000  consumed_samples: 560  total_loss: 0.006369  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.27 samples/s lr: 8.00e-04  
[08/25 07:26:00] lb.utils.events INFO:  eta: 0:09:20  iteration: 159/10000  consumed_samples: 640  total_loss: 0.00267  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.27 samples/s lr: 8.00e-04  
[08/25 07:26:01] lb.utils.events INFO:  eta: 0:09:19  iteration: 179/10000  consumed_samples: 720  total_loss: 0.002107  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.26 samples/s lr: 8.00e-04  
[08/25 07:26:03] lb.utils.events INFO:  eta: 0:09:18  iteration: 199/10000  consumed_samples: 800  total_loss: 0.001618  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.25 samples/s lr: 8.00e-04  
[08/25 07:26:04] lb.utils.events INFO:  eta: 0:09:17  iteration: 219/10000  consumed_samples: 880  total_loss: 0.001201  time: 0.0569 s/iter  data_time: 0.0009 s/iter total_throughput: 70.26 samples/s lr: 8.00e-04  
[08/25 07:26:05] lb.utils.events INFO:  eta: 0:09:16  iteration: 239/10000  consumed_samples: 960  total_loss: 0.0006693  time: 0.0570 s/iter  data_time: 0.0009 s/iter total_throughput: 70.22 samples/s lr: 8.00e-04  
[08/25 07:26:06] lb.utils.events INFO:  eta: 0:09:15  iteration: 259/10000  consumed_samples: 1040  total_loss: 0.0004717  time: 0.0570 s/iter  data_time: 0.0010 s/iter total_throughput: 70.23 samples/s lr: 8.00e-04  
[08/25 07:26:07] lb.utils.events INFO:  eta: 0:09:14  iteration: 279/10000  consumed_samples: 1120  total_loss: 0.0002959  time: 0.0570 s/iter  data_time: 0.0009 s/iter total_throughput: 70.20 samples/s lr: 8.00e-04  
[08/25 07:26:08] lb.utils.events INFO:  eta: 0:09:13  iteration: 299/10000  consumed_samples: 1200  total_loss: 0.0001375  time: 0.0570 s/iter  data_time: 0.0009 s/iter total_throughput: 70.16 samples/s lr: 8.00e-04  
[08/25 07:26:09] lb.utils.events INFO:  eta: 0:09:12  iteration: 319/10000  consumed_samples: 1280  total_loss: 7.747e-05  time: 0.0570 s/iter  data_time: 0.0010 s/iter total_throughput: 70.13 samples/s lr: 8.00e-04  
[08/25 07:26:11] lb.utils.events INFO:  eta: 0:09:11  iteration: 339/10000  consumed_samples: 1360  total_loss: 5.242e-05  time: 0.0570 s/iter  data_time: 0.0009 s/iter total_throughput: 70.14 samples/s lr: 8.00e-04  
[08/25 07:26:12] lb.utils.events INFO:  eta: 0:09:10  iteration: 359/10000  consumed_samples: 1440  total_loss: 3.863e-05  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.10 samples/s lr: 8.00e-04  
[08/25 07:26:13] lb.utils.events INFO:  eta: 0:09:09  iteration: 379/10000  consumed_samples: 1520  total_loss: 2.809e-05  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.09 samples/s lr: 8.00e-04  
[08/25 07:26:14] lb.utils.events INFO:  eta: 0:09:08  iteration: 399/10000  consumed_samples: 1600  total_loss: 2.185e-05  time: 0.0571 s/iter  data_time: 0.0010 s/iter total_throughput: 70.07 samples/s lr: 8.00e-04  
[08/25 07:26:15] lb.utils.events INFO:  eta: 0:09:07  iteration: 419/10000  consumed_samples: 1680  total_loss: 1.741e-05  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.07 samples/s lr: 8.00e-04  
[08/25 07:26:16] lb.utils.events INFO:  eta: 0:09:06  iteration: 439/10000  consumed_samples: 1760  total_loss: 1.352e-05  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.08 samples/s lr: 8.00e-04  
[08/25 07:26:18] lb.utils.events INFO:  eta: 0:09:05  iteration: 459/10000  consumed_samples: 1840  total_loss: 9.517e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.06 samples/s lr: 8.00e-04  
[08/25 07:26:19] lb.utils.events INFO:  eta: 0:09:04  iteration: 479/10000  consumed_samples: 1920  total_loss: 6.585e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.06 samples/s lr: 8.00e-04  
[08/25 07:26:20] lb.utils.events INFO:  eta: 0:09:03  iteration: 499/10000  consumed_samples: 2000  total_loss: 4.851e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.06 samples/s lr: 8.00e-04  
[08/25 07:26:21] lb.utils.events INFO:  eta: 0:09:02  iteration: 519/10000  consumed_samples: 2080  total_loss: 4.006e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.06 samples/s lr: 8.00e-04  
[08/25 07:26:22] lb.utils.events INFO:  eta: 0:09:01  iteration: 539/10000  consumed_samples: 2160  total_loss: 3.393e-06  time: 0.0571 s/iter  data_time: 0.0007 s/iter total_throughput: 70.06 samples/s lr: 8.00e-04  
[08/25 07:26:23] lb.utils.events INFO:  eta: 0:09:00  iteration: 559/10000  consumed_samples: 2240  total_loss: 2.996e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.06 samples/s lr: 8.00e-04  
[08/25 07:26:24] lb.utils.events INFO:  eta: 0:08:58  iteration: 579/10000  consumed_samples: 2320  total_loss: 2.672e-06  time: 0.0571 s/iter  data_time: 0.0006 s/iter total_throughput: 70.05 samples/s lr: 8.00e-04  
[08/25 07:26:26] lb.utils.events INFO:  eta: 0:08:57  iteration: 599/10000  consumed_samples: 2400  total_loss: 2.4e-06  time: 0.0571 s/iter  data_time: 0.0005 s/iter total_throughput: 70.05 samples/s lr: 8.00e-04  
[08/25 07:26:27] lb.utils.events INFO:  eta: 0:08:56  iteration: 619/10000  consumed_samples: 2480  total_loss: 2.154e-06  time: 0.0571 s/iter  data_time: 0.0008 s/iter total_throughput: 70.04 samples/s lr: 8.00e-04  
[08/25 07:26:28] lb.utils.events INFO:  eta: 0:08:55  iteration: 639/10000  consumed_samples: 2560  total_loss: 1.97e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.03 samples/s lr: 8.00e-04  
[08/25 07:26:29] lb.utils.events INFO:  eta: 0:08:54  iteration: 659/10000  consumed_samples: 2640  total_loss: 1.795e-06  time: 0.0571 s/iter  data_time: 0.0009 s/iter total_throughput: 70.03 samples/s lr: 8.00e-04  
[08/25 07:26:30] lb.utils.events INFO:  eta: 0:08:53  iteration: 679/10000  consumed_samples: 2720  total_loss: 1.687e-06  time: 0.0571 s/iter  data_time: 0.0004 s/iter total_throughput: 70.02 samples/s lr: 8.00e-04  
[08/25 07:26:31] lb.utils.events INFO:  eta: 0:08:52  iteration: 699/10000  consumed_samples: 2800  total_loss: 1.542e-06  time: 0.0571 s/iter  data_time: 0.0004 s/iter total_throughput: 70.00 samples/s lr: 8.00e-04  
[08/25 07:26:32] lb.utils.events INFO:  eta: 0:08:51  iteration: 719/10000  consumed_samples: 2880  total_loss: 1.428e-06  time: 0.0571 s/iter  data_time: 0.0008 s/iter total_throughput: 70.00 samples/s lr: 8.00e-04  
[08/25 07:26:34] lb.utils.events INFO:  eta: 0:08:50  iteration: 739/10000  consumed_samples: 2960  total_loss: 1.349e-06  time: 0.0571 s/iter  data_time: 0.0008 s/iter total_throughput: 69.99 samples/s lr: 8.00e-04  
[08/25 07:26:35] lb.utils.events INFO:  eta: 0:08:49  iteration: 759/10000  consumed_samples: 3040  total_loss: 1.236e-06  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.95 samples/s lr: 8.00e-04  
[08/25 07:26:36] lb.utils.events INFO:  eta: 0:08:48  iteration: 779/10000  consumed_samples: 3120  total_loss: 1.158e-06  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.98 samples/s lr: 8.00e-04  
[08/25 07:26:37] lb.utils.events INFO:  eta: 0:08:46  iteration: 799/10000  consumed_samples: 3200  total_loss: 1.102e-06  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.92 samples/s lr: 8.00e-04  
[08/25 07:26:38] lb.utils.events INFO:  eta: 0:08:45  iteration: 819/10000  consumed_samples: 3280  total_loss: 1.031e-06  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.91 samples/s lr: 8.00e-04  
[08/25 07:26:39] lb.utils.events INFO:  eta: 0:08:44  iteration: 839/10000  consumed_samples: 3360  total_loss: 9.695e-07  time: 0.0572 s/iter  data_time: 0.0008 s/iter total_throughput: 69.91 samples/s lr: 8.00e-04  
[08/25 07:26:41] lb.utils.events INFO:  eta: 0:08:43  iteration: 859/10000  consumed_samples: 3440  total_loss: 9.295e-07  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.91 samples/s lr: 8.00e-04  
[08/25 07:26:42] lb.utils.events INFO:  eta: 0:08:42  iteration: 879/10000  consumed_samples: 3520  total_loss: 8.88e-07  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.91 samples/s lr: 8.00e-04  
[08/25 07:26:43] lb.utils.events INFO:  eta: 0:08:41  iteration: 899/10000  consumed_samples: 3600  total_loss: 8.375e-07  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.90 samples/s lr: 8.00e-04  
[08/25 07:26:44] lb.utils.events INFO:  eta: 0:08:40  iteration: 919/10000  consumed_samples: 3680  total_loss: 7.963e-07  time: 0.0572 s/iter  data_time: 0.0009 s/iter total_throughput: 69.90 samples/s lr: 8.00e-04  
[08/25 07:26:45] lb.utils.events INFO:  eta: 0:08:39  iteration: 939/10000  consumed_samples: 3760  total_loss: 7.485e-07  time: 0.0572 s/iter  data_time: 0.0007 s/iter total_throughput: 69.89 samples/s lr: 8.00e-04  
[08/25 07:26:46] lb.utils.events INFO:  eta: 0:08:38  iteration: 959/10000  consumed_samples: 3840  total_loss: 7.285e-07  time: 0.0572 s/iter  data_time: 0.0004 s/iter total_throughput: 69.88 samples/s lr: 8.00e-04  
